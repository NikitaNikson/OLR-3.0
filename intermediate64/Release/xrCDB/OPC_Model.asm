; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R4AABBTreeOfTrianglesBuilder@Opcode@@6B@	; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Complete Object Locator'
PUBLIC	??_R3AABBTreeOfTrianglesBuilder@Opcode@@8	; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AABBTreeOfTrianglesBuilder@Opcode@@8	; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AABBTreeOfTrianglesBuilder@Opcode@@8 ; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAABBTreeOfTrianglesBuilder@Opcode@@@8	; Opcode::AABBTreeOfTrianglesBuilder `RTTI Type Descriptor'
PUBLIC	??_R4AABBTreeBuilder@Opcode@@6B@		; Opcode::AABBTreeBuilder::`RTTI Complete Object Locator'
PUBLIC	??_R3AABBTreeBuilder@Opcode@@8			; Opcode::AABBTreeBuilder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AABBTreeBuilder@Opcode@@8			; Opcode::AABBTreeBuilder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AABBTreeBuilder@Opcode@@8		; Opcode::AABBTreeBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAABBTreeBuilder@Opcode@@@8		; Opcode::AABBTreeBuilder `RTTI Type Descriptor'
PUBLIC	??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z ; xr_special_free<1,Opcode::AABBOptimizedTree>::operator()
PUBLIC	??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z ; xr_delete<Opcode::AABBOptimizedTree>
PUBLIC	??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@XZ	; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>
PUBLIC	??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@AEBV0@@Z ; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>
PUBLIC	??0?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@Z ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	??0?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	??0?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	??0?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::poolSS<Opcode::AABBTreeNode,16384>
PUBLIC	??0AABBTreeBuilder@Opcode@@QEAA@XZ		; Opcode::AABBTreeBuilder::AABBTreeBuilder
PUBLIC	??0AABBTreeOfTrianglesBuilder@Opcode@@QEAA@XZ	; Opcode::AABBTreeOfTrianglesBuilder::AABBTreeOfTrianglesBuilder
PUBLIC	?size@?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEBAIXZ ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::size
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >
PUBLIC	?begin@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@2@XZ ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::begin
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEBQEAVAABBTreeNode@Opcode@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEAPEAVAABBTreeNode@Opcode@@XZ ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+
PUBLIC	??A?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAAAEAPEAVAABBTreeNode@Opcode@@_K@Z ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::operator[]
PUBLIC	??1?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Tidy
PUBLIC	??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
PUBLIC	??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z ; xr_free<Opcode::AABBTreeNode>
PUBLIC	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
PUBLIC	??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z		; Opcode::AABBTreeBuilder::`scalar deleting destructor'
PUBLIC	??1AABBTreeBuilder@Opcode@@UEAA@XZ		; Opcode::AABBTreeBuilder::~AABBTreeBuilder
PUBLIC	?GetCenter@AABB@Meshmerizer@@QEBAMI@Z		; Meshmerizer::AABB::GetCenter
PUBLIC	?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z ; Opcode::AABBTreeBuilder::GetSplittingValueEx
PUBLIC	??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z ; Opcode::AABBTreeOfTrianglesBuilder::`scalar deleting destructor'
PUBLIC	??1AABBTreeOfTrianglesBuilder@Opcode@@UEAA@XZ	; Opcode::AABBTreeOfTrianglesBuilder::~AABBTreeOfTrianglesBuilder
PUBLIC	??_GAABBTree@Opcode@@QEAAPEAXI@Z		; Opcode::AABBTree::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z ; xr_special_free<0,Opcode::AABBTree>::operator()
PUBLIC	??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z ; xr_delete<Opcode::AABBTree>
PUBLIC	??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ ; xr_new<Opcode::AABBTree>
PUBLIC	??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ ; xr_new<Opcode::AABBQuantizedNoLeafTree>
PUBLIC	??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ ; xr_new<Opcode::AABBNoLeafTree>
PUBLIC	??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ ; xr_new<Opcode::AABBQuantizedTree>
PUBLIC	??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ ; xr_new<Opcode::AABBCollisionTree>
PUBLIC	??_C@_0FL@HIPFHKCC@OPCODE?5WARNING?3?5found?5?$CFd?5degener@ ; `string'
PUBLIC	??_7AABBTreeBuilder@Opcode@@6B@			; Opcode::AABBTreeBuilder::`vftable'
PUBLIC	??_7AABBTreeOfTrianglesBuilder@Opcode@@6B@	; Opcode::AABBTreeOfTrianglesBuilder::`vftable'
EXTRN	??_EAABBTreeBuilder@Opcode@@UEAAPEAXI@Z:PROC	; Opcode::AABBTreeBuilder::`vector deleting destructor'
EXTRN	??_EAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z:PROC ; Opcode::AABBTreeOfTrianglesBuilder::`vector deleting destructor'
;	COMDAT ??_7AABBTreeOfTrianglesBuilder@Opcode@@6B@
CONST	SEGMENT
??_7AABBTreeOfTrianglesBuilder@Opcode@@6B@ DQ FLAT:??_R4AABBTreeOfTrianglesBuilder@Opcode@@6B@ ; Opcode::AABBTreeOfTrianglesBuilder::`vftable'
	DQ	FLAT:??_EAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z
	DQ	FLAT:?ComputeGlobalBox@AABBTreeOfTrianglesBuilder@Opcode@@UEBA_NPEBIIAEAVAABB@Meshmerizer@@@Z
	DQ	FLAT:?GetSplittingValue@AABBTreeOfTrianglesBuilder@Opcode@@UEBAMII@Z
	DQ	FLAT:?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z
	DQ	FLAT:?GetSplittingValue@AABBTreeOfTrianglesBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z
CONST	ENDS
;	COMDAT ??_R4AABBTreeOfTrianglesBuilder@Opcode@@6B@
rdata$r	SEGMENT
??_R4AABBTreeOfTrianglesBuilder@Opcode@@6B@ DD 01H	; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVAABBTreeOfTrianglesBuilder@Opcode@@@8
	DD	imagerel ??_R3AABBTreeOfTrianglesBuilder@Opcode@@8
	DD	imagerel ??_R4AABBTreeOfTrianglesBuilder@Opcode@@6B@
rdata$r	ENDS
;	COMDAT ??_R3AABBTreeOfTrianglesBuilder@Opcode@@8
rdata$r	SEGMENT
??_R3AABBTreeOfTrianglesBuilder@Opcode@@8 DD 00H	; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2AABBTreeOfTrianglesBuilder@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2AABBTreeOfTrianglesBuilder@Opcode@@8
rdata$r	SEGMENT
??_R2AABBTreeOfTrianglesBuilder@Opcode@@8 DD imagerel ??_R1A@?0A@EA@AABBTreeOfTrianglesBuilder@Opcode@@8 ; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@AABBTreeBuilder@Opcode@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AABBTreeOfTrianglesBuilder@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AABBTreeOfTrianglesBuilder@Opcode@@8 DD imagerel ??_R0?AVAABBTreeOfTrianglesBuilder@Opcode@@@8 ; Opcode::AABBTreeOfTrianglesBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3AABBTreeOfTrianglesBuilder@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAABBTreeOfTrianglesBuilder@Opcode@@@8
_DATA	SEGMENT
??_R0?AVAABBTreeOfTrianglesBuilder@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::AABBTreeOfTrianglesBuilder `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAABBTreeOfTrianglesBuilder@Opcode@@', 00H
_DATA	ENDS
;	COMDAT ??_7AABBTreeBuilder@Opcode@@6B@
CONST	SEGMENT
??_7AABBTreeBuilder@Opcode@@6B@ DQ FLAT:??_R4AABBTreeBuilder@Opcode@@6B@ ; Opcode::AABBTreeBuilder::`vftable'
	DQ	FLAT:??_EAABBTreeBuilder@Opcode@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z
CONST	ENDS
;	COMDAT ??_R4AABBTreeBuilder@Opcode@@6B@
rdata$r	SEGMENT
??_R4AABBTreeBuilder@Opcode@@6B@ DD 01H			; Opcode::AABBTreeBuilder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVAABBTreeBuilder@Opcode@@@8
	DD	imagerel ??_R3AABBTreeBuilder@Opcode@@8
	DD	imagerel ??_R4AABBTreeBuilder@Opcode@@6B@
rdata$r	ENDS
;	COMDAT ??_R3AABBTreeBuilder@Opcode@@8
rdata$r	SEGMENT
??_R3AABBTreeBuilder@Opcode@@8 DD 00H			; Opcode::AABBTreeBuilder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2AABBTreeBuilder@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2AABBTreeBuilder@Opcode@@8
rdata$r	SEGMENT
??_R2AABBTreeBuilder@Opcode@@8 DD imagerel ??_R1A@?0A@EA@AABBTreeBuilder@Opcode@@8 ; Opcode::AABBTreeBuilder::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AABBTreeBuilder@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AABBTreeBuilder@Opcode@@8 DD imagerel ??_R0?AVAABBTreeBuilder@Opcode@@@8 ; Opcode::AABBTreeBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3AABBTreeBuilder@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAABBTreeBuilder@Opcode@@@8
_DATA	SEGMENT
??_R0?AVAABBTreeBuilder@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::AABBTreeBuilder `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAABBTreeBuilder@Opcode@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0FL@HIPFHKCC@OPCODE?5WARNING?3?5found?5?$CFd?5degener@
CONST	SEGMENT
??_C@_0FL@HIPFHKCC@OPCODE?5WARNING?3?5found?5?$CFd?5degener@ DB 'OPCODE W'
	DB	'ARNING: found %d degenerate faces in model! Collision might r'
	DB	'eport wrong results!', 0aH, 00H		; `string'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEBQEAVAABBTreeNode@Opcode@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEBQEAVAABBTreeNode@Opcode@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEBQEAVAABBTreeNode@Opcode@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z PROC ; xr_free<Opcode::AABBTreeNode>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@6
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@6:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@VAABBTreeNode@Opcode@@@@YAXAEAPEAVAABBTreeNode@Opcode@@@Z ENDP ; xr_free<Opcode::AABBTreeNode>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ PROC ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT

; 434  : 		}

	ret	0
??1?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ENDP ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@XZ PROC	; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>, COMDAT

; 76   : 													xalloc			()										{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@XZ ENDP	; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@AEBV0@@Z PROC ; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>, COMDAT

; 77   : 													xalloc			(const xalloc<T>&)						{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@PEAVAABBTreeNode@Opcode@@@@QEAA@AEBV0@@Z ENDP ; xalloc<Opcode::AABBTreeNode * __ptr64>::xalloc<Opcode::AABBTreeNode * __ptr64>
_TEXT	ENDS
EXTRN	__RTCastToVoid:PROC
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
pdata	SEGMENT
$pdata$??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z PROC ; xr_special_free<1,Opcode::AABBOptimizedTree>::operator(), COMDAT

; 131  : 	{

$LN3:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	rcx, QWORD PTR [rcx]
	call	__RTCastToVoid

; 133  : 		ptr->~T			();

	mov	rcx, QWORD PTR [rbx]
	xor	edx, edx
	mov	r8, QWORD PTR [rcx]
	mov	rdi, rax
	call	QWORD PTR [r8]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rdi

; 135  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
??R?$xr_special_free@$00VAABBOptimizedTree@Opcode@@@@QEAAXAEAPEAVAABBOptimizedTree@Opcode@@@Z ENDP ; xr_special_free<1,Opcode::AABBOptimizedTree>::operator()
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD imagerel $LN6
	DD	imagerel $LN6+17
	DD	imagerel $unwind$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD imagerel $LN6+17
	DD	imagerel $LN6+69
	DD	imagerel $chain$0$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD imagerel $LN6+69
	DD	imagerel $LN6+75
	DD	imagerel $chain$1$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD 021H
	DD	imagerel $LN6
	DD	imagerel $LN6+17
	DD	imagerel $unwind$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN6
	DD	imagerel $LN6+17
	DD	imagerel $unwind$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z PROC ; xr_delete<Opcode::AABBOptimizedTree>, COMDAT

; 150  : {

$LN6:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 151  : 	if (ptr) 

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN1@xr_delete

; 152  : 	{
; 153  : 		xr_special_free<xrcore::is_polymorphic<T>::result,T>()(ptr);

	mov	QWORD PTR [rsp+48], rbx
	call	__RTCastToVoid
	mov	rcx, QWORD PTR [rdi]
	mov	r8, QWORD PTR [rcx]
	xor	edx, edx
	mov	rbx, rax
	call	QWORD PTR [r8]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rbx
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	rbx, QWORD PTR [rsp+48]

; 154  : 		ptr = NULL;

	mov	QWORD PTR [rdi], 0
$LN1@xr_delete:

; 155  : 	}
; 156  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_delete@VAABBOptimizedTree@Opcode@@@@YAXAEAPEAVAABBOptimizedTree@Opcode@@@Z ENDP ; xr_delete<Opcode::AABBOptimizedTree>
_TEXT	ENDS
PUBLIC	??0OPCODE_Model@Opcode@@QEAA@XZ			; Opcode::OPCODE_Model::OPCODE_Model
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_model.cpp
_TEXT	SEGMENT
this$ = 8
??0OPCODE_Model@Opcode@@QEAA@XZ PROC			; Opcode::OPCODE_Model::OPCODE_Model

; 156  : {

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	WORD PTR [rcx+16], ax

; 157  : #ifdef __MESHMERIZER_H__	// Collision hulls only supported within ICE !
; 158  : 	mHull	= null;
; 159  : #endif // __MESHMERIZER_H__
; 160  : }

	mov	rax, rcx
	ret	0
??0OPCODE_Model@Opcode@@QEAA@XZ ENDP			; Opcode::OPCODE_Model::OPCODE_Model
_TEXT	ENDS
PUBLIC	??0OPCODECREATE@Opcode@@QEAA@XZ			; Opcode::OPCODECREATE::OPCODECREATE
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
this$ = 8
??0OPCODECREATE@Opcode@@QEAA@XZ PROC			; Opcode::OPCODECREATE::OPCODECREATE

; 137  : 	NbTris			= 0;

	xor	eax, eax

; 138  : 	NbVerts			= 0;
; 139  : 	Tris			= null;
; 140  : 	Verts			= null;
; 141  : 	Rules			= SPLIT_COMPLETE | SPLIT_LARGESTAXIS;

	mov	DWORD PTR [rcx+24], 3

; 142  : 	NoLeaf			= true;

	mov	WORD PTR [rcx+28], 257			; 00000101H
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 143  : 	Quantized		= true;
; 144  : #ifdef __MESHMERIZER_H__
; 145  : 	CollisionHull	= false;
; 146  : #endif // __MESHMERIZER_H__
; 147  : 	KeepOriginal	= false;

	mov	BYTE PTR [rcx+30], al

; 148  : }

	mov	rax, rcx
	ret	0
??0OPCODECREATE@Opcode@@QEAA@XZ ENDP			; Opcode::OPCODECREATE::OPCODECREATE
PUBLIC	__real@3f000000
;	COMDAT __real@3f000000
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
CONST	ENDS
;	COMDAT ?GetCenter@AABB@Meshmerizer@@QEBAMI@Z
_TEXT	SEGMENT
this$ = 8
axis$ = 16
?GetCenter@AABB@Meshmerizer@@QEBAMI@Z PROC		; Meshmerizer::AABB::GetCenter, COMDAT

; 119  : 		inline_			float		GetCenter(udword axis)					const		{ return (((const float*)mMax)[axis] + ((const float*)mMin)[axis])*0.5f;	}

	mov	eax, edx
	movss	xmm0, DWORD PTR [rcx+rax*4+12]
	addss	xmm0, DWORD PTR [rcx+rax*4]
	mulss	xmm0, DWORD PTR __real@3f000000
	ret	0
?GetCenter@AABB@Meshmerizer@@QEBAMI@Z ENDP		; Meshmerizer::AABB::GetCenter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_const_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=, COMDAT

; 358  : 		*(_Mybase *)this += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 359  : 		return (*this);

	mov	rax, rcx

; 360  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEAPEAVAABBTreeNode@Opcode@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEAPEAVAABBTreeNode@Opcode@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBAAEAPEAVAABBTreeNode@Opcode@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator*
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEBAIXZ PROC ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3
	ret	0
?size@?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEBAIXZ ENDP ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@Z
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@Z PROC ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT

; 427  : 		_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 428  : 		_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 429  : 		_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 430  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@Z ENDP ; std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_optimizedtree.h
pdata	SEGMENT
$pdata$??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ PROC ; xr_new<Opcode::AABBCollisionTree>, COMDAT

; 67   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 24
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@2
	lea	rcx, OFFSET FLAT:??_7AABBCollisionTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], 0
	mov	QWORD PTR [rax+16], 0
	mov	QWORD PTR [rax], rcx

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@2:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VAABBCollisionTree@Opcode@@@@YAPEAVAABBCollisionTree@Opcode@@XZ ENDP ; xr_new<Opcode::AABBCollisionTree>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_optimizedtree.h
pdata	SEGMENT
$pdata$??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ PROC ; xr_new<Opcode::AABBQuantizedTree>, COMDAT

; 67   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 48					; 00000030H
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@3
	lea	rcx, OFFSET FLAT:??_7AABBQuantizedTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], 0
	mov	QWORD PTR [rax+16], 0
	mov	QWORD PTR [rax], rcx

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@3:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VAABBQuantizedTree@Opcode@@@@YAPEAVAABBQuantizedTree@Opcode@@XZ ENDP ; xr_new<Opcode::AABBQuantizedTree>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_optimizedtree.h
pdata	SEGMENT
$pdata$??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ PROC ; xr_new<Opcode::AABBNoLeafTree>, COMDAT

; 67   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 24
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@4
	lea	rcx, OFFSET FLAT:??_7AABBNoLeafTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], 0
	mov	QWORD PTR [rax+16], 0
	mov	QWORD PTR [rax], rcx

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@4:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VAABBNoLeafTree@Opcode@@@@YAPEAVAABBNoLeafTree@Opcode@@XZ ENDP ; xr_new<Opcode::AABBNoLeafTree>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_optimizedtree.h
pdata	SEGMENT
$pdata$??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ PROC ; xr_new<Opcode::AABBQuantizedNoLeafTree>, COMDAT

; 67   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 48					; 00000030H
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@5
	lea	rcx, OFFSET FLAT:??_7AABBQuantizedNoLeafTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], 0
	mov	QWORD PTR [rax+16], 0
	mov	QWORD PTR [rax], rcx

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@5:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VAABBQuantizedNoLeafTree@Opcode@@@@YAPEAVAABBQuantizedNoLeafTree@Opcode@@XZ ENDP ; xr_new<Opcode::AABBQuantizedNoLeafTree>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_treebuilders.h
;	COMDAT ?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z
_TEXT	SEGMENT
this$ = 8
primitives$ = 16
nb_prims$ = 24
global_box$ = 32
axis$ = 40
?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z PROC ; Opcode::AABBTreeBuilder::GetSplittingValueEx, COMDAT

; 90   : 										// Default split value = middle of the axis (using only the box)
; 91   : 										return global_box.GetCenter(axis);

	mov	eax, DWORD PTR axis$[rsp]
	movss	xmm0, DWORD PTR [r9+rax*4+12]
	addss	xmm0, DWORD PTR [r9+rax*4]
	mulss	xmm0, DWORD PTR __real@3f000000

; 92   : 									}

	ret	0
?GetSplittingValueEx@AABBTreeBuilder@Opcode@@UEBAMPEBIIAEBVAABB@Meshmerizer@@I@Z ENDP ; Opcode::AABBTreeBuilder::GetSplittingValueEx
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEAA@PEAPEAVAABBTreeNode@Opcode@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+, COMDAT

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR [rax+r8*8]
	mov	rax, rdx
	mov	QWORD PTR [rdx], rcx

; 366  : 		}

	ret	0
??H?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> > >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ PROC ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT

; 507  : 		{	// construct empty vector

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 508  : 		}

	mov	rax, rcx
	ret	0
??0?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ENDP ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@2@XZ PROC ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@@2@XZ ENDP ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::begin
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+49
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ PROC ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Tidy, COMDAT

; 1301 : 		{	// free all storage

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1302 : 		if (this->_Myfirst != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN8@Tidy@4

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN8@Tidy@4:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1310 : 		this->_Mylast = 0;

	mov	QWORD PTR [rbx+8], rax

; 1311 : 		this->_Myend = 0;

	mov	QWORD PTR [rbx+16], rax

; 1312 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@IEAAXXZ ENDP ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::_Tidy
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAABBTree@Opcode@@QEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+48
	DD	imagerel $unwind$??_GAABBTree@Opcode@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAABBTree@Opcode@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GAABBTree@Opcode@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_GAABBTree@Opcode@@QEAAPEAXI@Z PROC			; Opcode::AABBTree::`scalar deleting destructor', COMDAT
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx+56]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN14@scalar@13
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+56], 0
$LN14@scalar@13:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GAABBTree@Opcode@@QEAAPEAXI@Z ENDP			; Opcode::AABBTree::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z DD imagerel $LN16
	DD	imagerel $LN16+73
	DD	imagerel $unwind$??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z PROC ; xr_special_free<0,Opcode::AABBTree>::operator(), COMDAT

; 142  : 	{

$LN16:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 143  : 		ptr->~T			();

	mov	rdi, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	rdx, QWORD PTR [rdi+56]
	test	rdx, rdx
	je	SHORT $LN8@operator@6
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rdi+56], 0
$LN8@operator@6:

; 144  : 		Memory.mem_free	(ptr);

	mov	rdx, QWORD PTR [rbx]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A

; 145  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
??R?$xr_special_free@$0A@VAABBTree@Opcode@@@@QEAAXAEAPEAVAABBTree@Opcode@@@Z ENDP ; xr_special_free<0,Opcode::AABBTree>::operator()
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.cpp
pdata	SEGMENT
$pdata$??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ DD imagerel $LN11
	DD	imagerel $LN11+69
	DD	imagerel $unwind$??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ PROC ; xr_new<Opcode::AABBTree>, COMDAT

; 67   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 72					; 00000048H
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	mov	r11, rax

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@6
	xor	eax, eax
	mov	QWORD PTR [r11+24], rax
	mov	QWORD PTR [r11+32], rax
	mov	QWORD PTR [r11+40], rax
	mov	DWORD PTR [r11+48], eax
	mov	QWORD PTR [r11+56], rax
	mov	DWORD PTR [r11+64], eax
	mov	rax, r11

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@6:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VAABBTree@Opcode@@@@YAPEAVAABBTree@Opcode@@XZ ENDP ; xr_new<Opcode::AABBTree>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z DD imagerel $LN19
	DD	imagerel $LN19+85
	DD	imagerel $unwind$??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z PROC ; xr_delete<Opcode::AABBTree>, COMDAT

; 150  : {

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 151  : 	if (ptr) 

	mov	rdi, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdi, rdi
	je	SHORT $LN1@xr_delete@2

; 152  : 	{
; 153  : 		xr_special_free<xrcore::is_polymorphic<T>::result,T>()(ptr);

	mov	rdx, QWORD PTR [rdi+56]
	test	rdx, rdx
	je	SHORT $LN11@xr_delete@2
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rdi+56], 0
$LN11@xr_delete@2:
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z

; 154  : 		ptr = NULL;

	mov	QWORD PTR [rbx], 0
$LN1@xr_delete@2:

; 155  : 	}
; 156  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z ENDP ; xr_delete<Opcode::AABBTree>
_TEXT	ENDS
PUBLIC	??1OPCODE_Model@Opcode@@QEAA@XZ			; Opcode::OPCODE_Model::~OPCODE_Model
pdata	SEGMENT
$pdata$??1OPCODE_Model@Opcode@@QEAA@XZ DD imagerel $LN26
	DD	imagerel $LN26+138
	DD	imagerel $unwind$??1OPCODE_Model@Opcode@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1OPCODE_Model@Opcode@@QEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_model.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1OPCODE_Model@Opcode@@QEAA@XZ PROC			; Opcode::OPCODE_Model::~OPCODE_Model

; 168  : {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 169  : 	xr_delete(mSource);

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	SHORT $LN3@OPCODE_Mod
	mov	rdx, QWORD PTR [rbx+56]
	test	rdx, rdx
	je	SHORT $LN13@OPCODE_Mod
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+56], 0
$LN13@OPCODE_Mod:
	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rdi], 0
$LN3@OPCODE_Mod:

; 170  : 	xr_delete(mTree);

	mov	rcx, QWORD PTR [rdi+8]
	test	rcx, rcx
	je	SHORT $LN21@OPCODE_Mod
	call	__RTCastToVoid
	mov	rcx, QWORD PTR [rdi+8]
	xor	edx, edx
	mov	r8, QWORD PTR [rcx]
	mov	rbx, rax
	call	QWORD PTR [r8]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rbx
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rdi+8], 0
$LN21@OPCODE_Mod:

; 171  : #ifdef __MESHMERIZER_H__	// Collision hulls only supported within ICE !
; 172  : 	xr_delete(mHull);
; 173  : #endif // __MESHMERIZER_H__
; 174  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1OPCODE_Model@Opcode@@QEAA@XZ ENDP			; Opcode::OPCODE_Model::~OPCODE_Model
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
;	COMDAT ??A?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAAAEAPEAVAABBTreeNode@Opcode@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAAAEAPEAVAABBTreeNode@Opcode@@_K@Z PROC ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::operator[], COMDAT

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	mov	rax, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rdx*8]
	ret	0
??A?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAAAEAPEAVAABBTreeNode@Opcode@@_K@Z ENDP ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::operator[]
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+49
	DD	imagerel $unwind$??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ PROC ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT

; 704  : 		{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H

; 705  : 		_Tidy();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN10@vector@9
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN10@vector@9:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax

; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@std@@QEAA@XZ ENDP ; std::vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ PROC ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT

; 122  : 			xr_vector			()									: inherited	()					{}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ ENDP ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+49
	DD	imagerel $unwind$??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ PROC ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN12@xr_vector@4
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN12@xr_vector@4:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$xr_vector@PEAVAABBTreeNode@Opcode@@V?$xalloc@PEAVAABBTreeNode@Opcode@@@@@@QEAA@XZ ENDP ; xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >::~xr_vector<Opcode::AABBTreeNode * __ptr64,xalloc<Opcode::AABBTreeNode * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrpool.h
_TEXT	ENDS
;	COMDAT ??0?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ PROC ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::poolSS<Opcode::AABBTreeNode,16384>, COMDAT

; 29   : 	poolSS()

	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax

; 30   : 	{
; 31   : 		list				= 0;

	mov	QWORD PTR [rcx], rax

; 32   : 	}

	mov	rax, rcx
	ret	0
??0?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ENDP ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::poolSS<Opcode::AABBTreeNode,16384>
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD imagerel $LN57
	DD	imagerel $LN57+18
	DD	imagerel $unwind$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD imagerel $LN57+18
	DD	imagerel $LN57+41
	DD	imagerel $chain$0$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD imagerel $LN57+41
	DD	imagerel $LN57+126
	DD	imagerel $chain$2$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD imagerel $LN57+126
	DD	imagerel $LN57+140
	DD	imagerel $chain$3$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD imagerel $LN57+140
	DD	imagerel $LN57+177
	DD	imagerel $chain$4$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+18
	DD	imagerel $unwind$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD 021H
	DD	imagerel $LN57+18
	DD	imagerel $LN57+41
	DD	imagerel $chain$0$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD 040a21H
	DD	08740aH
	DD	076405H
	DD	imagerel $LN57+18
	DD	imagerel $LN57+41
	DD	imagerel $chain$0$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD 020521H
	DD	065405H
	DD	imagerel $LN57
	DD	imagerel $LN57+18
	DD	imagerel $unwind$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ DD 040b01H
	DD	09340bH
	DD	0c007320bH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrpool.h
xdata	ENDS
;	COMDAT ??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ PROC ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>, COMDAT

; 34   : 	{

$LN57:
	mov	QWORD PTR [rsp+32], rbx
	push	r12
	sub	rsp, 32					; 00000020H

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, r12d
	mov	QWORD PTR [rsp+48], rbp
	sub	rax, QWORD PTR [rcx+8]
	mov	rbx, rcx
	mov	ebp, r12d
	sar	rax, 3
	test	eax, eax
	je	SHORT $LN1@poolSS
	mov	QWORD PTR [rsp+56], rsi
	mov	QWORD PTR [rsp+64], rdi
	mov	edi, r12d
	npad	10
$LL3@poolSS:

; 36   : 			xr_free	(blocks[b]);

	mov	rsi, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR [rdi+rsi]
	test	rdx, rdx
	je	SHORT $LN2@poolSS
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rdi+rsi], r12
$LN2@poolSS:

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	mov	rax, QWORD PTR [rbx+16]
	inc	ebp
	add	rdi, 8
	sub	rax, QWORD PTR [rbx+8]
	sar	rax, 3
	cmp	ebp, eax
	jb	SHORT $LL3@poolSS
	mov	rdi, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+56]
$LN1@poolSS:

; 37   : 	}

	mov	rdx, QWORD PTR [rbx+8]
	mov	rbp, QWORD PTR [rsp+48]
	test	rdx, rdx
	je	SHORT $LN50@poolSS
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN50@poolSS:
	mov	QWORD PTR [rbx+8], r12
	mov	QWORD PTR [rbx+16], r12
	mov	QWORD PTR [rbx+24], r12
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ENDP ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_treebuilders.h
_TEXT	ENDS
;	COMDAT ??0AABBTreeBuilder@Opcode@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AABBTreeBuilder@Opcode@@QEAA@XZ PROC			; Opcode::AABBTreeBuilder::AABBTreeBuilder, COMDAT

; 53   : 													mNbInvalidSplits(0)		{}

	mov	QWORD PTR [rcx+12], 2147483647		; 7fffffffH
	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	mov	QWORD PTR [rcx], rax
	xor	eax, eax
	mov	DWORD PTR [rcx+8], eax
	mov	QWORD PTR [rcx+20], rax
	mov	QWORD PTR [rcx+40], rax
	mov	QWORD PTR [rcx+48], rax
	mov	QWORD PTR [rcx+56], rax
	mov	QWORD PTR [rcx+32], rax
	mov	rax, rcx
	ret	0
??0AABBTreeBuilder@Opcode@@QEAA@XZ ENDP			; Opcode::AABBTreeBuilder::AABBTreeBuilder
; Function compile flags: /Ogtpy
;	COMDAT ??1AABBTreeBuilder@Opcode@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1AABBTreeBuilder@Opcode@@UEAA@XZ PROC			; Opcode::AABBTreeBuilder::~AABBTreeBuilder, COMDAT

; 55   : 		virtual									~AABBTreeBuilder()			{}

	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	add	rcx, 32					; 00000020H
	mov	QWORD PTR [rcx-32], rax
	jmp	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
??1AABBTreeBuilder@Opcode@@UEAA@XZ ENDP			; Opcode::AABBTreeBuilder::~AABBTreeBuilder
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+70
	DD	imagerel $unwind$??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z PROC		; Opcode::AABBTreeBuilder::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	mov	rdi, rcx
	add	rcx, 32					; 00000020H
	mov	QWORD PTR [rcx-32], rax
	mov	ebx, edx
	call	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
	test	bl, 1
	je	SHORT $LN11@scalar@14
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rdi
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN11@scalar@14:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GAABBTreeBuilder@Opcode@@UEAAPEAXI@Z ENDP		; Opcode::AABBTreeBuilder::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1AABBTreeOfTrianglesBuilder@Opcode@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1AABBTreeOfTrianglesBuilder@Opcode@@UEAA@XZ PROC	; Opcode::AABBTreeOfTrianglesBuilder::~AABBTreeOfTrianglesBuilder, COMDAT

; 135  : 		virtual									~AABBTreeOfTrianglesBuilder()													{}

	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	add	rcx, 32					; 00000020H
	mov	QWORD PTR [rcx-32], rax
	jmp	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
??1AABBTreeOfTrianglesBuilder@Opcode@@UEAA@XZ ENDP	; Opcode::AABBTreeOfTrianglesBuilder::~AABBTreeOfTrianglesBuilder
; Function compile flags: /Ogtpy
;	COMDAT ??0AABBTreeOfTrianglesBuilder@Opcode@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AABBTreeOfTrianglesBuilder@Opcode@@QEAA@XZ PROC	; Opcode::AABBTreeOfTrianglesBuilder::AABBTreeOfTrianglesBuilder, COMDAT

; 133  : 												AABBTreeOfTrianglesBuilder() : mTriList(null), mVerts(null), mNbTriangles(0)	{}

	xor	edx, edx
	mov	QWORD PTR [rcx+12], 2147483647		; 7fffffffH
	lea	rax, OFFSET FLAT:??_7AABBTreeOfTrianglesBuilder@Opcode@@6B@
	mov	DWORD PTR [rcx+8], edx
	mov	QWORD PTR [rcx+20], rdx
	mov	QWORD PTR [rcx+40], rdx
	mov	QWORD PTR [rcx+48], rdx
	mov	QWORD PTR [rcx+56], rdx
	mov	QWORD PTR [rcx+32], rdx
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+72], rdx
	mov	QWORD PTR [rcx+80], rdx
	mov	rax, rcx
	mov	DWORD PTR [rcx+88], edx
	ret	0
??0AABBTreeOfTrianglesBuilder@Opcode@@QEAA@XZ ENDP	; Opcode::AABBTreeOfTrianglesBuilder::AABBTreeOfTrianglesBuilder
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+70
	DD	imagerel $unwind$??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z PROC	; Opcode::AABBTreeOfTrianglesBuilder::`scalar deleting destructor', COMDAT
$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	mov	rdi, rcx
	add	rcx, 32					; 00000020H
	mov	QWORD PTR [rcx-32], rax
	mov	ebx, edx
	call	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
	test	bl, 1
	je	SHORT $LN13@scalar@15
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rdi
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN13@scalar@15:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GAABBTreeOfTrianglesBuilder@Opcode@@UEAAPEAXI@Z ENDP	; Opcode::AABBTreeOfTrianglesBuilder::`scalar deleting destructor'
PUBLIC	?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z ; Opcode::OPCODE_Model::Build
pdata	SEGMENT
$pdata$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD imagerel $LN123
	DD	imagerel $LN123+65
	DD	imagerel $unwind$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z
$pdata$0$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD imagerel $LN123+65
	DD	imagerel $LN123+514
	DD	imagerel $chain$0$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z
$pdata$1$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD imagerel $LN123+514
	DD	imagerel $LN123+535
	DD	imagerel $chain$1$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD 061201H
	DD	0146412H
	DD	0135412H
	DD	0700bf212H
$chain$0$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD 020821H
	DD	0123408H
	DD	imagerel $LN123
	DD	imagerel $LN123+65
	DD	imagerel $unwind$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z
$chain$1$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z DD 021H
	DD	imagerel $LN123
	DD	imagerel $LN123+65
	DD	imagerel $unwind$?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_model.cpp
xdata	ENDS
_TEXT	SEGMENT
TB$ = 32
this$ = 144
create$ = 152
?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z PROC ; Opcode::OPCODE_Model::Build

; 184  : {

$LN123:
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 128				; 00000080H

; 185  : 	// 1) Checkings
; 186  : 	if(!create.NbTris || !create.Tris || !create.Verts)	return false;

	mov	rbp, QWORD PTR [rdx+8]
	mov	rsi, rdx
	mov	rdi, rcx
	test	rbp, rbp
	je	SHORT $LN21@Build@6
	cmp	QWORD PTR [rdx+16], 0
	je	SHORT $LN21@Build@6

; 187  : 
; 188  : 	// In this lib, we only support complete trees
; 189  : 	if(!(create.Rules&SPLIT_COMPLETE))	return SetIceError;//("OPCODE WARNING: supports complete trees only! Use SPLIT_COMPLETE.\n");

	test	BYTE PTR [rdx+24], 1
	jne	SHORT $LN16@Build@6
$LN21@Build@6:
	xor	al, al
	jmp	$LN23@Build@6
$LN16@Build@6:

; 190  : 
; 191  : 	// Check topology. If the model contains degenerate faces, collision report can be wrong in some cases.
; 192  : 	// e.g. it happens with the standard MAX teapot. So clean your meshes first... If you don't have a mesh cleaner
; 193  : 	// you can try this: www.codercorner.com/Consolidation.zip
; 194  : 	const IndexedTriangle* Tris = (const IndexedTriangle*)create.Tris;
; 195  : 	udword NbDegenerate = 0;
; 196  : 	for(udword i=0;i<create.NbTris;i++)
; 197  : 	{
; 198  : 		if(Tris[i].IsDegenerate())	NbDegenerate++;
; 199  : 	}
; 200  : 	if(NbDegenerate)	Log("OPCODE WARNING: found %d degenerate faces in model! Collision might report wrong results!\n", NbDegenerate);
; 201  : 	// We continue nonetheless.... 
; 202  : 
; 203  : 	// 2) Build a generic AABB Tree.
; 204  : 	mSource = xr_new<AABBTree>();

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 72					; 00000048H
	mov	QWORD PTR [rsp+144], rbx
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	xor	ebx, ebx
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN32@Build@6
	mov	QWORD PTR [rax+24], rbx
	mov	QWORD PTR [rax+32], rbx
	mov	QWORD PTR [rax+40], rbx
	mov	DWORD PTR [rax+48], ebx
	mov	QWORD PTR [rax+56], rbx
	mov	DWORD PTR [rax+64], ebx
	jmp	SHORT $LN33@Build@6
$LN32@Build@6:
	mov	rcx, rbx
$LN33@Build@6:
	mov	QWORD PTR [rdi], rcx

; 205  : 	CHECKALLOC(mSource);

	test	rcx, rcx
	je	$LN122@Build@6

; 206  : 
; 207  : 	// 2-1) Setup a builder. Our primitives here are triangles from input mesh,
; 208  : 	// so we use an AABBTreeOfTrianglesBuilder.....
; 209  : 	AABBTreeOfTrianglesBuilder TB;

	lea	rax, OFFSET FLAT:??_7AABBTreeOfTrianglesBuilder@Opcode@@6B@

; 210  : 	TB.mTriList			= Tris;
; 211  : 	TB.mVerts			= create.Verts;
; 212  : 	TB.mRules			= create.Rules;
; 213  : 	TB.mNbPrimitives	= create.NbTris;
; 214  : 	if(!mSource->Build(&TB))	return false;

	lea	rdx, QWORD PTR TB$[rsp]
	mov	DWORD PTR TB$[rsp+8], ebx
	mov	QWORD PTR TB$[rsp], rax
	mov	rax, QWORD PTR [rsi+16]
	mov	QWORD PTR TB$[rsp+20], 0
	mov	QWORD PTR TB$[rsp+80], rax
	mov	eax, DWORD PTR [rsi+24]
	mov	QWORD PTR TB$[rsp+40], rbx
	mov	DWORD PTR TB$[rsp+12], eax
	mov	eax, DWORD PTR [rsi]
	mov	QWORD PTR TB$[rsp+48], rbx
	mov	QWORD PTR TB$[rsp+56], rbx
	mov	QWORD PTR TB$[rsp+32], rbx
	mov	DWORD PTR TB$[rsp+88], ebx
	mov	DWORD PTR TB$[rsp+16], eax
	mov	QWORD PTR TB$[rsp+72], rbp
	call	?Build@AABBTree@Opcode@@QEAA_NPEAVAABBTreeBuilder@2@@Z ; Opcode::AABBTree::Build
	test	al, al
	je	$LN121@Build@6

; 215  : 
; 216  : 	// 3) Create an optimized tree according to user-settings
; 217  : 	// 3-1) Create the correct class
; 218  : 	mNoLeaf		= create.NoLeaf;

	movzx	eax, BYTE PTR [rsi+28]
	mov	BYTE PTR [rdi+16], al

; 219  : 	mQuantized	= create.Quantized;

	movzx	ecx, BYTE PTR [rsi+29]
	mov	BYTE PTR [rdi+17], cl

; 220  : 
; 221  : 	if(mNoLeaf)

	test	al, al
	je	SHORT $LN8@Build@6

; 222  : 	{
; 223  : 		if(mQuantized)	mTree = xr_new<AABBQuantizedNoLeafTree>();

	test	cl, cl
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	je	SHORT $LN7@Build@6
	mov	edx, 48					; 00000030H
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	test	rax, rax
	je	$LN102@Build@6
	lea	rcx, OFFSET FLAT:??_7AABBQuantizedNoLeafTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], ebx
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN103@Build@6
$LN7@Build@6:

; 224  : 		else			mTree = xr_new<AABBNoLeafTree>();

	mov	edx, 24
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	test	rax, rax
	je	SHORT $LN102@Build@6
	lea	rcx, OFFSET FLAT:??_7AABBNoLeafTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], ebx
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN103@Build@6
$LN8@Build@6:

; 225  : 	}
; 226  : 	else
; 227  : 	{
; 228  : 		if(mQuantized)	mTree = xr_new<AABBQuantizedTree>();

	test	cl, cl
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	je	SHORT $LN4@Build@6
	mov	edx, 48					; 00000030H
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	test	rax, rax
	je	SHORT $LN102@Build@6
	lea	rcx, OFFSET FLAT:??_7AABBQuantizedTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], ebx
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN103@Build@6
$LN4@Build@6:

; 229  : 		else			mTree = xr_new<AABBCollisionTree>();

	mov	edx, 24
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	test	rax, rax
	je	SHORT $LN102@Build@6
	lea	rcx, OFFSET FLAT:??_7AABBCollisionTree@Opcode@@6B@
	mov	DWORD PTR [rax+8], ebx
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN103@Build@6
$LN102@Build@6:
	mov	rax, rbx
$LN103@Build@6:

; 230  : 	}
; 231  : 
; 232  : 	// 3-2) Create optimized tree
; 233  : 	if(!mTree->Build(mSource))	return false;

	mov	rdx, QWORD PTR [rdi]
	mov	QWORD PTR [rdi+8], rax
	mov	rcx, rax
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	test	al, al
	jne	SHORT $LN2@Build@6
$LN121@Build@6:
	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	lea	rcx, QWORD PTR TB$[rsp+32]
	mov	QWORD PTR TB$[rsp], rax
	call	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
$LN122@Build@6:
	xor	al, al
	jmp	SHORT $LN120@Build@6
$LN2@Build@6:

; 234  : 
; 235  : 	// 3-3) Delete generic tree if needed
; 236  : 	if(!create.KeepOriginal)	{

	cmp	BYTE PTR [rsi+30], 0
	jne	SHORT $LN1@Build@6

; 237  : 		mSource->destroy	(&TB)		;

	mov	rcx, QWORD PTR [rdi]
	lea	rdx, QWORD PTR TB$[rsp]
	call	?destroy@AABBTreeNode@Opcode@@QEAAXPEAVAABBTreeBuilder@2@@Z ; Opcode::AABBTreeNode::destroy

; 238  : 		xr_delete			(mSource)	;	

	mov	rcx, rdi
	call	??$xr_delete@VAABBTree@Opcode@@@@YAXAEAPEAVAABBTree@Opcode@@@Z ; xr_delete<Opcode::AABBTree>
$LN1@Build@6:

; 239  : 	}
; 240  : 
; 241  : #ifdef __MESHMERIZER_H__
; 242  : 	// 4) Convex hull
; 243  : 	if(create.CollisionHull)
; 244  : 	{
; 245  : 		// Create hull
; 246  : 		mHull = xr_new<CollisionHull>();
; 247  : 		CHECKALLOC(mHull);
; 248  : 
; 249  : 		CONVEXHULLCREATE CHC;
; 250  : 		CHC.NbVerts			= create.NbVerts;
; 251  : 		CHC.Vertices		= create.Verts;
; 252  : 		CHC.UnifyNormals	= true;
; 253  : 		CHC.ReduceVertices	= true;
; 254  : 		CHC.WordFaces		= false;
; 255  : 		mHull->Compute(CHC);
; 256  : 	}
; 257  : #endif // __MESHMERIZER_H__
; 258  : 	return true;

	lea	rax, OFFSET FLAT:??_7AABBTreeBuilder@Opcode@@6B@
	lea	rcx, QWORD PTR TB$[rsp+32]
	mov	QWORD PTR TB$[rsp], rax
	call	??1?$poolSS@VAABBTreeNode@Opcode@@$0EAAA@@Opcode@@QEAA@XZ ; Opcode::poolSS<Opcode::AABBTreeNode,16384>::~poolSS<Opcode::AABBTreeNode,16384>
	mov	al, 1
$LN120@Build@6:
	mov	rbx, QWORD PTR [rsp+144]
$LN23@Build@6:

; 259  : }

	lea	r11, QWORD PTR [rsp+128]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z ENDP ; Opcode::OPCODE_Model::Build
END
