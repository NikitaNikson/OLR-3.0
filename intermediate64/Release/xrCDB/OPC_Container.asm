; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Empty@Container@IceCore@@QEAAAEAV12@XZ		; IceCore::Container::Empty
PUBLIC	?DeleteIndex@Container@IceCore@@QEAAXI@Z	; IceCore::Container::DeleteIndex
PUBLIC	?mNbContainers@Container@IceCore@@0IA		; IceCore::Container::mNbContainers
PUBLIC	?mUsedRam@Container@IceCore@@0IA		; IceCore::Container::mUsedRam
?mNbContainers@Container@IceCore@@0IA DD 01H DUP (?)	; IceCore::Container::mNbContainers
?mUsedRam@Container@IceCore@@0IA DD 01H DUP (?)		; IceCore::Container::mUsedRam
PUBLIC	?GetUsedRam@Container@IceCore@@QEBAIXZ		; IceCore::Container::GetUsedRam
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_container.cpp
_TEXT	SEGMENT
this$ = 8
?GetUsedRam@Container@IceCore@@QEBAIXZ PROC		; IceCore::Container::GetUsedRam

; 307  : 	return sizeof(Container) + mMaxNbEntries * sizeof(udword);

	mov	eax, DWORD PTR [rcx]
	lea	rax, QWORD PTR [rax*4+24]

; 308  : }

	ret	0
?GetUsedRam@Container@IceCore@@QEBAIXZ ENDP		; IceCore::Container::GetUsedRam
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?Empty@Container@IceCore@@QEAAAEAV12@XZ DD imagerel $LN6
	DD	imagerel $LN6+66
	DD	imagerel $unwind$?Empty@Container@IceCore@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Empty@Container@IceCore@@QEAAAEAV12@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_container.h
xdata	ENDS
;	COMDAT ?Empty@Container@IceCore@@QEAAAEAV12@XZ
_TEXT	SEGMENT
this$ = 48
?Empty@Container@IceCore@@QEAAAEAV12@XZ PROC		; IceCore::Container::Empty, COMDAT

; 108  : 				{

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H

; 109  : 					#ifdef CONTAINER_STATS
; 110  : 					mUsedRam-=mMaxNbEntries*sizeof(udword);

	mov	eax, DWORD PTR [rcx]

; 111  : 					#endif
; 112  : 					xr_free			(mEntries);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rbx, rcx
	imul	eax, -4					; fffffffcH
	add	DWORD PTR ?mUsedRam@Container@IceCore@@0IA, eax ; IceCore::Container::mUsedRam
	test	rdx, rdx
	je	SHORT $LN3@Empty
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+8], 0
$LN3@Empty:

; 113  : 					mCurNbEntries	= mMaxNbEntries = 0;

	mov	QWORD PTR [rbx], 0

; 114  : 					return *this;

	mov	rax, rbx

; 115  : 				}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Empty@Container@IceCore@@QEAAAEAV12@XZ ENDP		; IceCore::Container::Empty
_TEXT	ENDS
PUBLIC	??1Container@IceCore@@QEAA@XZ			; IceCore::Container::~Container
pdata	SEGMENT
$pdata$??1Container@IceCore@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+98
	DD	imagerel $unwind$??1Container@IceCore@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1Container@IceCore@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_container.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1Container@IceCore@@QEAA@XZ PROC			; IceCore::Container::~Container

; 69   : {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 70   : 	Empty();

	mov	r8d, DWORD PTR ?mUsedRam@Container@IceCore@@0IA ; IceCore::Container::mUsedRam
	mov	eax, DWORD PTR [rcx]
	mov	rdx, QWORD PTR [rcx+8]
	imul	eax, -4					; fffffffcH
	add	r8d, eax
	mov	rbx, rcx
	mov	DWORD PTR ?mUsedRam@Container@IceCore@@0IA, r8d ; IceCore::Container::mUsedRam
	test	rdx, rdx
	je	SHORT $LN5@Container
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	r8d, DWORD PTR ?mUsedRam@Container@IceCore@@0IA ; IceCore::Container::mUsedRam
	mov	QWORD PTR [rbx+8], 0
$LN5@Container:

; 71   : #ifdef CONTAINER_STATS
; 72   : 	mNbContainers--;

	dec	DWORD PTR ?mNbContainers@Container@IceCore@@0IA ; IceCore::Container::mNbContainers

; 73   : 	mUsedRam-=GetUsedRam();

	add	r8d, -24				; ffffffe8H
	mov	QWORD PTR [rbx], 0
	mov	DWORD PTR ?mUsedRam@Container@IceCore@@0IA, r8d ; IceCore::Container::mUsedRam

; 74   : #endif
; 75   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1Container@IceCore@@QEAA@XZ ENDP			; IceCore::Container::~Container
END
