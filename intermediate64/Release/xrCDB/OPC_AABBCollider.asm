; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ ; Opcode::AABBCollider::ValidateSettings
PUBLIC	??_R4AABBCollider@Opcode@@6B@			; Opcode::AABBCollider::`RTTI Complete Object Locator'
PUBLIC	??_R3AABBCollider@Opcode@@8			; Opcode::AABBCollider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AABBCollider@Opcode@@8			; Opcode::AABBCollider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VolumeCollider@Opcode@@8		; Opcode::VolumeCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3VolumeCollider@Opcode@@8			; Opcode::VolumeCollider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VolumeCollider@Opcode@@8			; Opcode::VolumeCollider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Collider@Opcode@@8		; Opcode::Collider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3Collider@Opcode@@8				; Opcode::Collider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Collider@Opcode@@8				; Opcode::Collider::`RTTI Base Class Array'
PUBLIC	??_R0?AVCollider@Opcode@@@8			; Opcode::Collider `RTTI Type Descriptor'
PUBLIC	??_R0?AVVolumeCollider@Opcode@@@8		; Opcode::VolumeCollider `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@AABBCollider@Opcode@@8		; Opcode::AABBCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAABBCollider@Opcode@@@8			; Opcode::AABBCollider `RTTI Type Descriptor'
PUBLIC	??0CollisionAABB@Opcode@@QEAA@XZ		; Opcode::CollisionAABB::CollisionAABB
PUBLIC	??1CollisionAABB@Opcode@@QEAA@XZ		; Opcode::CollisionAABB::~CollisionAABB
PUBLIC	??_GAABBCollider@Opcode@@UEAAPEAXI@Z		; Opcode::AABBCollider::`scalar deleting destructor'
PUBLIC	?HasLeafNodes@OPCODE_Model@Opcode@@QEBA_NXZ	; Opcode::OPCODE_Model::HasLeafNodes
PUBLIC	?IsQuantized@OPCODE_Model@Opcode@@QEBA_NXZ	; Opcode::OPCODE_Model::IsQuantized
PUBLIC	?Reset@Container@IceCore@@QEAAXXZ		; IceCore::Container::Reset
PUBLIC	?GetNbEntries@Container@IceCore@@QEBAIXZ	; IceCore::Container::GetNbEntries
PUBLIC	?GetEntry@Container@IceCore@@QEBAII@Z		; IceCore::Container::GetEntry
PUBLIC	??XicePoint@IceMaths@@QEAAAEAV01@M@Z		; IceMaths::icePoint::operator*=
PUBLIC	?GetMin@CollisionAABB@Opcode@@QEBAMI@Z		; Opcode::CollisionAABB::GetMin
PUBLIC	?GetMax@CollisionAABB@Opcode@@QEBAMI@Z		; Opcode::CollisionAABB::GetMax
PUBLIC	?IsInside@CollisionAABB@Opcode@@QEBA_NAEBV12@@Z	; Opcode::CollisionAABB::IsInside
PUBLIC	?GetContactStatus@Collider@Opcode@@QEBAHXZ	; Opcode::Collider::GetContactStatus
PUBLIC	?FirstContactEnabled@Collider@Opcode@@QEBAHXZ	; Opcode::Collider::FirstContactEnabled
PUBLIC	?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ ; Opcode::Collider::TemporalCoherenceEnabled
PUBLIC	?InitQueryEx@Collider@Opcode@@MEAAXXZ		; Opcode::Collider::InitQueryEx
PUBLIC	?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ	; Opcode::VolumeCollider::InitQueryEx
PUBLIC	?GetNodes@AABBCollisionTree@Opcode@@QEBAPEBVAABBCollisionNode@2@XZ ; Opcode::AABBCollisionTree::GetNodes
PUBLIC	?GetNodes@AABBQuantizedTree@Opcode@@QEBAPEBVAABBQuantizedNode@2@XZ ; Opcode::AABBQuantizedTree::GetNodes
PUBLIC	?GetNodes@AABBQuantizedNoLeafTree@Opcode@@QEBAPEBVAABBQuantizedNoLeafNode@2@XZ ; Opcode::AABBQuantizedNoLeafTree::GetNodes
PUBLIC	?IsLeaf@AABBCollisionNode@Opcode@@QEBAHXZ	; Opcode::AABBCollisionNode::IsLeaf
PUBLIC	?GetPos@AABBCollisionNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBCollisionNode::GetPos
PUBLIC	?GetNeg@AABBCollisionNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBCollisionNode::GetNeg
PUBLIC	?GetPrimitive@AABBCollisionNode@Opcode@@QEBAIXZ	; Opcode::AABBCollisionNode::GetPrimitive
PUBLIC	?IsLeaf@AABBQuantizedNode@Opcode@@QEBAHXZ	; Opcode::AABBQuantizedNode::IsLeaf
PUBLIC	?GetPos@AABBQuantizedNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBQuantizedNode::GetPos
PUBLIC	?GetNeg@AABBQuantizedNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBQuantizedNode::GetNeg
PUBLIC	?GetPrimitive@AABBQuantizedNode@Opcode@@QEBAIXZ	; Opcode::AABBQuantizedNode::GetPrimitive
PUBLIC	?Add@Container@IceCore@@QEAAAEAV12@I@Z		; IceCore::Container::Add
PUBLIC	?HasLeaf@AABBQuantizedNoLeafNode@Opcode@@QEBAHXZ ; Opcode::AABBQuantizedNoLeafNode::HasLeaf
PUBLIC	?HasLeaf2@AABBQuantizedNoLeafNode@Opcode@@QEBAHXZ ; Opcode::AABBQuantizedNoLeafNode::HasLeaf2
PUBLIC	?GetPos@AABBQuantizedNoLeafNode@Opcode@@QEBAPEBV12@XZ ; Opcode::AABBQuantizedNoLeafNode::GetPos
PUBLIC	?GetNeg@AABBQuantizedNoLeafNode@Opcode@@QEBAPEBV12@XZ ; Opcode::AABBQuantizedNoLeafNode::GetNeg
PUBLIC	?GetPrimitive@AABBQuantizedNoLeafNode@Opcode@@QEBAIXZ ; Opcode::AABBQuantizedNoLeafNode::GetPrimitive
PUBLIC	?GetPrimitive2@AABBQuantizedNoLeafNode@Opcode@@QEBAIXZ ; Opcode::AABBQuantizedNoLeafNode::GetPrimitive2
PUBLIC	?ContactFound@Collider@Opcode@@QEBAHXZ		; Opcode::Collider::ContactFound
PUBLIC	?planeBoxOverlap@@YAHAEBVicePoint@IceMaths@@M0@Z ; planeBoxOverlap
PUBLIC	?TriBoxOverlap@AABBCollider@Opcode@@IEAAHXZ	; Opcode::AABBCollider::TriBoxOverlap
PUBLIC	?Add@Container@IceCore@@QEAAAEAV12@PEBII@Z	; IceCore::Container::Add
PUBLIC	??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z	; IceMaths::icePoint::operator+
PUBLIC	?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetCenter
PUBLIC	??DicePoint@IceMaths@@QEBA?AV01@M@Z		; IceMaths::icePoint::operator*
PUBLIC	?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetExtents
PUBLIC	?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ ; Opcode::AABBTreeNode::GetAABB
PUBLIC	?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBTreeNode::GetPos
PUBLIC	?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBTreeNode::GetNeg
PUBLIC	?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ		; Opcode::AABBTreeNode::IsLeaf
PUBLIC	?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ	; Opcode::AABBTreeNode::GetPrimitives
PUBLIC	?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ	; Opcode::AABBTreeNode::GetNbPrimitives
PUBLIC	?AABBContainsBox@AABBCollider@Opcode@@IEAAHAEBVicePoint@IceMaths@@0@Z ; Opcode::AABBCollider::AABBContainsBox
PUBLIC	?AABBAABBOverlap@AABBCollider@Opcode@@IEAAHAEBVicePoint@IceMaths@@0@Z ; Opcode::AABBCollider::AABBAABBOverlap
PUBLIC	??_7AABBCollider@Opcode@@6B@			; Opcode::AABBCollider::`vftable'
EXTRN	??_EAABBCollider@Opcode@@UEAAPEAXI@Z:PROC	; Opcode::AABBCollider::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT ??_7AABBCollider@Opcode@@6B@
CONST	SEGMENT
??_7AABBCollider@Opcode@@6B@ DQ FLAT:??_R4AABBCollider@Opcode@@6B@ ; Opcode::AABBCollider::`vftable'
	DQ	FLAT:??_EAABBCollider@Opcode@@UEAAPEAXI@Z
	DQ	FLAT:?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ
	DQ	FLAT:?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ
CONST	ENDS
;	COMDAT ??_R4AABBCollider@Opcode@@6B@
rdata$r	SEGMENT
??_R4AABBCollider@Opcode@@6B@ DD 01H			; Opcode::AABBCollider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVAABBCollider@Opcode@@@8
	DD	imagerel ??_R3AABBCollider@Opcode@@8
	DD	imagerel ??_R4AABBCollider@Opcode@@6B@
rdata$r	ENDS
;	COMDAT ??_R3AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R3AABBCollider@Opcode@@8 DD 00H			; Opcode::AABBCollider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2AABBCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R2AABBCollider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@AABBCollider@Opcode@@8 ; Opcode::AABBCollider::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@VolumeCollider@Opcode@@8
	DD	imagerel ??_R1A@?0A@EA@Collider@Opcode@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VolumeCollider@Opcode@@8 DD imagerel ??_R0?AVVolumeCollider@Opcode@@@8 ; Opcode::VolumeCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3VolumeCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R3VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R3VolumeCollider@Opcode@@8 DD 00H			; Opcode::VolumeCollider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2VolumeCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R2VolumeCollider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@VolumeCollider@Opcode@@8 ; Opcode::VolumeCollider::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Collider@Opcode@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Collider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Collider@Opcode@@8 DD imagerel ??_R0?AVCollider@Opcode@@@8 ; Opcode::Collider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Collider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R3Collider@Opcode@@8
rdata$r	SEGMENT
??_R3Collider@Opcode@@8 DD 00H				; Opcode::Collider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Collider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2Collider@Opcode@@8
rdata$r	SEGMENT
??_R2Collider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@Collider@Opcode@@8 ; Opcode::Collider::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVCollider@Opcode@@@8
_DATA	SEGMENT
??_R0?AVCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@	; Opcode::Collider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCollider@Opcode@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVVolumeCollider@Opcode@@@8
_DATA	SEGMENT
??_R0?AVVolumeCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::VolumeCollider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVVolumeCollider@Opcode@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AABBCollider@Opcode@@8 DD imagerel ??_R0?AVAABBCollider@Opcode@@@8 ; Opcode::AABBCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3AABBCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAABBCollider@Opcode@@@8
_DATA	SEGMENT
??_R0?AVAABBCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::AABBCollider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAABBCollider@Opcode@@', 00H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h
;	COMDAT ?InitQueryEx@Collider@Opcode@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?InitQueryEx@Collider@Opcode@@MEAAXXZ PROC		; Opcode::Collider::InitQueryEx, COMDAT

; 135  : 		virtual inline_		void			InitQueryEx()		{ mFlags &= ~OPC_TEMPORAL_CONTACT;	}

	and	DWORD PTR [rcx+8], -13			; fffffff3H
	ret	0
?InitQueryEx@Collider@Opcode@@MEAAXXZ ENDP		; Opcode::Collider::InitQueryEx
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ PROC	; Opcode::Collider::TemporalCoherenceEnabled, COMDAT

; 67   : 		inline_				BOOL			TemporalCoherenceEnabled()	const	{ return mFlags & OPC_TEMPORAL_COHERENCE;				}

	mov	eax, DWORD PTR [rcx+8]
	and	eax, 2
	ret	0
?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ ENDP	; Opcode::Collider::TemporalCoherenceEnabled
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?FirstContactEnabled@Collider@Opcode@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?FirstContactEnabled@Collider@Opcode@@QEBAHXZ PROC	; Opcode::Collider::FirstContactEnabled, COMDAT

; 59   : 		inline_				BOOL			FirstContactEnabled()		const	{ return mFlags & OPC_FIRST_CONTACT;					}

	mov	eax, DWORD PTR [rcx+8]
	and	eax, 1
	ret	0
?FirstContactEnabled@Collider@Opcode@@QEBAHXZ ENDP	; Opcode::Collider::FirstContactEnabled
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
_TEXT	ENDS
;	COMDAT ?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ
_TEXT	SEGMENT
this$ = 8
?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ PROC ; Opcode::AABBTreeNode::GetAABB, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, rcx
	ret	0
?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ ENDP ; Opcode::AABBTreeNode::GetAABB
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ PROC		; Opcode::AABBTreeNode::IsLeaf, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	cmp	QWORD PTR [rcx+24], 0
	jne	SHORT $LN3@IsLeaf
	cmp	QWORD PTR [rcx+32], 0
	jne	SHORT $LN3@IsLeaf
	mov	al, 1
	ret	0
$LN3@IsLeaf:
	xor	al, al
	ret	0
?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ ENDP		; Opcode::AABBTreeNode::IsLeaf
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ PROC	; Opcode::AABBTreeNode::GetNbPrimitives, COMDAT

; 54   : 		inline_	udword				GetNbPrimitives()	const	{ return mNbPrimitives;		}

	mov	eax, DWORD PTR [rcx+48]
	ret	0
?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ ENDP	; Opcode::AABBTreeNode::GetNbPrimitives
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ PROC	; Opcode::AABBTreeNode::GetPrimitives, COMDAT

; 53   : 		inline_	const udword*		GetPrimitives()		const	{ return mNodePrimitives;	}

	mov	rax, QWORD PTR [rcx+40]
	ret	0
?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ ENDP	; Opcode::AABBTreeNode::GetPrimitives
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ
_TEXT	SEGMENT
this$ = 8
?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ PROC		; Opcode::AABBTreeNode::GetPos, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, QWORD PTR [rcx+24]
	ret	0
?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ ENDP		; Opcode::AABBTreeNode::GetPos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ
_TEXT	SEGMENT
this$ = 8
?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ PROC		; Opcode::AABBTreeNode::GetNeg, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, QWORD PTR [rcx+32]
	ret	0
?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ ENDP		; Opcode::AABBTreeNode::GetNeg
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
_TEXT	ENDS
_TEXT	SEGMENT
this$ = 8
?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ PROC	; Opcode::AABBCollider::ValidateSettings

; 96   : 	return VolumeCollider::ValidateSettings();

	cmp	QWORD PTR [rcx+24], 0
	je	SHORT $LN3@ValidateSe@3
	cmp	QWORD PTR [rcx+32], 0
	je	SHORT $LN3@ValidateSe@3
	xor	eax, eax

; 97   : }

	ret	0

; 96   : 	return VolumeCollider::ValidateSettings();

$LN3@ValidateSe@3:
	lea	rax, OFFSET FLAT:??_C@_0DG@GPJAOPIP@Object?5pointers?5must?5be?5defined?$CB@

; 97   : }

	ret	0
?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ ENDP	; Opcode::AABBCollider::ValidateSettings
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_common.h
;	COMDAT ??1CollisionAABB@Opcode@@QEAA@XZ
_TEXT	SEGMENT
??1CollisionAABB@Opcode@@QEAA@XZ PROC			; Opcode::CollisionAABB::~CollisionAABB, COMDAT

; 53   : 		inline_				~CollisionAABB()					{}

	ret	0
??1CollisionAABB@Opcode@@QEAA@XZ ENDP			; Opcode::CollisionAABB::~CollisionAABB
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.h
_TEXT	ENDS
;	COMDAT ?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ PROC	; Opcode::VolumeCollider::InitQueryEx, COMDAT

; 141  : 								// Reset stats & contact status
; 142  : 								mNbVolumeBVTests	= 0;
; 143  : 								mNbVolumePrimTests	= 0;
; 144  : 								Collider::InitQueryEx();

	and	DWORD PTR [rcx+8], -13			; fffffff3H
	xor	eax, eax
	mov	QWORD PTR [rcx+64], rax

; 145  : 							}

	ret	0
?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ ENDP	; Opcode::VolumeCollider::InitQueryEx
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
_TEXT	ENDS
;	COMDAT ??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
p$ = 24
??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z PROC		; IceMaths::icePoint::operator+, COMDAT

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	movss	xmm0, DWORD PTR [r8]
	movss	xmm1, DWORD PTR [r8+4]
	mov	rax, rdx
	addss	xmm0, DWORD PTR [rcx]
	addss	xmm1, DWORD PTR [rcx+4]
	movss	DWORD PTR [rdx], xmm0
	movss	xmm0, DWORD PTR [r8+8]
	movss	DWORD PTR [rdx+4], xmm1
	addss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rdx+8], xmm0
	ret	0
??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z ENDP		; IceMaths::icePoint::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??DicePoint@IceMaths@@QEBA?AV01@M@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??DicePoint@IceMaths@@QEBA?AV01@M@Z PROC		; IceMaths::icePoint::operator*, COMDAT

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm1, DWORD PTR [rcx+8]
	mov	rax, rdx
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2
	movss	DWORD PTR [rdx], xmm0
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rdx+8], xmm1
	mulss	xmm0, xmm2
	movss	DWORD PTR [rdx+4], xmm0
	ret	0
??DicePoint@IceMaths@@QEBA?AV01@M@Z ENDP		; IceMaths::icePoint::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD imagerel $LN15
	DD	imagerel $LN15+94
	DD	imagerel $unwind$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD 010401H
	DD	02204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
xdata	ENDS
;	COMDAT ?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
$T109176 = 0
this$ = 32
extents$ = 40
?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetExtents, COMDAT

; 116  : 		inline_			void		GetExtents(Point& extents)				const		{ extents = (mMax - mMin)*0.5f;				}

$LN15:
	sub	rsp, 24
	movss	xmm1, DWORD PTR [rcx+12]
	movss	xmm2, DWORD PTR [rcx+16]
	movss	xmm3, DWORD PTR [rcx+20]
	subss	xmm1, DWORD PTR [rcx]
	subss	xmm2, DWORD PTR [rcx+4]
	subss	xmm3, DWORD PTR [rcx+8]
	movss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	movss	DWORD PTR $T109176[rsp], xmm1
	mov	eax, DWORD PTR $T109176[rsp]
	movss	DWORD PTR $T109176[rsp+4], xmm2
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR $T109176[rsp+4]
	movss	DWORD PTR $T109176[rsp+8], xmm3
	mov	DWORD PTR [rdx+4], eax
	mov	eax, DWORD PTR $T109176[rsp+8]
	mov	DWORD PTR [rdx+8], eax
	add	rsp, 24
	ret	0
?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetExtents
_TEXT	ENDS
PUBLIC	??1AABBCollider@Opcode@@UEAA@XZ			; Opcode::AABBCollider::~AABBCollider
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
_TEXT	SEGMENT
this$ = 8
??1AABBCollider@Opcode@@UEAA@XZ PROC			; Opcode::AABBCollider::~AABBCollider

; 86   : }

	lea	rax, OFFSET FLAT:??_7Collider@Opcode@@6B@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx], rax
	ret	0
??1AABBCollider@Opcode@@UEAA@XZ ENDP			; Opcode::AABBCollider::~AABBCollider
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAABBCollider@Opcode@@UEAAPEAXI@Z DD imagerel $LN32
	DD	imagerel $LN32+57
	DD	imagerel $unwind$??_GAABBCollider@Opcode@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAABBCollider@Opcode@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GAABBCollider@Opcode@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GAABBCollider@Opcode@@UEAAPEAXI@Z PROC		; Opcode::AABBCollider::`scalar deleting destructor', COMDAT
$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7Collider@Opcode@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN31@scalar@11
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN31@scalar@11:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GAABBCollider@Opcode@@UEAAPEAXI@Z ENDP		; Opcode::AABBCollider::`scalar deleting destructor'
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
pdata	SEGMENT
$pdata$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD imagerel $LN15
	DD	imagerel $LN15+94
	DD	imagerel $unwind$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD 010401H
	DD	02204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
xdata	ENDS
;	COMDAT ?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
$T123063 = 0
this$ = 32
center$ = 40
?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetCenter, COMDAT

; 114  : 		inline_			void		GetCenter(Point& center)				const		{ center = (mMax + mMin)*0.5f;				}

$LN15:
	sub	rsp, 24
	movss	xmm1, DWORD PTR [rcx+12]
	movss	xmm2, DWORD PTR [rcx+16]
	movss	xmm3, DWORD PTR [rcx+20]
	addss	xmm1, DWORD PTR [rcx]
	addss	xmm2, DWORD PTR [rcx+4]
	addss	xmm3, DWORD PTR [rcx+8]
	movss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	movss	DWORD PTR $T123063[rsp], xmm1
	mov	eax, DWORD PTR $T123063[rsp]
	movss	DWORD PTR $T123063[rsp+4], xmm2
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR $T123063[rsp+4]
	movss	DWORD PTR $T123063[rsp+8], xmm3
	mov	DWORD PTR [rdx+4], eax
	mov	eax, DWORD PTR $T123063[rsp+8]
	mov	DWORD PTR [rdx+8], eax
	add	rsp, 24
	ret	0
?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetCenter
END
