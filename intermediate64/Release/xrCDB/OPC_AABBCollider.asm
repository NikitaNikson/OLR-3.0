; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R2AABBCollider@Opcode@@8			; Opcode::AABBCollider::`RTTI Base Class Array'
PUBLIC	??_R2VolumeCollider@Opcode@@8			; Opcode::VolumeCollider::`RTTI Base Class Array'
PUBLIC	??_R2Collider@Opcode@@8				; Opcode::Collider::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AABBCollider@Opcode@@8		; Opcode::AABBCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VolumeCollider@Opcode@@8		; Opcode::VolumeCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Collider@Opcode@@8		; Opcode::Collider::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3VolumeCollider@Opcode@@8			; Opcode::VolumeCollider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVVolumeCollider@Opcode@@@8		; Opcode::VolumeCollider `RTTI Type Descriptor'
PUBLIC	??_R3Collider@Opcode@@8				; Opcode::Collider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCollider@Opcode@@@8			; Opcode::Collider `RTTI Type Descriptor'
PUBLIC	??_R3AABBCollider@Opcode@@8			; Opcode::AABBCollider::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVAABBCollider@Opcode@@@8			; Opcode::AABBCollider `RTTI Type Descriptor'
PUBLIC	??_R4AABBCollider@Opcode@@6B@			; Opcode::AABBCollider::`RTTI Complete Object Locator'
PUBLIC	??_7AABBCollider@Opcode@@6B@			; Opcode::AABBCollider::`vftable'
;	COMDAT ??_7AABBCollider@Opcode@@6B@
CONST	SEGMENT
??_7AABBCollider@Opcode@@6B@ DQ FLAT:??_R4AABBCollider@Opcode@@6B@ ; Opcode::AABBCollider::`vftable'
	DQ	FLAT:??_EAABBCollider@Opcode@@UEAAPEAXI@Z
	DQ	FLAT:?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ
	DQ	FLAT:?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ
CONST	ENDS
;	COMDAT ??_R4AABBCollider@Opcode@@6B@
rdata$r	SEGMENT
??_R4AABBCollider@Opcode@@6B@ DD 01H			; Opcode::AABBCollider::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVAABBCollider@Opcode@@@8
	DD	imagerel ??_R3AABBCollider@Opcode@@8
	DD	imagerel ??_R4AABBCollider@Opcode@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AVAABBCollider@Opcode@@@8
data$r	SEGMENT
??_R0?AVAABBCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::AABBCollider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAABBCollider@Opcode@@', 00H
data$r	ENDS
;	COMDAT ??_R3AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R3AABBCollider@Opcode@@8 DD 00H			; Opcode::AABBCollider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2AABBCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCollider@Opcode@@@8
data$r	SEGMENT
??_R0?AVCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@	; Opcode::Collider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCollider@Opcode@@', 00H
data$r	ENDS
;	COMDAT ??_R3Collider@Opcode@@8
rdata$r	SEGMENT
??_R3Collider@Opcode@@8 DD 00H				; Opcode::Collider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Collider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVolumeCollider@Opcode@@@8
data$r	SEGMENT
??_R0?AVVolumeCollider@Opcode@@@8 DQ FLAT:??_7type_info@@6B@ ; Opcode::VolumeCollider `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVVolumeCollider@Opcode@@', 00H
data$r	ENDS
;	COMDAT ??_R3VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R3VolumeCollider@Opcode@@8 DD 00H			; Opcode::VolumeCollider::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2VolumeCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Collider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Collider@Opcode@@8 DD imagerel ??_R0?AVCollider@Opcode@@@8 ; Opcode::Collider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Collider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VolumeCollider@Opcode@@8 DD imagerel ??_R0?AVVolumeCollider@Opcode@@@8 ; Opcode::VolumeCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3VolumeCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AABBCollider@Opcode@@8 DD imagerel ??_R0?AVAABBCollider@Opcode@@@8 ; Opcode::AABBCollider::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3AABBCollider@Opcode@@8
rdata$r	ENDS
;	COMDAT ??_R2Collider@Opcode@@8
rdata$r	SEGMENT
??_R2Collider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@Collider@Opcode@@8 ; Opcode::Collider::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2VolumeCollider@Opcode@@8
rdata$r	SEGMENT
??_R2VolumeCollider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@VolumeCollider@Opcode@@8 ; Opcode::VolumeCollider::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Collider@Opcode@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2AABBCollider@Opcode@@8
rdata$r	SEGMENT
??_R2AABBCollider@Opcode@@8 DD imagerel ??_R1A@?0A@EA@AABBCollider@Opcode@@8 ; Opcode::AABBCollider::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@VolumeCollider@Opcode@@8
	DD	imagerel ??_R1A@?0A@EA@Collider@Opcode@@8
	ORG $+3
PUBLIC	??1CollisionAABB@Opcode@@QEAA@XZ		; Opcode::CollisionAABB::~CollisionAABB
PUBLIC	?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ	; Opcode::VolumeCollider::InitQueryEx
PUBLIC	?InitQueryEx@Collider@Opcode@@MEAAXXZ		; Opcode::Collider::InitQueryEx
PUBLIC	?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ ; Opcode::Collider::TemporalCoherenceEnabled
PUBLIC	?FirstContactEnabled@Collider@Opcode@@QEBAHXZ	; Opcode::Collider::FirstContactEnabled
PUBLIC	??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z	; IceMaths::icePoint::operator+
PUBLIC	?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetCenter
PUBLIC	??DicePoint@IceMaths@@QEBA?AV01@M@Z		; IceMaths::icePoint::operator*
PUBLIC	?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ ; Opcode::AABBTreeNode::GetAABB
PUBLIC	?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetExtents
PUBLIC	?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ		; Opcode::AABBTreeNode::IsLeaf
PUBLIC	?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ	; Opcode::AABBTreeNode::GetNbPrimitives
PUBLIC	?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ	; Opcode::AABBTreeNode::GetPrimitives
PUBLIC	?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBTreeNode::GetPos
PUBLIC	?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ	; Opcode::AABBTreeNode::GetNeg
PUBLIC	?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ ; Opcode::AABBCollider::ValidateSettings
PUBLIC	??1AABBCollider@Opcode@@UEAA@XZ			; Opcode::AABBCollider::~AABBCollider
PUBLIC	??_GAABBCollider@Opcode@@UEAAPEAXI@Z		; Opcode::AABBCollider::`scalar deleting destructor'
EXTRN	??_EAABBCollider@Opcode@@UEAAPEAXI@Z:PROC	; Opcode::AABBCollider::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD imagerel $LN16
	DD	imagerel $LN16+81
	DD	imagerel $unwind$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD imagerel $LN16
	DD	imagerel $LN16+81
	DD	imagerel $unwind$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAABBCollider@Opcode@@UEAAPEAXI@Z DD imagerel $LN35
	DD	imagerel $LN35+57
	DD	imagerel $unwind$??_GAABBCollider@Opcode@@UEAAPEAXI@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAABBCollider@Opcode@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD 010401H
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z DD 010401H
	DD	02204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
;	COMDAT ??_GAABBCollider@Opcode@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GAABBCollider@Opcode@@UEAAPEAXI@Z PROC		; Opcode::AABBCollider::`scalar deleting destructor', COMDAT
$LN35:
	push	rbx
	sub	rsp, 32					; 00000020H
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp

; 51   : {

	lea	rax, OFFSET FLAT:??_7Collider@Opcode@@6B@
	mov	rbx, rcx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp

; 62   : 	mTouchedPrimitives = null;

	mov	QWORD PTR [rcx+16], 0
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp

; 51   : {

	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN33@scalar
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN33@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GAABBCollider@Opcode@@UEAAPEAXI@Z ENDP		; Opcode::AABBCollider::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
_TEXT	SEGMENT
this$ = 8
??1AABBCollider@Opcode@@UEAA@XZ PROC			; Opcode::AABBCollider::~AABBCollider
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp

; 51   : {

	lea	rax, OFFSET FLAT:??_7Collider@Opcode@@6B@
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp

; 62   : 	mTouchedPrimitives = null;

	mov	QWORD PTR [rcx+16], 0
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.cpp

; 51   : {

	mov	QWORD PTR [rcx], rax
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp

; 86   : }

	ret	0
??1AABBCollider@Opcode@@UEAA@XZ ENDP			; Opcode::AABBCollider::~AABBCollider
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp
_TEXT	SEGMENT
this$ = 8
?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ PROC	; Opcode::AABBCollider::ValidateSettings
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.cpp

; 76   : 	if(!mFaces || !mVerts)	return "Object pointers must be defined! Call: SetPointers().";

	cmp	QWORD PTR [rcx+24], 0
	je	SHORT $LN3@ValidateSe
	cmp	QWORD PTR [rcx+32], 0
	je	SHORT $LN3@ValidateSe
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbcollider.cpp

; 96   : 	return VolumeCollider::ValidateSettings();

	xor	eax, eax

; 97   : }

	ret	0
$LN3@ValidateSe:

; 96   : 	return VolumeCollider::ValidateSettings();

	lea	rax, OFFSET FLAT:??_C@_0DG@GPJAOPIP@Object?5pointers?5must?5be?5defined?$CB@

; 97   : }

	ret	0
?ValidateSettings@AABBCollider@Opcode@@UEAAPEBDXZ ENDP	; Opcode::AABBCollider::ValidateSettings
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ
_TEXT	SEGMENT
this$ = 8
?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ PROC		; Opcode::AABBTreeNode::GetNeg, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, QWORD PTR [rcx+32]
	ret	0
?GetNeg@AABBTreeNode@Opcode@@QEBAPEBV12@XZ ENDP		; Opcode::AABBTreeNode::GetNeg
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ
_TEXT	SEGMENT
this$ = 8
?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ PROC		; Opcode::AABBTreeNode::GetPos, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, QWORD PTR [rcx+24]
	ret	0
?GetPos@AABBTreeNode@Opcode@@QEBAPEBV12@XZ ENDP		; Opcode::AABBTreeNode::GetPos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ PROC	; Opcode::AABBTreeNode::GetPrimitives, COMDAT

; 53   : 		inline_	const udword*		GetPrimitives()		const	{ return mNodePrimitives;	}

	mov	rax, QWORD PTR [rcx+40]
	ret	0
?GetPrimitives@AABBTreeNode@Opcode@@QEBAPEBIXZ ENDP	; Opcode::AABBTreeNode::GetPrimitives
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ PROC	; Opcode::AABBTreeNode::GetNbPrimitives, COMDAT

; 54   : 		inline_	udword				GetNbPrimitives()	const	{ return mNbPrimitives;		}

	mov	eax, DWORD PTR [rcx+48]
	ret	0
?GetNbPrimitives@AABBTreeNode@Opcode@@QEBAIXZ ENDP	; Opcode::AABBTreeNode::GetNbPrimitives
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ PROC		; Opcode::AABBTreeNode::IsLeaf, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	cmp	QWORD PTR [rcx+24], 0
	jne	SHORT $LN3@IsLeaf
	cmp	QWORD PTR [rcx+32], 0
	jne	SHORT $LN3@IsLeaf
	mov	al, 1
	ret	0
$LN3@IsLeaf:
	xor	al, al
	ret	0
?IsLeaf@AABBTreeNode@Opcode@@QEBA_NXZ ENDP		; Opcode::AABBTreeNode::IsLeaf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
;	COMDAT ?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
extents$ = 40
?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetExtents, COMDAT

; 116  : 		inline_			void		GetExtents(Point& extents)				const		{ extents = (mMax - mMin)*0.5f;				}

$LN16:
	sub	rsp, 24
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h

; 375  : 		inline_	Point			operator-(const Point& p)			const		{ return Point(x - p.x, y - p.y, z - p.z);			}

	movss	xmm3, DWORD PTR [rcx+12]

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	movss	xmm0, DWORD PTR __real@3f000000

; 375  : 		inline_	Point			operator-(const Point& p)			const		{ return Point(x - p.x, y - p.y, z - p.z);			}

	movss	xmm1, DWORD PTR [rcx+20]
	subss	xmm3, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+16]
	subss	xmm1, DWORD PTR [rcx+8]

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	mulss	xmm1, xmm0
	mulss	xmm3, xmm0

; 375  : 		inline_	Point			operator-(const Point& p)			const		{ return Point(x - p.x, y - p.y, z - p.z);			}

	subss	xmm2, DWORD PTR [rcx+4]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR $T1[rsp+8], xmm1
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h

; 116  : 		inline_			void		GetExtents(Point& extents)				const		{ extents = (mMax - mMin)*0.5f;				}

	mov	eax, DWORD PTR $T1[rsp+8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	mulss	xmm2, xmm0
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h

; 116  : 		inline_			void		GetExtents(Point& extents)				const		{ extents = (mMax - mMin)*0.5f;				}

	movaps	xmm0, xmm3
	unpcklps xmm0, xmm2
	movsdx	QWORD PTR [rdx], xmm0
	mov	DWORD PTR [rdx+8], eax
	add	rsp, 24
	ret	0
?GetExtents@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetExtents
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabbtree.h
;	COMDAT ?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ
_TEXT	SEGMENT
this$ = 8
?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ PROC ; Opcode::AABBTreeNode::GetAABB, COMDAT

; 50   : 									IMPLEMENT_TREE(AABBTreeNode, AABB)

	mov	rax, rcx
	ret	0
?GetAABB@AABBTreeNode@Opcode@@QEBAPEBVAABB@Meshmerizer@@XZ ENDP ; Opcode::AABBTreeNode::GetAABB
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
;	COMDAT ??DicePoint@IceMaths@@QEBA?AV01@M@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
s$dead$ = 24
??DicePoint@IceMaths@@QEBA?AV01@M@Z PROC		; IceMaths::icePoint::operator*, COMDAT

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm1, DWORD PTR [rcx+8]
	mov	rax, rdx
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx], xmm0

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	movss	xmm0, DWORD PTR [rcx+4]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx+8], xmm1

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	mulss	xmm0, xmm2

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx+4], xmm0

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	ret	0
??DicePoint@IceMaths@@QEBA?AV01@M@Z ENDP		; IceMaths::icePoint::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
;	COMDAT ?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
center$ = 40
?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetCenter, COMDAT

; 114  : 		inline_			void		GetCenter(Point& center)				const		{ center = (mMax + mMin)*0.5f;				}

$LN16:
	sub	rsp, 24
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	movss	xmm3, DWORD PTR [rcx+12]

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	movss	xmm0, DWORD PTR __real@3f000000

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	movss	xmm1, DWORD PTR [rcx+20]
	addss	xmm3, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+16]
	addss	xmm1, DWORD PTR [rcx+8]

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	mulss	xmm1, xmm0
	mulss	xmm3, xmm0

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	addss	xmm2, DWORD PTR [rcx+4]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR $T1[rsp+8], xmm1
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h

; 114  : 		inline_			void		GetCenter(Point& center)				const		{ center = (mMax + mMin)*0.5f;				}

	mov	eax, DWORD PTR $T1[rsp+8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h

; 380  : 		inline_	Point			operator*(float s)					const		{ return Point(x * s,   y * s,   z * s );			}

	mulss	xmm2, xmm0
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h

; 114  : 		inline_			void		GetCenter(Point& center)				const		{ center = (mMax + mMin)*0.5f;				}

	movaps	xmm0, xmm3
	unpcklps xmm0, xmm2
	movsdx	QWORD PTR [rdx], xmm0
	mov	DWORD PTR [rdx+8], eax
	add	rsp, 24
	ret	0
?GetCenter@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetCenter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
;	COMDAT ??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
p$ = 24
??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z PROC		; IceMaths::icePoint::operator+, COMDAT

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	movss	xmm0, DWORD PTR [r8]
	movss	xmm1, DWORD PTR [r8+4]
	mov	rax, rdx
	addss	xmm0, DWORD PTR [rcx]
	addss	xmm1, DWORD PTR [rcx+4]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx], xmm0

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	movss	xmm0, DWORD PTR [r8+8]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx+4], xmm1

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	addss	xmm0, DWORD PTR [rcx+8]

; 46   : 		inline_					Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z)	{}

	movss	DWORD PTR [rdx+8], xmm0

; 373  : 		inline_	Point			operator+(const Point& p)			const		{ return Point(x + p.x, y + p.y, z + p.z);			}

	ret	0
??HicePoint@IceMaths@@QEBA?AV01@AEBV01@@Z ENDP		; IceMaths::icePoint::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h
;	COMDAT ?FirstContactEnabled@Collider@Opcode@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?FirstContactEnabled@Collider@Opcode@@QEBAHXZ PROC	; Opcode::Collider::FirstContactEnabled, COMDAT

; 59   : 		inline_				BOOL			FirstContactEnabled()		const	{ return mFlags & OPC_FIRST_CONTACT;					}

	mov	eax, DWORD PTR [rcx+8]
	and	eax, 1
	ret	0
?FirstContactEnabled@Collider@Opcode@@QEBAHXZ ENDP	; Opcode::Collider::FirstContactEnabled
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h
;	COMDAT ?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ PROC	; Opcode::Collider::TemporalCoherenceEnabled, COMDAT

; 67   : 		inline_				BOOL			TemporalCoherenceEnabled()	const	{ return mFlags & OPC_TEMPORAL_COHERENCE;				}

	mov	eax, DWORD PTR [rcx+8]
	and	eax, 2
	ret	0
?TemporalCoherenceEnabled@Collider@Opcode@@QEBAHXZ ENDP	; Opcode::Collider::TemporalCoherenceEnabled
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h
;	COMDAT ?InitQueryEx@Collider@Opcode@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?InitQueryEx@Collider@Opcode@@MEAAXXZ PROC		; Opcode::Collider::InitQueryEx, COMDAT

; 135  : 		virtual inline_		void			InitQueryEx()		{ mFlags &= ~OPC_TEMPORAL_CONTACT;	}

	and	DWORD PTR [rcx+8], -13			; fffffff3H
	ret	0
?InitQueryEx@Collider@Opcode@@MEAAXXZ ENDP		; Opcode::Collider::InitQueryEx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.h
;	COMDAT ?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ PROC	; Opcode::VolumeCollider::InitQueryEx, COMDAT
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_collider.h

; 135  : 		virtual inline_		void			InitQueryEx()		{ mFlags &= ~OPC_TEMPORAL_CONTACT;	}

	and	DWORD PTR [rcx+8], -13			; fffffff3H
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_volumecollider.h

; 142  : 								mNbVolumeBVTests	= 0;

	xor	eax, eax
	mov	QWORD PTR [rcx+64], rax

; 143  : 								mNbVolumePrimTests	= 0;
; 144  : 								Collider::InitQueryEx();
; 145  : 							}

	ret	0
?InitQueryEx@VolumeCollider@Opcode@@MEAAXXZ ENDP	; Opcode::VolumeCollider::InitQueryEx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_common.h
;	COMDAT ??1CollisionAABB@Opcode@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1CollisionAABB@Opcode@@QEAA@XZ PROC			; Opcode::CollisionAABB::~CollisionAABB, COMDAT

; 53   : 		inline_				~CollisionAABB()					{}

	ret	0
??1CollisionAABB@Opcode@@QEAA@XZ ENDP			; Opcode::CollisionAABB::~CollisionAABB
_TEXT	ENDS
END
