; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Min@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z	; IceMaths::icePoint::Min
PUBLIC	?Max@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z	; IceMaths::icePoint::Max
PUBLIC	?SetMinMax@AABB@Meshmerizer@@QEAAXAEBVicePoint@IceMaths@@0@Z ; Meshmerizer::AABB::SetMinMax
PUBLIC	?GetMin@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetMin
PUBLIC	?GetMax@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ; Meshmerizer::AABB::GetMax
PUBLIC	?GetMin@AABB@Meshmerizer@@QEBAMI@Z		; Meshmerizer::AABB::GetMin
PUBLIC	?GetMax@AABB@Meshmerizer@@QEBAMI@Z		; Meshmerizer::AABB::GetMax
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.h
;	COMDAT ?GetMin@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
this$ = 8
min$ = 16
?GetMin@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetMin, COMDAT

; 104  : 		inline_			void		GetMin(Point& min)						const		{ min = mMin;								}

	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR [rdx+4], eax
	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [rdx+8], eax
	ret	0
?GetMin@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetMin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetMax@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z
_TEXT	SEGMENT
this$ = 8
max$ = 16
?GetMax@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z PROC ; Meshmerizer::AABB::GetMax, COMDAT

; 106  : 		inline_			void		GetMax(Point& max)						const		{ max = mMax;								}

	mov	eax, DWORD PTR [rcx+12]
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR [rcx+16]
	mov	DWORD PTR [rdx+4], eax
	mov	eax, DWORD PTR [rcx+20]
	mov	DWORD PTR [rdx+8], eax
	ret	0
?GetMax@AABB@Meshmerizer@@QEBAXAEAVicePoint@IceMaths@@@Z ENDP ; Meshmerizer::AABB::GetMax
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?SetMinMax@AABB@Meshmerizer@@QEAAXAEBVicePoint@IceMaths@@0@Z
_TEXT	SEGMENT
this$ = 8
min$ = 16
max$ = 24
?SetMinMax@AABB@Meshmerizer@@QEAAXAEBVicePoint@IceMaths@@0@Z PROC ; Meshmerizer::AABB::SetMinMax, COMDAT

; 50   : 						void		SetMinMax(const Point& min, const Point& max)		{ mMin = min;		mMax = max;									}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [rcx+4], eax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax
	mov	eax, DWORD PTR [r8]
	mov	DWORD PTR [rcx+12], eax
	mov	eax, DWORD PTR [r8+4]
	mov	DWORD PTR [rcx+16], eax
	mov	eax, DWORD PTR [r8+8]
	mov	DWORD PTR [rcx+20], eax
	ret	0
?SetMinMax@AABB@Meshmerizer@@QEAAXAEBVicePoint@IceMaths@@0@Z ENDP ; Meshmerizer::AABB::SetMinMax
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_point.h
;	COMDAT ?Min@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
?Min@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z PROC	; IceMaths::icePoint::Min, COMDAT

; 214  : 		inline_	Point&			Min(const Point& p)				{ x = _min(x, p.x); y = _min(y, p.y); z = _min(z, p.z);	return *this;	}

	movss	xmm1, DWORD PTR [rdx]
	movss	xmm0, DWORD PTR [rcx]
	comiss	xmm0, xmm1
	jb	SHORT $LN6@Min
	movaps	xmm0, xmm1
$LN6@Min:
	movss	DWORD PTR [rcx], xmm0
	movss	xmm1, DWORD PTR [rdx+4]
	movss	xmm0, DWORD PTR [rcx+4]
	comiss	xmm0, xmm1
	jb	SHORT $LN10@Min
	movaps	xmm0, xmm1
$LN10@Min:
	movss	DWORD PTR [rcx+4], xmm0
	movss	xmm1, DWORD PTR [rdx+8]
	movss	xmm0, DWORD PTR [rcx+8]
	mov	rax, rcx
	comiss	xmm0, xmm1
	jae	SHORT $LN13@Min
	movss	DWORD PTR [rcx+8], xmm0
	ret	0
$LN13@Min:
	movss	DWORD PTR [rcx+8], xmm1
	ret	0
?Min@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z ENDP	; IceMaths::icePoint::Min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Max@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
?Max@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z PROC	; IceMaths::icePoint::Max, COMDAT

; 216  : 		inline_	Point&			Max(const Point& p)				{ x = _max(x, p.x); y = _max(y, p.y); z = _max(z, p.z);	return *this;	}

	movss	xmm1, DWORD PTR [rdx]
	movss	xmm0, DWORD PTR [rcx]
	comiss	xmm0, xmm1
	ja	SHORT $LN6@Max
	movaps	xmm0, xmm1
$LN6@Max:
	movss	DWORD PTR [rcx], xmm0
	movss	xmm1, DWORD PTR [rdx+4]
	movss	xmm0, DWORD PTR [rcx+4]
	comiss	xmm0, xmm1
	ja	SHORT $LN10@Max
	movaps	xmm0, xmm1
$LN10@Max:
	movss	DWORD PTR [rcx+4], xmm0
	movss	xmm1, DWORD PTR [rdx+8]
	movss	xmm0, DWORD PTR [rcx+8]
	mov	rax, rcx
	comiss	xmm0, xmm1
	jbe	SHORT $LN13@Max
	movss	DWORD PTR [rcx+8], xmm0
	ret	0
$LN13@Max:
	movss	DWORD PTR [rcx+8], xmm1
	ret	0
?Max@icePoint@IceMaths@@QEAAAEAV12@AEBV12@@Z ENDP	; IceMaths::icePoint::Max
_TEXT	ENDS
PUBLIC	?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z	; Meshmerizer::AABB::Add
pdata	SEGMENT
$pdata$?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN47
	DD	imagerel $LN47+281
	DD	imagerel $unwind$?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z DD 061201H
	DD	077412H
	DD	063412H
	DD	0500b3212H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_aabb.cpp
xdata	ENDS
_TEXT	SEGMENT
Max$ = 0
Min$ = 0
Tmp$ = 16
this$ = 48
aabb$ = 56
?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z PROC	; Meshmerizer::AABB::Add

; 34   : {

$LN47:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rdi
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32					; 00000020H

; 35   : 	// Compute _new_ min & max values
; 36   : 	Point Min;	GetMin(Min);
; 37   : 	Point Tmp;	aabb.GetMin(Tmp);

	mov	eax, DWORD PTR [rdx]
	mov	r8d, DWORD PTR [rcx]
	mov	r9d, DWORD PTR [rcx+4]
	mov	r10d, DWORD PTR [rcx+8]
	mov	DWORD PTR Tmp$[rbp-32], eax
	mov	eax, DWORD PTR [rdx+4]

; 38   : 	Min.Min(Tmp);

	movss	xmm1, DWORD PTR Tmp$[rbp-32]
	mov	DWORD PTR Tmp$[rbp-28], eax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR Min$[rbp-32], r8d
	movss	xmm0, DWORD PTR Min$[rbp-32]
	comiss	xmm0, xmm1
	mov	rdi, rdx
	mov	DWORD PTR Min$[rbp-28], r9d
	mov	DWORD PTR Min$[rbp-24], r10d
	mov	DWORD PTR Tmp$[rbp-24], eax
	jb	SHORT $LN12@Add
	movss	DWORD PTR Min$[rbp-32], xmm1
	mov	r8d, DWORD PTR Min$[rbp-32]
$LN12@Add:
	movss	xmm1, DWORD PTR Tmp$[rbp-28]
	movss	xmm0, DWORD PTR Min$[rbp-28]
	comiss	xmm0, xmm1
	jb	SHORT $LN16@Add
	movss	DWORD PTR Min$[rbp-28], xmm1
	mov	r9d, DWORD PTR Min$[rbp-28]
$LN16@Add:
	movss	xmm1, DWORD PTR Tmp$[rbp-24]
	movss	xmm0, DWORD PTR Min$[rbp-24]
	comiss	xmm0, xmm1
	jb	SHORT $LN20@Add
	movss	DWORD PTR Min$[rbp-24], xmm1
	mov	r10d, DWORD PTR Min$[rbp-24]
$LN20@Add:

; 39   : 
; 40   : 	Point Max;	GetMax(Max);
; 41   : 	aabb.GetMax(Tmp);

	mov	eax, DWORD PTR [rdi+12]
	mov	edx, DWORD PTR [rcx+12]
	mov	r11d, DWORD PTR [rcx+16]
	mov	ebx, DWORD PTR [rcx+20]
	mov	DWORD PTR Tmp$[rbp-32], eax
	mov	eax, DWORD PTR [rdi+16]

; 42   : 	Max.Max(Tmp);

	movss	xmm1, DWORD PTR Tmp$[rbp-32]
	mov	DWORD PTR Tmp$[rbp-28], eax
	mov	eax, DWORD PTR [rdi+20]
	mov	DWORD PTR Max$[rbp-32], edx
	movss	xmm0, DWORD PTR Max$[rbp-32]
	comiss	xmm0, xmm1
	mov	DWORD PTR Max$[rbp-28], r11d
	mov	DWORD PTR Max$[rbp-24], ebx
	mov	DWORD PTR Tmp$[rbp-24], eax
	ja	SHORT $LN30@Add
	movss	DWORD PTR Max$[rbp-32], xmm1
	mov	edx, DWORD PTR Max$[rbp-32]
$LN30@Add:
	movss	xmm1, DWORD PTR Tmp$[rbp-28]
	movss	xmm0, DWORD PTR Max$[rbp-28]
	comiss	xmm0, xmm1
	ja	SHORT $LN34@Add
	movss	DWORD PTR Max$[rbp-28], xmm1
	mov	r11d, DWORD PTR Max$[rbp-28]
$LN34@Add:
	movss	xmm1, DWORD PTR Tmp$[rbp-24]
	movss	xmm0, DWORD PTR Max$[rbp-24]
	comiss	xmm0, xmm1
	ja	SHORT $LN38@Add
	movss	DWORD PTR Max$[rbp-24], xmm1
	mov	ebx, DWORD PTR Max$[rbp-24]
$LN38@Add:

; 43   : 
; 44   : 	// Update this
; 45   : 	SetMinMax(Min, Max);
; 46   : 	return *this;
; 47   : }

	mov	rdi, QWORD PTR [rsp+56]
	mov	DWORD PTR [rcx+12], edx
	mov	DWORD PTR [rcx], r8d
	mov	DWORD PTR [rcx+16], r11d
	mov	DWORD PTR [rcx+4], r9d
	mov	DWORD PTR [rcx+20], ebx
	mov	rbx, QWORD PTR [rsp+48]
	mov	DWORD PTR [rcx+8], r10d
	mov	rax, rcx
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?Add@AABB@Meshmerizer@@QEAAAEAV12@AEBV12@@Z ENDP	; Meshmerizer::AABB::Add
END
