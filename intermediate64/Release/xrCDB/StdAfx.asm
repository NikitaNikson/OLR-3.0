; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??$xr_free@X@@YAXAEAPEAX@Z			; xr_free<void>
PUBLIC	__@@_PchSym_@00@UfhvihUmfnnviUwlxfnvmghUtrgsfyUloiRDOAUrmgvinvwrzgvGEUivovzhvUcixwyUhgwzucOlyq@
EXTRN	__imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z:PROC
EXTRN	__imp_?mem_free@xrMemory@@QEAAXPEAX@Z:PROC
__@@_PchSym_@00@UfhvihUmfnnviUwlxfnvmghUtrgsfyUloiRDOAUrmgvinvwrzgvGEUivovzhvUcixwyUhgwzucOlyq@ DD 01H DUP (?)
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_free@X@@YAXAEAPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@X@@YAXAEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@X@@YAXAEAPEAX@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@X@@YAXAEAPEAX@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@X@@YAXAEAPEAX@Z PROC				; xr_free<void>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@12
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@12:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@X@@YAXAEAPEAX@Z ENDP				; xr_free<void>
_TEXT	ENDS
PUBLIC	??_I@YAXPEAX_KHP6AX0@Z@Z			; `vector destructor iterator'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_I@YAXPEAX_KHP6AX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+81
	DD	imagerel $unwind$??_I@YAXPEAX_KHP6AX0@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_I@YAXPEAX_KHP6AX0@Z@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_I@YAXPEAX_KHP6AX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_I@YAXPEAX_KHP6AX0@Z@Z PROC				; `vector destructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movsxd	rdi, r8d
	mov	rbp, r9
	mov	rsi, rdx
	mov	rbx, rdi
	imul	rbx, rdx
	add	rbx, rcx
	dec	edi
	js	SHORT $LN1@vector
	npad	5
$LL2@vector:
	sub	rbx, rsi
	mov	rcx, rbx
	call	rbp
	dec	edi
	jns	SHORT $LL2@vector
$LN1@vector:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_I@YAXPEAX_KHP6AX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
PUBLIC	??_H@YAXPEAX_KHP6APEAX0@Z@Z			; `vector constructor iterator'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_KHP6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$??_H@YAXPEAX_KHP6APEAX0@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_KHP6APEAX0@Z@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_H@YAXPEAX_KHP6APEAX0@Z@Z
_TEXT	SEGMENT
__t$ = 48
__s$ = 56
__n$ = 64
__f$ = 72
??_H@YAXPEAX_KHP6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	edi, r8d
	mov	rsi, r9
	mov	rbp, rdx
	dec	edi
	mov	rbx, rcx
	js	SHORT $LN1@vector@2
$LL2@vector@2:
	mov	rcx, rbx
	call	rsi
	add	rbx, rbp
	dec	edi
	jns	SHORT $LL2@vector@2
$LN1@vector@2:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_H@YAXPEAX_KHP6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	??3@YAXPEAX@Z					; operator delete
;	COMDAT pdata
pdata	SEGMENT
$pdata$??3@YAXPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$??3@YAXPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??3@YAXPEAX@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??3@YAXPEAX@Z
_TEXT	SEGMENT
p$ = 48
??3@YAXPEAX@Z PROC					; operator delete, COMDAT

; 127  : 	IC void		operator delete		(void *p)			{	xr_free(p);											}

$LN6:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN3@operator@2
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN3@operator@2:
	add	rsp, 40					; 00000028H
	ret	0
??3@YAXPEAX@Z ENDP					; operator delete
END
