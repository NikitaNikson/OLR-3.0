; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?size@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEBAIXZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::size
PUBLIC	?clear_not_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_not_free
PUBLIC	?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
PUBLIC	?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@AEAPEAURESULT@CDB@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64>
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator++
PUBLIC	??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEBU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEBU23@@Z ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT const & __ptr64>
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > > >
PUBLIC	??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Buy
PUBLIC	??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
PUBLIC	??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
PUBLIC	??$forward@AEAURESULT@CDB@@@std@@YAAEAURESULT@CDB@@AEAU12@@Z ; std::forward<CDB::RESULT & __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEAU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEAU23@@Z ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT & __ptr64>
PUBLIC	??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
PUBLIC	??$_Uninitialized_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z ; std::_Uninitialized_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
PUBLIC	??$_Ucopy@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<CDB::RESULT * __ptr64>
PUBLIC	??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
PUBLIC	??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
PUBLIC	?clear_and_free@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear_and_free
PUBLIC	?clear@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear
PUBLIC	?clear_and_free@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear_and_free
PUBLIC	?clear@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear
PUBLIC	??0?$xalloc@U?$_vector3@M@@@@QEAA@XZ		; xalloc<_vector3<float> >::xalloc<_vector3<float> >
PUBLIC	??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??0?$xalloc@VTRI@CDB@@@@QEAA@XZ			; xalloc<CDB::TRI>::xalloc<CDB::TRI>
PUBLIC	??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	??0?$xalloc@U?$_vector3@M@@@@QEAA@AEBV0@@Z	; xalloc<_vector3<float> >::xalloc<_vector3<float> >
PUBLIC	??0?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@V?$xalloc@U?$_vector3@M@@@@@Z ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin
PUBLIC	?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@AEAPEAU?$_vector3@M@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64>
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator++
PUBLIC	??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEBU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEBU2@@Z ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> const & __ptr64>
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > > >
PUBLIC	??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??0?$xalloc@VTRI@CDB@@@@QEAA@AEBV0@@Z		; xalloc<CDB::TRI>::xalloc<CDB::TRI>
PUBLIC	??0?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@V?$xalloc@VTRI@CDB@@@@@Z ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin
PUBLIC	?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@AEAPEAVTRI@CDB@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64>
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator++
PUBLIC	??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEBV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEBV23@@Z ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI const & __ptr64>
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > > >
PUBLIC	??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	?capacity@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::capacity
PUBLIC	?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end
PUBLIC	?_Make_iter@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Make_iter
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator!=
PUBLIC	??$move@AEAU?$_vector3@M@@@std@@YA$$QEAU?$_vector3@M@@AEAU1@@Z ; std::move<_vector3<float> & __ptr64>
PUBLIC	??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
PUBLIC	??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
PUBLIC	?erase@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@0@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::erase
PUBLIC	?clear@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAXXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::clear
PUBLIC	?allocate@?$xalloc@U?$_vector3@M@@@@QEBAPEAU?$_vector3@M@@_KPEBX@Z ; xalloc<_vector3<float> >::allocate
PUBLIC	?max_size@?$xalloc@U?$_vector3@M@@@@QEBA_KXZ	; xalloc<_vector3<float> >::max_size
PUBLIC	?max_size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::max_size
PUBLIC	?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Xlen
PUBLIC	?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Buy
PUBLIC	??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
PUBLIC	??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
PUBLIC	??$forward@AEBU?$_vector3@M@@@std@@YAAEBU?$_vector3@M@@AEBU1@@Z ; std::forward<_vector3<float> const & __ptr64>
PUBLIC	??$_Construct@U?$_vector3@M@@AEBU1@@std@@YAXPEAU?$_vector3@M@@AEBU1@@Z ; std::_Construct<_vector3<float>,_vector3<float> const & __ptr64>
PUBLIC	?construct@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@AEBU2@@Z ; xalloc<_vector3<float> >::construct
PUBLIC	??$forward@AEAU?$_vector3@M@@@std@@YAAEAU?$_vector3@M@@AEAU1@@Z ; std::forward<_vector3<float> & __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEAU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEAU2@@Z ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> & __ptr64>
PUBLIC	??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
PUBLIC	??$_Uninitialized_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@@Z ; std::_Uninitialized_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
PUBLIC	??$_Ucopy@PEAU?$_vector3@M@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@PEAU2@00@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<_vector3<float> * __ptr64>
PUBLIC	??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
PUBLIC	??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
PUBLIC	?capacity@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::capacity
PUBLIC	?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end
PUBLIC	?_Make_iter@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Make_iter
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator!=
PUBLIC	??$move@AEAVTRI@CDB@@@std@@YA$$QEAVTRI@CDB@@AEAV12@@Z ; std::move<CDB::TRI & __ptr64>
PUBLIC	??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
PUBLIC	??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
PUBLIC	?erase@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@0@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::erase
PUBLIC	?clear@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::clear
PUBLIC	?allocate@?$xalloc@VTRI@CDB@@@@QEBAPEAVTRI@CDB@@_KPEBX@Z ; xalloc<CDB::TRI>::allocate
PUBLIC	?max_size@?$xalloc@VTRI@CDB@@@@QEBA_KXZ		; xalloc<CDB::TRI>::max_size
PUBLIC	?max_size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::max_size
PUBLIC	?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Xlen
PUBLIC	?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Buy
PUBLIC	??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
PUBLIC	??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
PUBLIC	??$forward@AEBVTRI@CDB@@@std@@YAAEBVTRI@CDB@@AEBV12@@Z ; std::forward<CDB::TRI const & __ptr64>
PUBLIC	??$_Construct@VTRI@CDB@@AEBV12@@std@@YAXPEAVTRI@CDB@@AEBV12@@Z ; std::_Construct<CDB::TRI,CDB::TRI const & __ptr64>
PUBLIC	?construct@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@AEBV23@@Z ; xalloc<CDB::TRI>::construct
PUBLIC	??$forward@AEAVTRI@CDB@@@std@@YAAEAVTRI@CDB@@AEAV12@@Z ; std::forward<CDB::TRI & __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEAV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEAV23@@Z ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI & __ptr64>
PUBLIC	??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
PUBLIC	??$_Uninitialized_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@@Z ; std::_Uninitialized_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
PUBLIC	??$_Ucopy@PEAVTRI@CDB@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@PEAV23@00@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<CDB::TRI * __ptr64>
PUBLIC	??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
PUBLIC	??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >
PUBLIC	?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEBU?$_vector3@M@@XZ ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEAU?$_vector3@M@@XZ ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*
PUBLIC	?size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::size
PUBLIC	?size@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEBAIXZ ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::size
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >
PUBLIC	?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEBVTRI@CDB@@XZ ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEAVTRI@CDB@@XZ ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*
PUBLIC	?size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::size
PUBLIC	?size@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEBAIXZ ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::size
PUBLIC	??1?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::~_Vector_val<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z ; xalloc<_vector3<float> >::deallocate
PUBLIC	??$_Ptr_cat@U?$_vector3@M@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAU?$_vector3@M@@0@Z ; std::_Ptr_cat<_vector3<float>,_vector3<float> >
PUBLIC	??$_Destroy@U?$_vector3@M@@@std@@YAXPEAU?$_vector3@M@@@Z ; std::_Destroy<_vector3<float> >
PUBLIC	?destroy@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@@Z ; xalloc<_vector3<float> >::destroy
PUBLIC	??$_Dest_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@@Z ; std::_Dest_val<xalloc<_vector3<float> >,_vector3<float> >
PUBLIC	??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<_vector3<float> > >
PUBLIC	??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@@Z ; std::_Destroy_range<xalloc<_vector3<float> > >
PUBLIC	?_Destroy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXPEAU?$_vector3@M@@0@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Destroy
PUBLIC	?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Tidy
PUBLIC	??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::~vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::~xr_vector<_vector3<float>,xalloc<_vector3<float> > >
PUBLIC	??1?$_Vector_val@IV?$xalloc@I@@@std@@QEAA@XZ	; std::_Vector_val<unsigned int,xalloc<unsigned int> >::~_Vector_val<unsigned int,xalloc<unsigned int> >
PUBLIC	?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z		; xalloc<unsigned int>::deallocate
PUBLIC	??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAI0@Z ; std::_Ptr_cat<unsigned int,unsigned int>
PUBLIC	??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<unsigned int> >
PUBLIC	??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@@Z ; std::_Destroy_range<xalloc<unsigned int> >
PUBLIC	?_Destroy@?$vector@IV?$xalloc@I@@@std@@IEAAXPEAI0@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Destroy
PUBLIC	?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ	; std::vector<unsigned int,xalloc<unsigned int> >::_Tidy
PUBLIC	??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ		; std::vector<unsigned int,xalloc<unsigned int> >::~vector<unsigned int,xalloc<unsigned int> >
PUBLIC	??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ		; xr_vector<unsigned int,xalloc<unsigned int> >::~xr_vector<unsigned int,xalloc<unsigned int> >
PUBLIC	??1?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::~_Vector_val<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z ; xalloc<CDB::TRI>::deallocate
PUBLIC	??$_Ptr_cat@VTRI@CDB@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVTRI@CDB@@0@Z ; std::_Ptr_cat<CDB::TRI,CDB::TRI>
PUBLIC	??$_Destroy@VTRI@CDB@@@std@@YAXPEAVTRI@CDB@@@Z	; std::_Destroy<CDB::TRI>
PUBLIC	?destroy@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@@Z ; xalloc<CDB::TRI>::destroy
PUBLIC	??$_Dest_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@@Z ; std::_Dest_val<xalloc<CDB::TRI>,CDB::TRI>
PUBLIC	??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<CDB::TRI> >
PUBLIC	??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@@Z ; std::_Destroy_range<xalloc<CDB::TRI> >
PUBLIC	?_Destroy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXPEAVTRI@CDB@@0@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Destroy
PUBLIC	?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Tidy
PUBLIC	??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::~vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::~xr_vector<CDB::TRI,xalloc<CDB::TRI> >
PUBLIC	??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z		; Opcode::OPCODE_Model::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z ; xr_special_free<0,Opcode::OPCODE_Model>::operator()
PUBLIC	??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z ; xr_delete<Opcode::OPCODE_Model>
PUBLIC	?strstr@@YAPEADPEADPEBD@Z			; strstr
PUBLIC	??$xr_free@I@@YAXAEAPEAI@Z			; xr_free<unsigned int>
PUBLIC	??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z	; xr_free<CDB::TRI>
PUBLIC	??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z ; xr_free<_vector3<float> >
PUBLIC	??$xr_alloc@U?$_vector3@M@@@@YAPEAU?$_vector3@M@@I@Z ; xr_alloc<_vector3<float> >
PUBLIC	??$xr_alloc@VTRI@CDB@@@@YAPEAVTRI@CDB@@I@Z	; xr_alloc<CDB::TRI>
PUBLIC	??$xr_alloc@I@@YAPEAII@Z			; xr_alloc<unsigned int>
PUBLIC	??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ ; xr_new<Opcode::OPCODE_Model>
PUBLIC	?GetUsedBytes@OPCODE_Model@Opcode@@QEBAIXZ	; Opcode::OPCODE_Model::GetUsedBytes
PUBLIC	??0?$xalloc@URESULT@CDB@@@@QEAA@XZ		; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>
PUBLIC	??0?$xalloc@URESULT@CDB@@@@QEAA@AEBV0@@Z	; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>
PUBLIC	??0?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@V?$xalloc@URESULT@CDB@@@@@Z ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	??1?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::~_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Tidy
PUBLIC	??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::~vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::~xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
PUBLIC	?_Inside@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_NPEBURESULT@CDB@@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Inside
PUBLIC	??$xr_alloc@URESULT@CDB@@@@YAPEAURESULT@CDB@@I@Z ; xr_alloc<CDB::RESULT>
PUBLIC	?allocate@?$xalloc@URESULT@CDB@@@@QEBAPEAURESULT@CDB@@_KPEBX@Z ; xalloc<CDB::RESULT>::allocate
PUBLIC	??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z ; xr_free<CDB::RESULT>
PUBLIC	?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z ; xalloc<CDB::RESULT>::deallocate
PUBLIC	??$_Val_type@PEAURESULT@CDB@@@std@@YAPEAURESULT@CDB@@PEAU12@@Z ; std::_Val_type<CDB::RESULT * __ptr64>
PUBLIC	??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>
PUBLIC	??$_Uninitialized_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z ; std::_Uninitialized_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
PUBLIC	??$_Umove@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Umove<CDB::RESULT * __ptr64>
PUBLIC	?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve
PUBLIC	?size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::size
PUBLIC	?capacity@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::capacity
PUBLIC	?max_size@?$xalloc@URESULT@CDB@@@@QEBA_KXZ	; xalloc<CDB::RESULT>::max_size
PUBLIC	?max_size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::max_size
PUBLIC	?_Grow_to@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_K_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Grow_to
PUBLIC	?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Xlen
PUBLIC	?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXPEAURESULT@CDB@@0@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Orphan_range
PUBLIC	??$addressof@URESULT@CDB@@@std@@YAPEAURESULT@CDB@@AEAU12@@Z ; std::addressof<CDB::RESULT>
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??$forward@AEBURESULT@CDB@@@std@@YAAEBURESULT@CDB@@AEBU12@@Z ; std::forward<CDB::RESULT const & __ptr64>
PUBLIC	??$_Construct@URESULT@CDB@@AEBU12@@std@@YAXPEAURESULT@CDB@@AEBU12@@Z ; std::_Construct<CDB::RESULT,CDB::RESULT const & __ptr64>
PUBLIC	?construct@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@AEBU23@@Z ; xalloc<CDB::RESULT>::construct
PUBLIC	??$forward@URESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z ; std::forward<CDB::RESULT>
PUBLIC	??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@U23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@$$QEAU23@@Z ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT>
PUBLIC	?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::push_back
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEBURESULT@CDB@@XZ ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEAURESULT@CDB@@XZ ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-
PUBLIC	?back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAURESULT@CDB@@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::back
PUBLIC	?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
PUBLIC	?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >
PUBLIC	?_Make_iter@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Make_iter
PUBLIC	??$_Destroy@URESULT@CDB@@@std@@YAXPEAURESULT@CDB@@@Z ; std::_Destroy<CDB::RESULT>
PUBLIC	?destroy@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@@Z ; xalloc<CDB::RESULT>::destroy
PUBLIC	??$_Dest_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@@Z ; std::_Dest_val<xalloc<CDB::RESULT>,CDB::RESULT>
PUBLIC	??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<CDB::RESULT> >
PUBLIC	??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@@Z ; std::_Destroy_range<xalloc<CDB::RESULT> >
PUBLIC	?_Destroy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXPEAURESULT@CDB@@0@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Destroy
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator!=
PUBLIC	??$_Ptr_cat@URESULT@CDB@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAURESULT@CDB@@0@Z ; std::_Ptr_cat<CDB::RESULT,CDB::RESULT>
PUBLIC	??$move@AEAURESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z ; std::move<CDB::RESULT & __ptr64>
PUBLIC	??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
PUBLIC	??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
PUBLIC	?erase@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@0@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase
PUBLIC	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
PUBLIC	?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free
PUBLIC	??_C@_0CC@CPNHACKD@?$CB?5WARNING?3?5syncronized?5CDB?3?3quer@ ; `string'
PUBLIC	??_C@_0BC@GJKGJBBN@CDB?3?3MODEL?3?3build?$AA@	; `string'
PUBLIC	??_C@_09FONEFOJL@xrCDB?4cpp?$AA@		; `string'
PUBLIC	??_C@_0BB@DMGNJNBH@S_INIT?5?$DN?$DN?5status?$AA@ ; `string'
PUBLIC	??_C@_0BF@JLEIHKIA@?$CIVcnt?$DO?$DN4?$CJ?$CG?$CG?$CITcnt?$DO?$DN2?$CJ?$AA@ ; `string'
PUBLIC	??_C@_07JLJFPMN@?9mt_cdb?$AA@			; `string'
PUBLIC	??_C@_0BB@KNMADMJC@CDB?9construction?$AA@	; `string'
PUBLIC	??_C@_0CB@NBDEDBNA@?$CB?5xrCDB?3?5model?5still?5isn?8t?5ready@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	__imp_??0xrCriticalSection@@QEAA@XZ:PROC
EXTRN	__imp_??1xrCriticalSection@@QEAA@XZ:PROC
EXTRN	__imp_?m64r@FPU@@YAXXZ:PROC
EXTRN	__imp_?Enter@xrCriticalSection@@QEAAXXZ:PROC
EXTRN	__imp_?Leave@xrCriticalSection@@QEAAXXZ:PROC
EXTRN	__imp_strstr:PROC
EXTRN	__imp_Sleep:PROC
EXTRN	__imp_?fail@xrDebug@@QEAAXPEBD0H0AEA_N@Z:PROC
EXTRN	__imp_?Debug@@3VxrDebug@@A:BYTE
EXTRN	__imp_?_initialize_cpu_thread@@YAXXZ:PROC
EXTRN	__imp_?thread_spawn@@YAXP6AXPEAX@ZPEBDI0@Z:PROC
EXTRN	__imp_?Core@@3VxrCore@@A:BYTE
EXTRN	__imp_?Msg@@YAXPEBDZZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QEAAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPEBD@Z:PROC
;	COMDAT ?ignore_always@?3??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA DB 01H DUP (?) ; `CDB::MODEL::build'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA DB 01H DUP (?) ; `CDB::MODEL::build'::`8'::ignore_always
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NBDEDBNA@?$CB?5xrCDB?3?5model?5still?5isn?8t?5ready@
CONST	SEGMENT
??_C@_0CB@NBDEDBNA@?$CB?5xrCDB?3?5model?5still?5isn?8t?5ready@ DB '! xrCD'
	DB	'B: model still isn''t ready', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KNMADMJC@CDB?9construction?$AA@
CONST	SEGMENT
??_C@_0BB@KNMADMJC@CDB?9construction?$AA@ DB 'CDB-construction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JLJFPMN@?9mt_cdb?$AA@
CONST	SEGMENT
??_C@_07JLJFPMN@?9mt_cdb?$AA@ DB '-mt_cdb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JLEIHKIA@?$CIVcnt?$DO?$DN4?$CJ?$CG?$CG?$CITcnt?$DO?$DN2?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@JLEIHKIA@?$CIVcnt?$DO?$DN4?$CJ?$CG?$CG?$CITcnt?$DO?$DN2?$CJ?$AA@ DB '('
	DB	'Vcnt>=4)&&(Tcnt>=2)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMGNJNBH@S_INIT?5?$DN?$DN?5status?$AA@
CONST	SEGMENT
??_C@_0BB@DMGNJNBH@S_INIT?5?$DN?$DN?5status?$AA@ DB 'S_INIT == status', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FONEFOJL@xrCDB?4cpp?$AA@
CONST	SEGMENT
??_C@_09FONEFOJL@xrCDB?4cpp?$AA@ DB 'xrCDB.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GJKGJBBN@CDB?3?3MODEL?3?3build?$AA@
CONST	SEGMENT
??_C@_0BC@GJKGJBBN@CDB?3?3MODEL?3?3build?$AA@ DB 'CDB::MODEL::build', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CPNHACKD@?$CB?5WARNING?3?5syncronized?5CDB?3?3quer@
CONST	SEGMENT
??_C@_0CC@CPNHACKD@?$CB?5WARNING?3?5syncronized?5CDB?3?3quer@ DB '! WARNI'
	DB	'NG: syncronized CDB::query', 00H		; `string'
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_free@I@@YAXAEAPEAI@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@I@@YAXAEAPEAI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@I@@YAXAEAPEAI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@I@@YAXAEAPEAI@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@I@@YAXAEAPEAI@Z PROC				; xr_free<unsigned int>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@8
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@8:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@I@@YAXAEAPEAI@Z ENDP				; xr_free<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAI0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAI0@Z PROC ; std::_Ptr_cat<unsigned int,unsigned int>, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAI0@Z ENDP ; std::_Ptr_cat<unsigned int,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<unsigned int> >, COMDAT

; 105  : 	}

	ret	0
??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@IV?$xalloc@I@@@std@@QEAA@XZ
_TEXT	SEGMENT
??1?$_Vector_val@IV?$xalloc@I@@@std@@QEAA@XZ PROC	; std::_Vector_val<unsigned int,xalloc<unsigned int> >::~_Vector_val<unsigned int,xalloc<unsigned int> >, COMDAT

; 434  : 		}

	ret	0
??1?$_Vector_val@IV?$xalloc@I@@@std@@QEAA@XZ ENDP	; std::_Vector_val<unsigned int,xalloc<unsigned int> >::~_Vector_val<unsigned int,xalloc<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
_TEXT	ENDS
;	COMDAT ?strstr@@YAPEADPEADPEBD@Z
_TEXT	SEGMENT
_Str$ = 8
?strstr@@YAPEADPEADPEBD@Z PROC				; strstr, COMDAT

; 221  : 	{ return (char*)strstr((const char*)_Str, _SubStr); }

	lea	rdx, OFFSET FLAT:??_C@_07JLJFPMN@?9mt_cdb?$AA@
	rex_jmp	QWORD PTR __imp_strstr
?strstr@@YAPEADPEADPEBD@Z ENDP				; strstr
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_model.h
_TEXT	ENDS
;	COMDAT ?GetUsedBytes@OPCODE_Model@Opcode@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?GetUsedBytes@OPCODE_Model@Opcode@@QEBAIXZ PROC		; Opcode::OPCODE_Model::GetUsedBytes, COMDAT

; 115  : 						udword				GetUsedBytes()	const	{ return mTree->GetUsedBytes();	}

	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+8]
?GetUsedBytes@OPCODE_Model@Opcode@@QEBAIXZ ENDP		; Opcode::OPCODE_Model::GetUsedBytes
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 49   : 		}

	ret	0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
_TEXT	ENDS
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Where$ = 8
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 57   : 	return (_Where);

	mov	rax, rcx

; 58   : 	}

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AEAVTRI@CDB@@@std@@YAAEAVTRI@CDB@@AEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAVTRI@CDB@@@std@@YAAEAVTRI@CDB@@AEAV12@@Z PROC ; std::forward<CDB::TRI & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAVTRI@CDB@@@std@@YAAEAVTRI@CDB@@AEAV12@@Z ENDP ; std::forward<CDB::TRI & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEBVTRI@CDB@@@std@@YAAEBVTRI@CDB@@AEBV12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBVTRI@CDB@@@std@@YAAEBVTRI@CDB@@AEBV12@@Z PROC ; std::forward<CDB::TRI const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBVTRI@CDB@@@std@@YAAEBVTRI@CDB@@AEBV12@@Z ENDP ; std::forward<CDB::TRI const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEAURESULT@CDB@@@std@@YAAEAURESULT@CDB@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAURESULT@CDB@@@std@@YAAEAURESULT@CDB@@AEAU12@@Z PROC ; std::forward<CDB::RESULT & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAURESULT@CDB@@@std@@YAAEAURESULT@CDB@@AEAU12@@Z ENDP ; std::forward<CDB::RESULT & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEAU?$_vector3@M@@@std@@YAAEAU?$_vector3@M@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_vector3@M@@@std@@YAAEAU?$_vector3@M@@AEAU1@@Z PROC ; std::forward<_vector3<float> & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAU?$_vector3@M@@@std@@YAAEAU?$_vector3@M@@AEAU1@@Z ENDP ; std::forward<_vector3<float> & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEBU?$_vector3@M@@@std@@YAAEBU?$_vector3@M@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBU?$_vector3@M@@@std@@YAAEBU?$_vector3@M@@AEBU1@@Z PROC ; std::forward<_vector3<float> const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBU?$_vector3@M@@@std@@YAAEBU?$_vector3@M@@AEBU1@@Z ENDP ; std::forward<_vector3<float> const & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@VTRI@CDB@@@std@@YAXPEAVTRI@CDB@@@Z
_TEXT	SEGMENT
??$_Destroy@VTRI@CDB@@@std@@YAXPEAVTRI@CDB@@@Z PROC	; std::_Destroy<CDB::TRI>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	ret	0
??$_Destroy@VTRI@CDB@@@std@@YAXPEAVTRI@CDB@@@Z ENDP	; std::_Destroy<CDB::TRI>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@URESULT@CDB@@@std@@YAXPEAURESULT@CDB@@@Z
_TEXT	SEGMENT
??$_Destroy@URESULT@CDB@@@std@@YAXPEAURESULT@CDB@@@Z PROC ; std::_Destroy<CDB::RESULT>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	ret	0
??$_Destroy@URESULT@CDB@@@std@@YAXPEAURESULT@CDB@@@Z ENDP ; std::_Destroy<CDB::RESULT>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@U?$_vector3@M@@@std@@YAXPEAU?$_vector3@M@@@Z
_TEXT	SEGMENT
??$_Destroy@U?$_vector3@M@@@std@@YAXPEAU?$_vector3@M@@@Z PROC ; std::_Destroy<_vector3<float> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	ret	0
??$_Destroy@U?$_vector3@M@@@std@@YAXPEAU?$_vector3@M@@@Z ENDP ; std::_Destroy<_vector3<float> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator++, COMDAT

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

	add	QWORD PTR [rcx], 24

; 111  : 		return (*this);

	mov	rax, rcx

; 112  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator++, COMDAT

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

	add	QWORD PTR [rcx], 12

; 111  : 		return (*this);

	mov	rax, rcx

; 112  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator++
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?destroy@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@@Z
_TEXT	SEGMENT
?destroy@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@@Z PROC	; xalloc<CDB::TRI>::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

	ret	0
?destroy@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@@Z ENDP	; xalloc<CDB::TRI>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator++, COMDAT

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

	add	QWORD PTR [rcx], 64			; 00000040H

; 111  : 		return (*this);

	mov	rax, rcx

; 112  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator++
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?destroy@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@@Z
_TEXT	SEGMENT
?destroy@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@@Z PROC ; xalloc<CDB::RESULT>::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

	ret	0
?destroy@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@@Z ENDP ; xalloc<CDB::RESULT>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@@Z
_TEXT	SEGMENT
?destroy@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@@Z PROC ; xalloc<_vector3<float> >::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

	ret	0
?destroy@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@@Z ENDP ; xalloc<_vector3<float> >::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AEBURESULT@CDB@@@std@@YAAEBURESULT@CDB@@AEBU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBURESULT@CDB@@@std@@YAAEBURESULT@CDB@@AEBU12@@Z PROC ; std::forward<CDB::RESULT const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBURESULT@CDB@@@std@@YAAEBURESULT@CDB@@AEBU12@@Z ENDP ; std::forward<CDB::RESULT const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$move@AEAVTRI@CDB@@@std@@YA$$QEAVTRI@CDB@@AEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAVTRI@CDB@@@std@@YA$$QEAVTRI@CDB@@AEAV12@@Z PROC ; std::move<CDB::TRI & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAVTRI@CDB@@@std@@YA$$QEAVTRI@CDB@@AEAV12@@Z ENDP ; std::move<CDB::TRI & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAURESULT@CDB@@@std@@YAPEAURESULT@CDB@@PEAU12@@Z
_TEXT	SEGMENT
??$_Val_type@PEAURESULT@CDB@@@std@@YAPEAURESULT@CDB@@PEAU12@@Z PROC ; std::_Val_type<CDB::RESULT * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAURESULT@CDB@@@std@@YAPEAURESULT@CDB@@PEAU12@@Z ENDP ; std::_Val_type<CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AEAU?$_vector3@M@@@std@@YA$$QEAU?$_vector3@M@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_vector3@M@@@std@@YA$$QEAU?$_vector3@M@@AEAU1@@Z PROC ; std::move<_vector3<float> & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAU?$_vector3@M@@@std@@YA$$QEAU?$_vector3@M@@AEAU1@@Z ENDP ; std::move<_vector3<float> & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@@Z
_TEXT	SEGMENT
??$_Dest_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@@Z PROC ; std::_Dest_val<xalloc<CDB::TRI>,CDB::TRI>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

	ret	0
??$_Dest_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@@Z ENDP ; std::_Dest_val<xalloc<CDB::TRI>,CDB::TRI>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@@Z
_TEXT	SEGMENT
??$_Dest_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@@Z PROC ; std::_Dest_val<xalloc<CDB::RESULT>,CDB::RESULT>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

	ret	0
??$_Dest_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@@Z ENDP ; std::_Dest_val<xalloc<CDB::RESULT>,CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AEAURESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAURESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z PROC ; std::move<CDB::RESULT & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAURESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z ENDP ; std::move<CDB::RESULT & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@@Z
_TEXT	SEGMENT
??$_Dest_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@@Z PROC ; std::_Dest_val<xalloc<_vector3<float> >,_vector3<float> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

	ret	0
??$_Dest_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@@Z ENDP ; std::_Dest_val<xalloc<_vector3<float> >,_vector3<float> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@AEAPEAVTRI@CDB@@@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@AEAPEAVTRI@CDB@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64>, COMDAT

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 488  : 	}

	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@AEAPEAVTRI@CDB@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@AEAPEAURESULT@CDB@@@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@AEAPEAURESULT@CDB@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64>, COMDAT

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 488  : 	}

	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@AEAPEAURESULT@CDB@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@AEAPEAU?$_vector3@M@@@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@AEAPEAU?$_vector3@M@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64>, COMDAT

; 486  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 487  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 488  : 	}

	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@AEAPEAU?$_vector3@M@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Construct@URESULT@CDB@@AEBU12@@std@@YAXPEAURESULT@CDB@@AEBU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@URESULT@CDB@@AEBU12@@std@@YAXPEAURESULT@CDB@@AEBU12@@Z PROC ; std::_Construct<CDB::RESULT,CDB::RESULT const & __ptr64>, COMDAT

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
$LN3@Construct:

; 49   : 	}

	fatret	0
??$_Construct@URESULT@CDB@@AEBU12@@std@@YAXPEAURESULT@CDB@@AEBU12@@Z ENDP ; std::_Construct<CDB::RESULT,CDB::RESULT const & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>, COMDAT

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN10@Move
	npad	11
$LL3@Move:

; 2514 : 		*_Dest = _STD move(*_First);

	mov	rax, QWORD PTR [rcx]
	add	rcx, 24
	add	r8, 24
	mov	QWORD PTR [r8-24], rax
	mov	rax, QWORD PTR [rcx-16]
	mov	QWORD PTR [r8-16], rax
	mov	rax, QWORD PTR [rcx-8]
	mov	QWORD PTR [r8-8], rax
	cmp	rcx, rdx
	jne	SHORT $LL3@Move
$LN10@Move:

; 2515 : 	return (_Dest);

	mov	rax, r8

; 2516 : 	}

	ret	0
??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>, COMDAT

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN10@Move@2
	npad	11
$LL3@Move@2:

; 2514 : 		*_Dest = _STD move(*_First);

	mov	rax, QWORD PTR [rcx]
	add	rcx, 12
	add	r8, 12
	mov	QWORD PTR [r8-12], rax
	mov	eax, DWORD PTR [rcx-4]
	mov	DWORD PTR [r8-4], eax
	cmp	rcx, rdx
	jne	SHORT $LL3@Move@2
$LN10@Move@2:

; 2515 : 	return (_Dest);

	mov	rax, r8

; 2516 : 	}

	ret	0
??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<CDB::TRI> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<CDB::RESULT> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>, COMDAT

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN10@Move@3
	npad	11
$LL3@Move@3:

; 2514 : 		*_Dest = _STD move(*_First);

	mov	rax, QWORD PTR [rcx]
	add	rcx, 64					; 00000040H
	add	r8, 64					; 00000040H
	mov	QWORD PTR [r8-64], rax
	mov	rax, QWORD PTR [rcx-56]
	mov	QWORD PTR [r8-56], rax
	mov	rax, QWORD PTR [rcx-48]
	mov	QWORD PTR [r8-48], rax
	mov	rax, QWORD PTR [rcx-40]
	mov	QWORD PTR [r8-40], rax
	mov	rax, QWORD PTR [rcx-32]
	mov	QWORD PTR [r8-32], rax
	mov	rax, QWORD PTR [rcx-24]
	mov	QWORD PTR [r8-24], rax
	mov	rax, QWORD PTR [rcx-16]
	mov	QWORD PTR [r8-16], rax
	mov	rax, QWORD PTR [rcx-8]
	mov	QWORD PTR [r8-8], rax
	cmp	rcx, rdx
	jne	SHORT $LL3@Move@3
$LN10@Move@3:

; 2515 : 	return (_Dest);

	mov	rax, r8

; 2516 : 	}

	ret	0
??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<_vector3<float> > >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>, COMDAT

; 2143 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN8@Copy_impl
	npad	11
$LL3@Copy_impl:

; 2144 : 		*_Dest = *_First;

	mov	rax, QWORD PTR [rcx]
	add	rcx, 24
	add	r8, 24
	mov	QWORD PTR [r8-24], rax
	mov	rax, QWORD PTR [rcx-16]
	mov	QWORD PTR [r8-16], rax
	mov	rax, QWORD PTR [rcx-8]
	mov	QWORD PTR [r8-8], rax
	cmp	rcx, rdx
	jne	SHORT $LL3@Copy_impl
$LN8@Copy_impl:

; 2145 : 	return (_Dest);

	mov	rax, r8

; 2146 : 	}

	ret	0
??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VTRI@CDB@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVTRI@CDB@@0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@VTRI@CDB@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVTRI@CDB@@0@Z PROC ; std::_Ptr_cat<CDB::TRI,CDB::TRI>, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@VTRI@CDB@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVTRI@CDB@@0@Z ENDP ; std::_Ptr_cat<CDB::TRI,CDB::TRI>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>, COMDAT

; 2143 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN8@Copy_impl@2
	npad	11
$LL3@Copy_impl@2:

; 2144 : 		*_Dest = *_First;

	mov	rax, QWORD PTR [rcx]
	add	rcx, 64					; 00000040H
	add	r8, 64					; 00000040H
	mov	QWORD PTR [r8-64], rax
	mov	rax, QWORD PTR [rcx-56]
	mov	QWORD PTR [r8-56], rax
	mov	rax, QWORD PTR [rcx-48]
	mov	QWORD PTR [r8-48], rax
	mov	rax, QWORD PTR [rcx-40]
	mov	QWORD PTR [r8-40], rax
	mov	rax, QWORD PTR [rcx-32]
	mov	QWORD PTR [r8-32], rax
	mov	rax, QWORD PTR [rcx-24]
	mov	QWORD PTR [r8-24], rax
	mov	rax, QWORD PTR [rcx-16]
	mov	QWORD PTR [r8-16], rax
	mov	rax, QWORD PTR [rcx-8]
	mov	QWORD PTR [r8-8], rax
	cmp	rcx, rdx
	jne	SHORT $LL3@Copy_impl@2
$LN8@Copy_impl@2:

; 2145 : 	return (_Dest);

	mov	rax, r8

; 2146 : 	}

	ret	0
??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@URESULT@CDB@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAURESULT@CDB@@0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@URESULT@CDB@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAURESULT@CDB@@0@Z PROC ; std::_Ptr_cat<CDB::RESULT,CDB::RESULT>, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@URESULT@CDB@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAURESULT@CDB@@0@Z ENDP ; std::_Ptr_cat<CDB::RESULT,CDB::RESULT>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>, COMDAT

; 2143 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN8@Copy_impl@3
	npad	11
$LL3@Copy_impl@3:

; 2144 : 		*_Dest = *_First;

	mov	rax, QWORD PTR [rcx]
	add	rcx, 12
	add	r8, 12
	mov	QWORD PTR [r8-12], rax
	mov	eax, DWORD PTR [rcx-4]
	mov	DWORD PTR [r8-4], eax
	cmp	rcx, rdx
	jne	SHORT $LL3@Copy_impl@3
$LN8@Copy_impl@3:

; 2145 : 	return (_Dest);

	mov	rax, r8

; 2146 : 	}

	ret	0
??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@U?$_vector3@M@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAU?$_vector3@M@@0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@U?$_vector3@M@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAU?$_vector3@M@@0@Z PROC ; std::_Ptr_cat<_vector3<float>,_vector3<float> >, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@U?$_vector3@M@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAU?$_vector3@M@@0@Z ENDP ; std::_Ptr_cat<_vector3<float>,_vector3<float> >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?construct@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@AEBU23@@Z
_TEXT	SEGMENT
p$ = 8
_Val$ = 16
?construct@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@AEBU23@@Z PROC ; xalloc<CDB::RESULT>::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

	test	rcx, rcx
	je	SHORT $LN5@construct
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
$LN5@construct:
	fatret	0
?construct@?$xalloc@URESULT@CDB@@@@QEAAXPEAURESULT@CDB@@AEBU23@@Z ENDP ; xalloc<CDB::RESULT>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z PROC ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	mov	rax, r8
	mov	r9, rcx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN14@Move@4
	npad	5
$LL7@Move@4:
	mov	r8, QWORD PTR [r9]
	add	r9, 24
	add	rax, 24
	mov	QWORD PTR [rax-24], r8
	mov	r8, QWORD PTR [r9-16]
	mov	QWORD PTR [rax-16], r8
	mov	rcx, QWORD PTR [r9-8]
	mov	QWORD PTR [rax-8], rcx
	cmp	r9, rdx
	jne	SHORT $LL7@Move@4
$LN14@Move@4:

; 2536 : 	}

	fatret	0
??$_Move@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z ENDP ; std::_Move<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@URESULT@CDB@@@@YAPEAURESULT@CDB@@I@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@URESULT@CDB@@@@YAPEAURESULT@CDB@@I@Z PROC	; xr_alloc<CDB::RESULT>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	edx, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	rdx, 6
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
??$xr_alloc@URESULT@CDB@@@@YAPEAURESULT@CDB@@I@Z ENDP	; xr_alloc<CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z PROC ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	mov	rax, r8

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN14@Move@5
	npad	8
$LL7@Move@5:
	mov	r8, QWORD PTR [rcx]
	add	rcx, 12
	add	rax, 12
	mov	QWORD PTR [rax-12], r8
	mov	r8d, DWORD PTR [rcx-4]
	mov	DWORD PTR [rax-4], r8d
	cmp	rcx, rdx
	jne	SHORT $LL7@Move@5
$LN14@Move@5:

; 2536 : 	}

	fatret	0
??$_Move@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z ENDP ; std::_Move<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@@Z PROC ; std::_Destroy_range<xalloc<CDB::TRI> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@VTRI@CDB@@@@@std@@YAXPEAVTRI@CDB@@0AEAV?$xalloc@VTRI@CDB@@@@@Z ENDP ; std::_Destroy_range<xalloc<CDB::TRI> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z PROC	; xr_free<CDB::RESULT>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@9
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@9:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@URESULT@CDB@@@@YAXAEAPEAURESULT@CDB@@@Z ENDP	; xr_free<CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@@Z PROC ; std::_Destroy_range<xalloc<CDB::RESULT> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@URESULT@CDB@@@@@std@@YAXPEAURESULT@CDB@@0AEAV?$xalloc@URESULT@CDB@@@@@Z ENDP ; std::_Destroy_range<xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z PROC ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	mov	r9, rcx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN14@Move@6
	npad	8
$LL7@Move@6:
	mov	rax, QWORD PTR [r9]
	add	r9, 64					; 00000040H
	add	r8, 64					; 00000040H
	mov	QWORD PTR [r8-64], rax
	mov	rax, QWORD PTR [r9-56]
	mov	QWORD PTR [r8-56], rax
	mov	rax, QWORD PTR [r9-48]
	mov	QWORD PTR [r8-48], rax
	mov	rax, QWORD PTR [r9-40]
	mov	QWORD PTR [r8-40], rax
	mov	rcx, QWORD PTR [r9-32]
	mov	QWORD PTR [r8-32], rcx
	mov	rcx, QWORD PTR [r9-24]
	mov	QWORD PTR [r8-24], rcx
	mov	rcx, QWORD PTR [r9-16]
	mov	QWORD PTR [r8-16], rcx
	mov	rcx, QWORD PTR [r9-8]
	mov	QWORD PTR [r8-8], rcx
	cmp	r9, rdx
	jne	SHORT $LL7@Move@6
$LN14@Move@6:
	mov	rax, r8

; 2536 : 	}

	ret	0
??$_Move@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ENDP ; std::_Move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@@Z PROC ; std::_Destroy_range<xalloc<_vector3<float> > >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@U?$_vector3@M@@@@@std@@YAXPEAU?$_vector3@M@@0AEAV?$xalloc@U?$_vector3@M@@@@@Z ENDP ; std::_Destroy_range<xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z PROC ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

	mov	rax, r8
	mov	r9, rcx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN12@Copy_impl@4
	npad	5
$LL7@Copy_impl@4:
	mov	r8, QWORD PTR [r9]
	add	r9, 24
	add	rax, 24
	mov	QWORD PTR [rax-24], r8
	mov	r8, QWORD PTR [r9-16]
	mov	QWORD PTR [rax-16], r8
	mov	rcx, QWORD PTR [r9-8]
	mov	QWORD PTR [rax-8], rcx
	cmp	r9, rdx
	jne	SHORT $LL7@Copy_impl@4
$LN12@Copy_impl@4:

; 2166 : 	}

	fatret	0
??$_Copy_impl@PEAVTRI@CDB@@PEAV12@@std@@YAPEAVTRI@CDB@@PEAV12@00@Z ENDP ; std::_Copy_impl<CDB::TRI * __ptr64,CDB::TRI * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z PROC ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

	mov	r9, rcx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN12@Copy_impl@5
	npad	8
$LL7@Copy_impl@5:
	mov	rax, QWORD PTR [r9]
	add	r9, 64					; 00000040H
	add	r8, 64					; 00000040H
	mov	QWORD PTR [r8-64], rax
	mov	rax, QWORD PTR [r9-56]
	mov	QWORD PTR [r8-56], rax
	mov	rax, QWORD PTR [r9-48]
	mov	QWORD PTR [r8-48], rax
	mov	rax, QWORD PTR [r9-40]
	mov	QWORD PTR [r8-40], rax
	mov	rcx, QWORD PTR [r9-32]
	mov	QWORD PTR [r8-32], rcx
	mov	rcx, QWORD PTR [r9-24]
	mov	QWORD PTR [r8-24], rcx
	mov	rcx, QWORD PTR [r9-16]
	mov	QWORD PTR [r8-16], rcx
	mov	rcx, QWORD PTR [r9-8]
	mov	QWORD PTR [r8-8], rcx
	cmp	r9, rdx
	jne	SHORT $LL7@Copy_impl@5
$LN12@Copy_impl@5:
	mov	rax, r8

; 2166 : 	}

	ret	0
??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ENDP ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@URESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@URESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z PROC ; std::forward<CDB::RESULT>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@URESULT@CDB@@@std@@YA$$QEAURESULT@CDB@@AEAU12@@Z ENDP ; std::forward<CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@URESULT@CDB@@@std@@YAPEAURESULT@CDB@@AEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@URESULT@CDB@@@std@@YAPEAURESULT@CDB@@AEAU12@@Z PROC ; std::addressof<CDB::RESULT>, COMDAT

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	rax, rcx

; 112  : 	}

	ret	0
??$addressof@URESULT@CDB@@@std@@YAPEAURESULT@CDB@@AEAU12@@Z ENDP ; std::addressof<CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z PROC ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

	mov	rax, r8

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN12@Copy_impl@6
	npad	8
$LL7@Copy_impl@6:
	mov	r8, QWORD PTR [rcx]
	add	rcx, 12
	add	rax, 12
	mov	QWORD PTR [rax-12], r8
	mov	r8d, DWORD PTR [rcx-4]
	mov	DWORD PTR [rax-4], r8d
	cmp	rcx, rdx
	jne	SHORT $LL7@Copy_impl@6
$LN12@Copy_impl@6:

; 2166 : 	}

	fatret	0
??$_Copy_impl@PEAU?$_vector3@M@@PEAU1@@std@@YAPEAU?$_vector3@M@@PEAU1@00@Z ENDP ; std::_Copy_impl<_vector3<float> * __ptr64,_vector3<float> * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\opc_model.cpp
pdata	SEGMENT
$pdata$??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ DD imagerel $LN9
	DD	imagerel $LN9+58
	DD	imagerel $unwind$??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ
_TEXT	SEGMENT
??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ PROC ; xr_new<Opcode::OPCODE_Model>, COMDAT

; 67   : {

$LN9:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, 24
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR [rax+8], 0
	mov	WORD PTR [rax+16], 0

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@VOPCODE_Model@Opcode@@@@YAPEAVOPCODE_Model@Opcode@@XZ ENDP ; xr_new<Opcode::OPCODE_Model>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@I@@YAPEAII@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@I@@YAPEAII@Z PROC				; xr_alloc<unsigned int>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	edx, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	rdx, 2
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
??$xr_alloc@I@@YAPEAII@Z ENDP				; xr_alloc<unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@VTRI@CDB@@@@YAPEAVTRI@CDB@@I@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@VTRI@CDB@@@@YAPEAVTRI@CDB@@I@Z PROC		; xr_alloc<CDB::TRI>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 3
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
??$xr_alloc@VTRI@CDB@@@@YAPEAVTRI@CDB@@I@Z ENDP		; xr_alloc<CDB::TRI>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@U?$_vector3@M@@@@YAPEAU?$_vector3@M@@I@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@U?$_vector3@M@@@@YAPEAU?$_vector3@M@@I@Z PROC ; xr_alloc<_vector3<float> >, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 2
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
??$xr_alloc@U?$_vector3@M@@@@YAPEAU?$_vector3@M@@I@Z ENDP ; xr_alloc<_vector3<float> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z PROC ; xr_free<_vector3<float> >, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@10
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@10:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@U?$_vector3@M@@@@YAXAEAPEAU?$_vector3@M@@@Z ENDP ; xr_free<_vector3<float> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z PROC	; xr_free<CDB::TRI>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@xr_free@11
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx], 0
$LN1@xr_free@11:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_free@VTRI@CDB@@@@YAXAEAPEAVTRI@CDB@@@Z ENDP	; xr_free<CDB::TRI>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Compat, COMDAT

; 253  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Compat
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Compat, COMDAT

; 253  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Compat
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator==, COMDAT

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 204  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator==, COMDAT

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 204  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Compat, COMDAT

; 253  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Compat
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Y?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	add	QWORD PTR [rcx], -64			; ffffffffffffffc0H

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator!=, COMDAT

; 208  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 209  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator!=, COMDAT

; 208  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 209  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator!=
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@VTRI@CDB@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@VTRI@CDB@@@@QEBA_KXZ PROC		; xalloc<CDB::TRI>::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH
	ret	0
?max_size@?$xalloc@VTRI@CDB@@@@QEBA_KXZ ENDP		; xalloc<CDB::TRI>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator==, COMDAT

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 204  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Y?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=, COMDAT

; 358  : 		*(_Mybase *)this += _Off;

	add	QWORD PTR [rcx], -64			; ffffffffffffffc0H

; 359  : 		return (*this);

	mov	rax, rcx

; 360  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator+=
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@URESULT@CDB@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@URESULT@CDB@@@@QEBA_KXZ PROC		; xalloc<CDB::RESULT>::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 288230376151711743			; 03ffffffffffffffH
	ret	0
?max_size@?$xalloc@URESULT@CDB@@@@QEBA_KXZ ENDP		; xalloc<CDB::RESULT>::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@U?$_vector3@M@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@U?$_vector3@M@@@@QEBA_KXZ PROC	; xalloc<_vector3<float> >::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 1537228672809129301		; 1555555555555555H
	ret	0
?max_size@?$xalloc@U?$_vector3@M@@@@QEBA_KXZ ENDP	; xalloc<_vector3<float> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@VTRI@CDB@@@@QEBAPEAVTRI@CDB@@_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@VTRI@CDB@@@@QEBAPEAVTRI@CDB@@_KPEBX@Z PROC ; xalloc<CDB::TRI>::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	eax, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 3
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
?allocate@?$xalloc@VTRI@CDB@@@@QEBAPEAVTRI@CDB@@_KPEBX@Z ENDP ; xalloc<CDB::TRI>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@VTRI@CDB@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@VTRI@CDB@@@@QEAA@XZ PROC			; xalloc<CDB::TRI>::xalloc<CDB::TRI>, COMDAT

; 76   : 													xalloc			()										{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@VTRI@CDB@@@@QEAA@XZ ENDP			; xalloc<CDB::TRI>::xalloc<CDB::TRI>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@3:
?_Xlen@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEBAXXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH

; 885  : 		}

	ret	0
?max_size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator!=, COMDAT

; 208  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 209  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Z?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-=, COMDAT

; 370  : 		return (*this += -_Off);

	add	QWORD PTR [rcx], -64			; ffffffffffffffc0H
	mov	rax, rcx

; 371  : 		}

	ret	0
??Z?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-=
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@URESULT@CDB@@@@QEBAPEAURESULT@CDB@@_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@URESULT@CDB@@@@QEBAPEAURESULT@CDB@@_KPEBX@Z PROC ; xalloc<CDB::RESULT>::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	edx, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	rdx, 6
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
?allocate@?$xalloc@URESULT@CDB@@@@QEBAPEAURESULT@CDB@@_KPEBX@Z ENDP ; xalloc<CDB::RESULT>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@URESULT@CDB@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@URESULT@CDB@@@@QEAA@XZ PROC			; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>, COMDAT

; 76   : 													xalloc			()										{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@URESULT@CDB@@@@QEAA@XZ ENDP			; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@4:
?_Xlen@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 288230376151711743			; 03ffffffffffffffH

; 885  : 		}

	ret	0
?max_size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::max_size
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@U?$_vector3@M@@@@QEBAPEAU?$_vector3@M@@_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@U?$_vector3@M@@@@QEBAPEAU?$_vector3@M@@_KPEBX@Z PROC ; xalloc<_vector3<float> >::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	eax, ecx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 2
	rex_jmp	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
?allocate@?$xalloc@U?$_vector3@M@@@@QEBAPEAU?$_vector3@M@@_KPEBX@Z ENDP ; xalloc<_vector3<float> >::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@U?$_vector3@M@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@U?$_vector3@M@@@@QEAA@XZ PROC		; xalloc<_vector3<float> >::xalloc<_vector3<float> >, COMDAT

; 76   : 													xalloc			()										{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@U?$_vector3@M@@@@QEAA@XZ ENDP		; xalloc<_vector3<float> >::xalloc<_vector3<float> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@5:
?_Xlen@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEBAXXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 1537228672809129301		; 1555555555555555H

; 885  : 		}

	ret	0
?max_size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEBVTRI@CDB@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEBVTRI@CDB@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEBVTRI@CDB@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEAA@PEAVTRI@CDB@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEBU?$_vector3@M@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEBU?$_vector3@M@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEBU?$_vector3@M@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEAA@PEAU?$_vector3@M@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z PROC ; xalloc<CDB::TRI>::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN6:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN3@deallocate
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN3@deallocate:
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@VTRI@CDB@@@@QEBAXPEAVTRI@CDB@@_K@Z ENDP ; xalloc<CDB::TRI>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@VTRI@CDB@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@VTRI@CDB@@@@QEAA@AEBV0@@Z PROC		; xalloc<CDB::TRI>::xalloc<CDB::TRI>, COMDAT

; 77   : 													xalloc			(const xalloc<T>&)						{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@VTRI@CDB@@@@QEAA@AEBV0@@Z ENDP		; xalloc<CDB::TRI>::xalloc<CDB::TRI>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
??1?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ PROC ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::~_Vector_val<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 434  : 		}

	ret	0
??1?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ENDP ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::~_Vector_val<CDB::TRI,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@V?$xalloc@VTRI@CDB@@@@@Z
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@V?$xalloc@VTRI@CDB@@@@@Z PROC ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 427  : 		_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 428  : 		_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 429  : 		_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 430  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@V?$xalloc@VTRI@CDB@@@@@Z ENDP ; std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >::_Vector_val<CDB::TRI,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXPEAVTRI@CDB@@0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXPEAVTRI@CDB@@0@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Destroy, COMDAT

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

	ret	0
?_Destroy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXPEAVTRI@CDB@@0@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z DD imagerel $LN19
	DD	imagerel $LN19+118
	DD	imagerel $unwind$?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Capacity$ = 56
?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Buy, COMDAT

; 1250 : 		{	// allocate array with _Capacity elements

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1251 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	rdi, rdx
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 1252 : 		this->_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 1253 : 		this->_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 1254 : 
; 1255 : 		if (_Capacity == 0)

	test	rdx, rdx

; 1256 : 			return (false);

	je	SHORT $LN5@Buy

; 1257 : 		else if (max_size() < _Capacity)

	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH
	cmp	rdx, rax
	jbe	SHORT $LN2@Buy

; 1258 : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@Buy:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	eax, edx
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 3
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

	lea	rcx, QWORD PTR [rdi+rdi*2]
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rbx+16], rax

; 1264 : 			}
; 1265 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1266 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN18@Buy:
?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Buy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 880  : 		}

	ret	0
?size@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end, COMDAT

; 797  : 		return (const_iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 798  : 		}

	ret	0
?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin, COMDAT

; 787  : 		return (const_iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 788  : 		}

	ret	0
?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 778  : 		}

	ret	0
?capacity@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::capacity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 507  : 		{	// construct empty vector

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 508  : 		}

	mov	rax, rcx
	ret	0
??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEBURESULT@CDB@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEBURESULT@CDB@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEBURESULT@CDB@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??G?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-, COMDAT

; 375  : 		_Myiter _Tmp = *this;
; 376  : 		return (_Tmp -= _Off);

	mov	rax, QWORD PTR [rcx]
	sub	rax, 64					; 00000040H
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 377  : 		}

	ret	0
??G?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEAA@PEAURESULT@CDB@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z PROC ; xalloc<CDB::RESULT>::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN6:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN3@deallocate@2
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN3@deallocate@2:
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@URESULT@CDB@@@@QEBAXPEAURESULT@CDB@@_K@Z ENDP ; xalloc<CDB::RESULT>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@URESULT@CDB@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@URESULT@CDB@@@@QEAA@AEBV0@@Z PROC		; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>, COMDAT

; 77   : 													xalloc			(const xalloc<T>&)						{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@URESULT@CDB@@@@QEAA@AEBV0@@Z ENDP		; xalloc<CDB::RESULT>::xalloc<CDB::RESULT>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
??1?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ PROC ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::~_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 434  : 		}

	ret	0
??1?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ENDP ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::~_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@V?$xalloc@URESULT@CDB@@@@@Z
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@V?$xalloc@URESULT@CDB@@@@@Z PROC ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 427  : 		_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 428  : 		_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 429  : 		_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 430  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@V?$xalloc@URESULT@CDB@@@@@Z ENDP ; std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXPEAURESULT@CDB@@0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXPEAURESULT@CDB@@0@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBAXPEAURESULT@CDB@@0@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Orphan_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_NPEBURESULT@CDB@@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_NPEBURESULT@CDB@@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Inside, COMDAT

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	cmp	rdx, QWORD PTR [rcx+8]
	jae	SHORT $LN3@Inside@5
	cmp	QWORD PTR [rcx], rdx
	ja	SHORT $LN3@Inside@5
	mov	al, 1

; 1287 : 		}

	ret	0
$LN3@Inside@5:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	xor	al, al

; 1287 : 		}

	ret	0
?_Inside@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_NPEBURESULT@CDB@@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Inside
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXPEAURESULT@CDB@@0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXPEAURESULT@CDB@@0@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Destroy, COMDAT

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

	ret	0
?_Destroy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXPEAURESULT@CDB@@0@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z DD imagerel $LN19
	DD	imagerel $LN19+113
	DD	imagerel $unwind$?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Capacity$ = 56
?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Buy, COMDAT

; 1250 : 		{	// allocate array with _Capacity elements

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1251 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax

; 1252 : 		this->_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 1253 : 		this->_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 1254 : 
; 1255 : 		if (_Capacity == 0)

	test	rdx, rdx

; 1256 : 			return (false);

	je	SHORT $LN5@Buy@2

; 1257 : 		else if (max_size() < _Capacity)

	mov	rax, 288230376151711743			; 03ffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN2@Buy@2

; 1258 : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@Buy@2:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, edx
	shl	rdx, 6
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

	shl	rbx, 6
	add	rbx, rax
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+16], rbx

; 1264 : 			}
; 1265 : 		return (true);

	mov	al, 1
$LN5@Buy@2:

; 1266 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN18@Buy@2:
?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Buy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 6

; 880  : 		}

	ret	0
?size@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end, COMDAT

; 797  : 		return (const_iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 798  : 		}

	ret	0
?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin, COMDAT

; 787  : 		return (const_iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 788  : 		}

	ret	0
?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 6

; 778  : 		}

	ret	0
?capacity@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA_KXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::capacity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 507  : 		{	// construct empty vector

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 508  : 		}

	mov	rax, rcx
	ret	0
??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z PROC ; xalloc<_vector3<float> >::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN6:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN3@deallocate@3
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN3@deallocate@3:
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@U?$_vector3@M@@@@QEBAXPEAU?$_vector3@M@@_K@Z ENDP ; xalloc<_vector3<float> >::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@U?$_vector3@M@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
??0?$xalloc@U?$_vector3@M@@@@QEAA@AEBV0@@Z PROC		; xalloc<_vector3<float> >::xalloc<_vector3<float> >, COMDAT

; 77   : 													xalloc			(const xalloc<T>&)						{	}

	mov	rax, rcx
	ret	0
??0?$xalloc@U?$_vector3@M@@@@QEAA@AEBV0@@Z ENDP		; xalloc<_vector3<float> >::xalloc<_vector3<float> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
??1?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ PROC ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::~_Vector_val<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 434  : 		}

	ret	0
??1?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ENDP ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::~_Vector_val<_vector3<float>,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@V?$xalloc@U?$_vector3@M@@@@@Z
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@V?$xalloc@U?$_vector3@M@@@@@Z PROC ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 427  : 		_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 428  : 		_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 429  : 		_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 430  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@V?$xalloc@U?$_vector3@M@@@@@Z ENDP ; std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >::_Vector_val<_vector3<float>,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXPEAU?$_vector3@M@@0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXPEAU?$_vector3@M@@0@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Destroy, COMDAT

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

	ret	0
?_Destroy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXPEAU?$_vector3@M@@0@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z DD imagerel $LN19
	DD	imagerel $LN19+118
	DD	imagerel $unwind$?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Capacity$ = 56
?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Buy, COMDAT

; 1250 : 		{	// allocate array with _Capacity elements

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1251 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	rdi, rdx
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 1252 : 		this->_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 1253 : 		this->_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 1254 : 
; 1255 : 		if (_Capacity == 0)

	test	rdx, rdx

; 1256 : 			return (false);

	je	SHORT $LN5@Buy@3

; 1257 : 		else if (max_size() < _Capacity)

	mov	rax, 1537228672809129301		; 1555555555555555H
	cmp	rdx, rax
	jbe	SHORT $LN2@Buy@3

; 1258 : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@Buy@3:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	eax, edx
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 2
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

	lea	rcx, QWORD PTR [rdi+rdi*2]
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR [rbx+16], rax

; 1264 : 			}
; 1265 : 		return (true);

	mov	al, 1
$LN5@Buy@3:

; 1266 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN18@Buy@3:
?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Buy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 880  : 		}

	ret	0
?size@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end, COMDAT

; 797  : 		return (const_iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 798  : 		}

	ret	0
?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin, COMDAT

; 787  : 		return (const_iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 788  : 		}

	ret	0
?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 778  : 		}

	ret	0
?capacity@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA_KXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::capacity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 507  : 		{	// construct empty vector

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 508  : 		}

	mov	rax, rcx
	ret	0
??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEAVTRI@CDB@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEAVTRI@CDB@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@QEBAAEAVTRI@CDB@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEAU?$_vector3@M@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEAU?$_vector3@M@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@QEBAAEAU?$_vector3@M@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::begin
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEBAIXZ PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	ret	0
?size@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEBAIXZ ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEAURESULT@CDB@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEAURESULT@CDB@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@QEBAAEAURESULT@CDB@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end, COMDAT

; 792  : 		return (iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 793  : 		}

	ret	0
?end@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEBAIXZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 6
	ret	0
?size@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEBAIXZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::begin
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEBAIXZ PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	ret	0
?size@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEBAIXZ ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::size
_TEXT	ENDS
PUBLIC	?memory@MODEL@CDB@@QEAAIXZ			; CDB::MODEL::memory
pdata	SEGMENT
$pdata$?memory@MODEL@CDB@@QEAAIXZ DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$?memory@MODEL@CDB@@QEAAIXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?memory@MODEL@CDB@@QEAAIXZ DD 052b01H
	DD	04742bH
	DD	063426H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?memory@MODEL@CDB@@QEAAIXZ PROC				; CDB::MODEL::memory

; 152  : {

$LN6:
	sub	rsp, 40					; 00000028H

; 153  : 	if (S_BUILD==status)	{ Msg	("! xrCDB: model still isn't ready"); return 0; }

	cmp	DWORD PTR [rcx+16], 2
	jne	SHORT $LN1@memory
	lea	rcx, OFFSET FLAT:??_C@_0CB@NBDEDBNA@?$CB?5xrCDB?3?5model?5still?5isn?8t?5ready@
	call	QWORD PTR __imp_?Msg@@YAXPEBDZZ
	xor	eax, eax

; 157  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN1@memory:

; 154  : 	u32 V					= verts_count*sizeof(Fvector);

	mov	eax, DWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+32], rdi
	lea	edi, DWORD PTR [rax+rax*2]

; 155  : 	u32 T					= tris_count *sizeof(TRI);

	mov	eax, DWORD PTR [rcx+32]
	lea	ebx, DWORD PTR [rax+rax*2]

; 156  : 	return tree->GetUsedBytes()+V+T+sizeof(*this)+sizeof(*tree);

	mov	rax, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rax+8]
	shl	ebx, 3
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	add	eax, ebx
	mov	rbx, QWORD PTR [rsp+48]
	lea	eax, DWORD PTR [rax+rdi*4+80]
	mov	rdi, QWORD PTR [rsp+32]

; 157  : }

	add	rsp, 40					; 00000028H
	ret	0
?memory@MODEL@CDB@@QEAAIXZ ENDP				; CDB::MODEL::memory
_TEXT	ENDS
PUBLIC	??0MODEL@CDB@@QEAA@XZ				; CDB::MODEL::MODEL
pdata	SEGMENT
$pdata$??0MODEL@CDB@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0MODEL@CDB@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??0MODEL@CDB@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??0MODEL@CDB@@QEAA@XZ PROC				; CDB::MODEL::MODEL

; 33   : {

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	QWORD PTR __imp_??0xrCriticalSection@@QEAA@XZ

; 34   : 	tree		= 0;

	xor	r11d, r11d

; 35   : 	tris		= 0;
; 36   : 	tris_count	= 0;
; 37   : 	verts		= 0;
; 38   : 	verts_count	= 0;
; 39   : 	status		= S_INIT;

	mov	DWORD PTR [rbx+16], 1

; 40   : }

	mov	rax, rbx
	mov	QWORD PTR [rbx+8], r11
	mov	QWORD PTR [rbx+24], r11
	mov	DWORD PTR [rbx+32], r11d
	mov	QWORD PTR [rbx+40], r11
	mov	DWORD PTR [rbx+48], r11d
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0MODEL@CDB@@QEAA@XZ ENDP				; CDB::MODEL::MODEL
_TEXT	ENDS
PUBLIC	DllMain
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
hModule$ = 8
ul_reason_for_call$ = 16
lpReserved$ = 24
DllMain	PROC

; 17   :     switch (ul_reason_for_call)
; 18   : 	{
; 19   : 	case DLL_PROCESS_ATTACH:
; 20   : 	case DLL_THREAD_ATTACH:
; 21   : 	case DLL_THREAD_DETACH:
; 22   : 	case DLL_PROCESS_DETACH:
; 23   : 		break;
; 24   :     }
; 25   :     return TRUE;

	mov	eax, 1

; 26   : }

	ret	0
DllMain	ENDP
_TEXT	ENDS
PUBLIC	?getTS@CollectorPacked@CDB@@QEAA_KXZ		; CDB::CollectorPacked::getTS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.h
;	COMDAT ?getTS@CollectorPacked@CDB@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 8
?getTS@CollectorPacked@CDB@@QEAA_KXZ PROC		; CDB::CollectorPacked::getTS, COMDAT

; 258  : 		size_t				getTS()		{ return faces.size();		}

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+40]
	sub	rcx, QWORD PTR [rax+32]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	imul	rcx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	mov	eax, eax
	ret	0
?getTS@CollectorPacked@CDB@@QEAA_KXZ ENDP		; CDB::CollectorPacked::getTS
_TEXT	ENDS
PUBLIC	?getT@CollectorPacked@CDB@@QEAAPEAVTRI@2@XZ	; CDB::CollectorPacked::getT
; Function compile flags: /Ogtpy
;	COMDAT ?getT@CollectorPacked@CDB@@QEAAPEAVTRI@2@XZ
_TEXT	SEGMENT
this$ = 8
?getT@CollectorPacked@CDB@@QEAAPEAVTRI@2@XZ PROC	; CDB::CollectorPacked::getT, COMDAT

; 257  : 		TRI*				getT()		{ return &*faces.begin();	}

	mov	rax, QWORD PTR [rcx+32]
	ret	0
?getT@CollectorPacked@CDB@@QEAAPEAVTRI@2@XZ ENDP	; CDB::CollectorPacked::getT
_TEXT	ENDS
PUBLIC	?getVS@CollectorPacked@CDB@@QEAA_KXZ		; CDB::CollectorPacked::getVS
; Function compile flags: /Ogtpy
;	COMDAT ?getVS@CollectorPacked@CDB@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 8
?getVS@CollectorPacked@CDB@@QEAA_KXZ PROC		; CDB::CollectorPacked::getVS, COMDAT

; 256  : 		size_t				getVS()		{ return verts.size();		}

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	mov	eax, eax
	ret	0
?getVS@CollectorPacked@CDB@@QEAA_KXZ ENDP		; CDB::CollectorPacked::getVS
_TEXT	ENDS
PUBLIC	?getV@CollectorPacked@CDB@@QEAAPEAU?$_vector3@M@@XZ ; CDB::CollectorPacked::getV
; Function compile flags: /Ogtpy
;	COMDAT ?getV@CollectorPacked@CDB@@QEAAPEAU?$_vector3@M@@XZ
_TEXT	SEGMENT
this$ = 8
?getV@CollectorPacked@CDB@@QEAAPEAU?$_vector3@M@@XZ PROC ; CDB::CollectorPacked::getV, COMDAT

; 255  : 		Fvector*			getV()		{ return &*verts.begin();	}

	mov	rax, QWORD PTR [rcx]
	ret	0
?getV@CollectorPacked@CDB@@QEAAPEAU?$_vector3@M@@XZ ENDP ; CDB::CollectorPacked::getV
_TEXT	ENDS
PUBLIC	?getV_Vec@CollectorPacked@CDB@@QEAAAEAV?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@XZ ; CDB::CollectorPacked::getV_Vec
; Function compile flags: /Ogtpy
;	COMDAT ?getV_Vec@CollectorPacked@CDB@@QEAAAEAV?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@XZ
_TEXT	SEGMENT
this$ = 8
?getV_Vec@CollectorPacked@CDB@@QEAAAEAV?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@XZ PROC ; CDB::CollectorPacked::getV_Vec, COMDAT

; 254  : 		xr_vector<Fvector>& getV_Vec()	{ return verts;				}

	mov	rax, rcx
	ret	0
?getV_Vec@CollectorPacked@CDB@@QEAAAEAV?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@XZ ENDP ; CDB::CollectorPacked::getV_Vec
_TEXT	ENDS
PUBLIC	?getTS@Collector@CDB@@QEAA_KXZ			; CDB::Collector::getTS
; Function compile flags: /Ogtpy
;	COMDAT ?getTS@Collector@CDB@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 8
?getTS@Collector@CDB@@QEAA_KXZ PROC			; CDB::Collector::getTS, COMDAT

; 214  : 		size_t			getTS			()	{ return faces.size();			}

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+40]
	sub	rcx, QWORD PTR [rax+32]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	imul	rcx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	mov	eax, eax
	ret	0
?getTS@Collector@CDB@@QEAA_KXZ ENDP			; CDB::Collector::getTS
_TEXT	ENDS
PUBLIC	?getT@Collector@CDB@@QEAAPEAVTRI@2@XZ		; CDB::Collector::getT
; Function compile flags: /Ogtpy
;	COMDAT ?getT@Collector@CDB@@QEAAPEAVTRI@2@XZ
_TEXT	SEGMENT
this$ = 8
?getT@Collector@CDB@@QEAAPEAVTRI@2@XZ PROC		; CDB::Collector::getT, COMDAT

; 213  : 		TRI*			getT			()	{ return &*faces.begin();		}

	mov	rax, QWORD PTR [rcx+32]
	ret	0
?getT@Collector@CDB@@QEAAPEAVTRI@2@XZ ENDP		; CDB::Collector::getT
_TEXT	ENDS
PUBLIC	?getVS@Collector@CDB@@QEAA_KXZ			; CDB::Collector::getVS
; Function compile flags: /Ogtpy
;	COMDAT ?getVS@Collector@CDB@@QEAA_KXZ
_TEXT	SEGMENT
this$ = 8
?getVS@Collector@CDB@@QEAA_KXZ PROC			; CDB::Collector::getVS, COMDAT

; 212  : 		size_t			getVS			() 	{ return verts.size();			}

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	mov	eax, eax
	ret	0
?getVS@Collector@CDB@@QEAA_KXZ ENDP			; CDB::Collector::getVS
_TEXT	ENDS
PUBLIC	?getV@Collector@CDB@@QEAAPEAU?$_vector3@M@@XZ	; CDB::Collector::getV
; Function compile flags: /Ogtpy
;	COMDAT ?getV@Collector@CDB@@QEAAPEAU?$_vector3@M@@XZ
_TEXT	SEGMENT
this$ = 8
?getV@Collector@CDB@@QEAAPEAU?$_vector3@M@@XZ PROC	; CDB::Collector::getV, COMDAT

; 211  : 		Fvector*		getV			()	{ return &*verts.begin();		}

	mov	rax, QWORD PTR [rcx]
	ret	0
?getV@Collector@CDB@@QEAAPEAU?$_vector3@M@@XZ ENDP	; CDB::Collector::getV
_TEXT	ENDS
PUBLIC	?r_count@COLLIDER@CDB@@QEAAHXZ			; CDB::COLLIDER::r_count
; Function compile flags: /Ogtpy
;	COMDAT ?r_count@COLLIDER@CDB@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?r_count@COLLIDER@CDB@@QEAAHXZ PROC			; CDB::COLLIDER::r_count, COMDAT

; 186  : 		ICF int			r_count			()	{	return rd.size();			};

	mov	rax, QWORD PTR [rcx+24]
	sub	rax, QWORD PTR [rcx+16]
	sar	rax, 6
	ret	0
?r_count@COLLIDER@CDB@@QEAAHXZ ENDP			; CDB::COLLIDER::r_count
_TEXT	ENDS
PUBLIC	?r_end@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ	; CDB::COLLIDER::r_end
; Function compile flags: /Ogtpy
;	COMDAT ?r_end@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ
_TEXT	SEGMENT
this$ = 8
?r_end@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ PROC		; CDB::COLLIDER::r_end, COMDAT

; 183  : 		ICF RESULT*		r_end			()	{	return &*rd.end();			};

	mov	rax, QWORD PTR [rcx+24]
	ret	0
?r_end@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ ENDP		; CDB::COLLIDER::r_end
_TEXT	ENDS
PUBLIC	?r_begin@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ	; CDB::COLLIDER::r_begin
; Function compile flags: /Ogtpy
;	COMDAT ?r_begin@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ
_TEXT	SEGMENT
this$ = 8
?r_begin@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ PROC		; CDB::COLLIDER::r_begin, COMDAT

; 182  : 		ICF RESULT*		r_begin			()	{	return &*rd.begin();		};

	mov	rax, QWORD PTR [rcx+16]
	ret	0
?r_begin@COLLIDER@CDB@@QEAAPEAURESULT@2@XZ ENDP		; CDB::COLLIDER::r_begin
_TEXT	ENDS
PUBLIC	?frustum_options@COLLIDER@CDB@@QEAAXI@Z		; CDB::COLLIDER::frustum_options
; Function compile flags: /Ogtpy
;	COMDAT ?frustum_options@COLLIDER@CDB@@QEAAXI@Z
_TEXT	SEGMENT
this$ = 8
f$ = 16
?frustum_options@COLLIDER@CDB@@QEAAXI@Z PROC		; CDB::COLLIDER::frustum_options, COMDAT

; 179  : 		ICF void		frustum_options	(u32 f)	{	frustum_mode = f;	}

	mov	DWORD PTR [rcx+8], edx
	ret	0
?frustum_options@COLLIDER@CDB@@QEAAXI@Z ENDP		; CDB::COLLIDER::frustum_options
_TEXT	ENDS
PUBLIC	?box_options@COLLIDER@CDB@@QEAAXI@Z		; CDB::COLLIDER::box_options
; Function compile flags: /Ogtpy
;	COMDAT ?box_options@COLLIDER@CDB@@QEAAXI@Z
_TEXT	SEGMENT
this$ = 8
f$ = 16
?box_options@COLLIDER@CDB@@QEAAXI@Z PROC		; CDB::COLLIDER::box_options, COMDAT

; 176  : 		ICF void		box_options		(u32 f)	{	box_mode = f;		}

	mov	DWORD PTR [rcx+4], edx
	ret	0
?box_options@COLLIDER@CDB@@QEAAXI@Z ENDP		; CDB::COLLIDER::box_options
_TEXT	ENDS
PUBLIC	?ray_options@COLLIDER@CDB@@QEAAXI@Z		; CDB::COLLIDER::ray_options
; Function compile flags: /Ogtpy
;	COMDAT ?ray_options@COLLIDER@CDB@@QEAAXI@Z
_TEXT	SEGMENT
this$ = 8
f$ = 16
?ray_options@COLLIDER@CDB@@QEAAXI@Z PROC		; CDB::COLLIDER::ray_options, COMDAT

; 173  : 		ICF void		ray_options		(u32 f)	{	ray_mode = f;		}

	mov	DWORD PTR [rcx], edx
	ret	0
?ray_options@COLLIDER@CDB@@QEAAXI@Z ENDP		; CDB::COLLIDER::ray_options
_TEXT	ENDS
PUBLIC	??4RESULT@CDB@@QEAAAEAU01@AEBU01@@Z		; CDB::RESULT::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4RESULT@CDB@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??4RESULT@CDB@@QEAAAEAU01@AEBU01@@Z PROC		; CDB::RESULT::operator=, COMDAT
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
	mov	rax, rcx
	ret	0
??4RESULT@CDB@@QEAAAEAU01@AEBU01@@Z ENDP		; CDB::RESULT::operator=
_TEXT	ENDS
PUBLIC	??4MODEL@CDB@@QEAAAEAV01@AEBV01@@Z		; CDB::MODEL::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4MODEL@CDB@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??4MODEL@CDB@@QEAAAEAV01@AEBV01@@Z PROC			; CDB::MODEL::operator=, COMDAT
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, rcx
	ret	0
??4MODEL@CDB@@QEAAAEAV01@AEBV01@@Z ENDP			; CDB::MODEL::operator=
_TEXT	ENDS
PUBLIC	?syncronize@MODEL@CDB@@QEBAXXZ			; CDB::MODEL::syncronize
;	COMDAT pdata
pdata	SEGMENT
$pdata$?syncronize@MODEL@CDB@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+36
	DD	imagerel $unwind$?syncronize@MODEL@CDB@@QEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?syncronize@MODEL@CDB@@QEBAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?syncronize@MODEL@CDB@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?syncronize@MODEL@CDB@@QEBAXXZ PROC			; CDB::MODEL::syncronize, COMDAT

; 100  : 		{

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 101  : 			if (S_READY!=status)

	cmp	DWORD PTR [rcx+16], 0
	mov	rbx, rcx
	je	SHORT $LN1@syncronize

; 102  : 			{
; 103  : 				Log						("! WARNING: syncronized CDB::query");
; 104  : 				xrCriticalSection*	C	= (xrCriticalSection*) &cs;
; 105  : 				C->Enter				();

	call	QWORD PTR __imp_?Enter@xrCriticalSection@@QEAAXXZ

; 106  : 				C->Leave				();

	mov	rcx, rbx
	call	QWORD PTR __imp_?Leave@xrCriticalSection@@QEAAXXZ
$LN1@syncronize:

; 107  : 			}
; 108  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?syncronize@MODEL@CDB@@QEBAXXZ ENDP			; CDB::MODEL::syncronize
_TEXT	ENDS
PUBLIC	?get_tris_count@MODEL@CDB@@QEBAHXZ		; CDB::MODEL::get_tris_count
; Function compile flags: /Ogtpy
;	COMDAT ?get_tris_count@MODEL@CDB@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?get_tris_count@MODEL@CDB@@QEBAHXZ PROC			; CDB::MODEL::get_tris_count, COMDAT

; 98   : 		IC int					get_tris_count	()	const	{ return tris_count;}

	mov	eax, DWORD PTR [rcx+32]
	ret	0
?get_tris_count@MODEL@CDB@@QEBAHXZ ENDP			; CDB::MODEL::get_tris_count
_TEXT	ENDS
PUBLIC	?get_tris@MODEL@CDB@@QEAAPEAVTRI@2@XZ		; CDB::MODEL::get_tris
; Function compile flags: /Ogtpy
;	COMDAT ?get_tris@MODEL@CDB@@QEAAPEAVTRI@2@XZ
_TEXT	SEGMENT
this$ = 8
?get_tris@MODEL@CDB@@QEAAPEAVTRI@2@XZ PROC		; CDB::MODEL::get_tris, COMDAT

; 97   : 		IC TRI*					get_tris		()			{ return tris;		}

	mov	rax, QWORD PTR [rcx+24]
	ret	0
?get_tris@MODEL@CDB@@QEAAPEAVTRI@2@XZ ENDP		; CDB::MODEL::get_tris
_TEXT	ENDS
PUBLIC	?get_verts_count@MODEL@CDB@@QEBAHXZ		; CDB::MODEL::get_verts_count
; Function compile flags: /Ogtpy
;	COMDAT ?get_verts_count@MODEL@CDB@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?get_verts_count@MODEL@CDB@@QEBAHXZ PROC		; CDB::MODEL::get_verts_count, COMDAT

; 96   : 		IC int					get_verts_count	()	const	{ return verts_count;}

	mov	eax, DWORD PTR [rcx+48]
	ret	0
?get_verts_count@MODEL@CDB@@QEBAHXZ ENDP		; CDB::MODEL::get_verts_count
_TEXT	ENDS
PUBLIC	?get_verts@MODEL@CDB@@QEAAPEAU?$_vector3@M@@XZ	; CDB::MODEL::get_verts
; Function compile flags: /Ogtpy
;	COMDAT ?get_verts@MODEL@CDB@@QEAAPEAU?$_vector3@M@@XZ
_TEXT	SEGMENT
this$ = 8
?get_verts@MODEL@CDB@@QEAAPEAU?$_vector3@M@@XZ PROC	; CDB::MODEL::get_verts, COMDAT

; 95   : 		IC Fvector*				get_verts		()			{ return verts;		}

	mov	rax, QWORD PTR [rcx+40]
	ret	0
?get_verts@MODEL@CDB@@QEAAPEAU?$_vector3@M@@XZ ENDP	; CDB::MODEL::get_verts
_TEXT	ENDS
PUBLIC	??4TRI@CDB@@QEAAAEAV01@AEBV01@@Z		; CDB::TRI::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4TRI@CDB@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??4TRI@CDB@@QEAAAEAV01@AEBV01@@Z PROC			; CDB::TRI::operator=, COMDAT
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??4TRI@CDB@@QEAAAEAV01@AEBV01@@Z ENDP			; CDB::TRI::operator=
_TEXT	ENDS
PUBLIC	?IDvert@TRI@CDB@@QEAAII@Z			; CDB::TRI::IDvert
; Function compile flags: /Ogtpy
;	COMDAT ?IDvert@TRI@CDB@@QEAAII@Z
_TEXT	SEGMENT
this$ = 8
ID$ = 16
?IDvert@TRI@CDB@@QEAAII@Z PROC				; CDB::TRI::IDvert, COMDAT

; 64   : 		IC u32			IDvert	(u32 ID)		{ return verts[ID];	}

	mov	eax, edx
	mov	eax, DWORD PTR [rcx+rax*4]
	ret	0
?IDvert@TRI@CDB@@QEAAII@Z ENDP				; CDB::TRI::IDvert
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z DD imagerel $LN6
	DD	imagerel $LN6+30
	DD	imagerel $unwind$?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z PROC		; xalloc<unsigned int>::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN6:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN3@deallocate@5
	mov	rdx, rcx
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN3@deallocate@5:
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@I@@QEBAXPEAI_K@Z ENDP		; xalloc<unsigned int>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@@Z PROC ; std::_Destroy_range<xalloc<unsigned int> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@I@@@std@@YAXPEAI0AEAV?$xalloc@I@@@Z ENDP ; std::_Destroy_range<xalloc<unsigned int> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@VTRI@CDB@@AEBV12@@std@@YAXPEAVTRI@CDB@@AEBV12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@VTRI@CDB@@AEBV12@@std@@YAXPEAVTRI@CDB@@AEBV12@@Z PROC ; std::_Construct<CDB::TRI,CDB::TRI const & __ptr64>, COMDAT

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct@4
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
$LN3@Construct@4:

; 49   : 	}

	fatret	0
??$_Construct@VTRI@CDB@@AEBV12@@std@@YAXPEAVTRI@CDB@@AEBV12@@Z ENDP ; std::_Construct<CDB::TRI,CDB::TRI const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@U?$_vector3@M@@AEBU1@@std@@YAXPEAU?$_vector3@M@@AEBU1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@U?$_vector3@M@@AEBU1@@std@@YAXPEAU?$_vector3@M@@AEBU1@@Z PROC ; std::_Construct<_vector3<float>,_vector3<float> const & __ptr64>, COMDAT

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct@5
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax
$LN3@Construct@5:

; 49   : 	}

	fatret	0
??$_Construct@U?$_vector3@M@@AEBU1@@std@@YAXPEAU?$_vector3@M@@AEBU1@@Z ENDP ; std::_Construct<_vector3<float>,_vector3<float> const & __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?construct@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@AEBV23@@Z
_TEXT	SEGMENT
p$ = 8
_Val$ = 16
?construct@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@AEBV23@@Z PROC ; xalloc<CDB::TRI>::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

	test	rcx, rcx
	je	SHORT $LN5@construct@3
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
$LN5@construct@3:
	fatret	0
?construct@?$xalloc@VTRI@CDB@@@@QEAAXPEAVTRI@CDB@@AEBV23@@Z ENDP ; xalloc<CDB::TRI>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@AEBU2@@Z
_TEXT	SEGMENT
p$ = 8
_Val$ = 16
?construct@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@AEBU2@@Z PROC ; xalloc<_vector3<float> >::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

	test	rcx, rcx
	je	SHORT $LN5@construct@4
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax
$LN5@construct@4:
	fatret	0
?construct@?$xalloc@U?$_vector3@M@@@@QEAAXPEAU?$_vector3@M@@AEBU2@@Z ENDP ; xalloc<_vector3<float> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEAV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEAV23@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEAV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEAV23@@Z PROC ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@3
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
$LN9@Cons_val@3:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEAV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEAV23@@Z ENDP ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEBV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEBV23@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEBV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEBV23@@Z PROC ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI const & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@4
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
$LN9@Cons_val@4:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@VTRI@CDB@@@@VTRI@CDB@@AEBV23@@std@@YAXAEAV?$xalloc@VTRI@CDB@@@@PEAVTRI@CDB@@AEBV23@@Z ENDP ; std::_Cons_val<xalloc<CDB::TRI>,CDB::TRI,CDB::TRI const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEAU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEAU23@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEAU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEAU23@@Z PROC ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@5
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
$LN9@Cons_val@5:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEAU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEAU23@@Z ENDP ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEBU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEBU23@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEBU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEBU23@@Z PROC ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT const & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@6
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
$LN9@Cons_val@6:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@AEBU23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@AEBU23@@Z ENDP ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEAU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEAU2@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEAU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEAU2@@Z PROC ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@7
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax
$LN9@Cons_val@7:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEAU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEAU2@@Z ENDP ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEBU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEBU2@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEBU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEBU2@@Z PROC ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> const & __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@8
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax
$LN9@Cons_val@8:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@U?$_vector3@M@@@@U?$_vector3@M@@AEBU2@@std@@YAXAEAV?$xalloc@U?$_vector3@M@@@@PEAU?$_vector3@M@@AEBU2@@Z ENDP ; std::_Cons_val<xalloc<_vector3<float> >,_vector3<float>,_vector3<float> const & __ptr64>
_TEXT	ENDS
EXTRN	__CxxFrameHandler3:PROC
EXTRN	_CxxThrowException:PROC
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+76
	DD	imagerel $unwind$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+68
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T114920 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T114920[rsp], -2
	npad	3
$LL6@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_cop

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN22@Uninit_cop
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [r8+16], rax
$LN22@Uninit_cop:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 24
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 24
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_cop
$LN4@Uninit_cop:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_cop:
??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T114920 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+99
	DD	imagerel $unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+23
	DD	00H
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+91
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T115036 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN45:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T115036[rsp], -2

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN

	mov	rax, QWORD PTR _First$[rsp]
	npad	4

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

$LL14@Uninit_cop@2:
	cmp	rax, QWORD PTR _Last$[rsp]
	je	SHORT $LN4@Uninit_cop@2

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN35@Uninit_cop@2
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r8], rcx
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [r8+8], rcx
	mov	rcx, QWORD PTR [rax+16]
	mov	QWORD PTR [r8+16], rcx
	mov	rax, QWORD PTR _First$[rsp]
$LN35@Uninit_cop@2:

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 24
	mov	QWORD PTR _Dest$[rsp], r8
	add	rax, 24
	mov	QWORD PTR _First$[rsp], rax
	jmp	SHORT $LL14@Uninit_cop@2
$LN4@Uninit_cop@2:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN44@Uninit_cop@2:
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T115036 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+116
	DD	imagerel $unwind$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+108
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T115127 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T115127[rsp], -2
	npad	3
$LL6@Uninit_cop@3:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_cop@3

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN22@Uninit_cop@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [r8+16], rax
	mov	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR [r8+24], rax
	mov	rax, QWORD PTR [rcx+32]
	mov	QWORD PTR [r8+32], rax
	mov	rax, QWORD PTR [rcx+40]
	mov	QWORD PTR [r8+40], rax
	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [r8+48], rax
	mov	rax, QWORD PTR [rcx+56]
	mov	QWORD PTR [r8+56], rax
$LN22@Uninit_cop@3:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 64					; 00000040H
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 64					; 00000040H
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_cop@3
$LN4@Uninit_cop@3:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_cop@3:
??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T115127 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+139
	DD	imagerel $unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+23
	DD	00H
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+131
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T115242 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN45:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T115242[rsp], -2

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN

	mov	rax, QWORD PTR _First$[rsp]
	npad	4

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

$LL14@Uninit_cop@4:
	cmp	rax, QWORD PTR _Last$[rsp]
	je	SHORT $LN4@Uninit_cop@4

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN35@Uninit_cop@4
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r8], rcx
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [r8+8], rcx
	mov	rcx, QWORD PTR [rax+16]
	mov	QWORD PTR [r8+16], rcx
	mov	rcx, QWORD PTR [rax+24]
	mov	QWORD PTR [r8+24], rcx
	mov	rcx, QWORD PTR [rax+32]
	mov	QWORD PTR [r8+32], rcx
	mov	rcx, QWORD PTR [rax+40]
	mov	QWORD PTR [r8+40], rcx
	mov	rcx, QWORD PTR [rax+48]
	mov	QWORD PTR [r8+48], rcx
	mov	rcx, QWORD PTR [rax+56]
	mov	QWORD PTR [r8+56], rcx
	mov	rax, QWORD PTR _First$[rsp]
$LN35@Uninit_cop@4:

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 64					; 00000040H
	mov	QWORD PTR _Dest$[rsp], r8
	add	rax, 64					; 00000040H
	mov	QWORD PTR _First$[rsp], rax
	jmp	SHORT $LL14@Uninit_cop@4
$LN4@Uninit_cop@4:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN44@Uninit_cop@4:
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T115242 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+67
	DD	imagerel $unwind$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+59
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T115333 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T115333[rsp], -2
	npad	3
$LL6@Uninit_cop@5:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_cop@5

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN22@Uninit_cop@5
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [r8+8], eax
$LN22@Uninit_cop@5:

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN
; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 12
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 12
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_cop@5
$LN4@Uninit_cop@5:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_cop@5:
??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T115333 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN45
	DD	imagerel $LN45+90
	DD	imagerel $unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+23
	DD	00H
	DD	imagerel ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+82
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T115448 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN45:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T115448[rsp], -2

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;
; 373  : 
; 374  : 	_TRY_BEGIN

	mov	rax, QWORD PTR _First$[rsp]
	npad	4

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

$LL14@Uninit_cop@6:
	cmp	rax, QWORD PTR _Last$[rsp]
	je	SHORT $LN4@Uninit_cop@6

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	r8, r8
	je	SHORT $LN35@Uninit_cop@6
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r8], rcx
	mov	ecx, DWORD PTR [rax+8]
	mov	DWORD PTR [r8+8], ecx
	mov	rax, QWORD PTR _First$[rsp]
$LN35@Uninit_cop@6:

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 12
	mov	QWORD PTR _Dest$[rsp], r8
	add	rax, 12
	mov	QWORD PTR _First$[rsp], rax
	jmp	SHORT $LL14@Uninit_cop@6
$LN4@Uninit_cop@6:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, r8

; 383  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN44@Uninit_cop@6:
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T115448 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >'::`1'::catch$0
; Function compile flags: /Ogtpy
text$x	ENDS
;	COMDAT ??$_Uninitialized_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@@Z PROC ; std::_Uninitialized_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >, COMDAT

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));
; 415  : 	}

	jmp	??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
??$_Uninitialized_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@@Z ENDP ; std::_Uninitialized_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z DD imagerel $LN5
	DD	imagerel $LN5+14
	DD	imagerel $unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN5:
	sub	rsp, 40					; 00000028H

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >

; 415  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z PROC ; std::_Uninitialized_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >, COMDAT

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));
; 415  : 	}

	jmp	??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
??$_Uninitialized_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z ENDP ; std::_Uninitialized_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z DD imagerel $LN5
	DD	imagerel $LN5+14
	DD	imagerel $unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN5:
	sub	rsp, 40					; 00000028H

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >

; 415  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@@Z PROC ; std::_Uninitialized_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >, COMDAT

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));
; 415  : 	}

	jmp	??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
??$_Uninitialized_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@@Z ENDP ; std::_Uninitialized_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z DD imagerel $LN5
	DD	imagerel $LN5+14
	DD	imagerel $unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >, COMDAT

; 412  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN5:
	sub	rsp, 40					; 00000028H

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >

; 415  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PEAVTRI@CDB@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@PEAV23@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Ucopy@PEAVTRI@CDB@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@PEAV23@00@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<CDB::TRI * __ptr64>, COMDAT

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));
; 1319 : 		}

	jmp	??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
??$_Ucopy@PEAVTRI@CDB@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@PEAV23@00@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<CDB::TRI * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z DD imagerel $LN7
	DD	imagerel $LN7+14
	DD	imagerel $unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Ptr$ = 64
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > > >, COMDAT

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

$LN7:
	sub	rsp, 40					; 00000028H

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >

; 1319 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@1@0PEAV23@@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Ucopy@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<CDB::RESULT * __ptr64>, COMDAT

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));
; 1319 : 		}

	jmp	??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
??$_Ucopy@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<CDB::RESULT * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@U23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@$$QEAU23@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@U23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@$$QEAU23@@Z PROC ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@9
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdx+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdx+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdx+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdx+56]
	mov	QWORD PTR [rcx+56], rax
$LN9@Cons_val@9:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@U23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@$$QEAU23@@Z ENDP ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z DD imagerel $LN7
	DD	imagerel $LN7+14
	DD	imagerel $unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Ptr$ = 64
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > > >, COMDAT

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

$LN7:
	sub	rsp, 40					; 00000028H

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >

; 1319 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@1@0PEAU23@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PEAU?$_vector3@M@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@PEAU2@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Ucopy@PEAU?$_vector3@M@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@PEAU2@00@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<_vector3<float> * __ptr64>, COMDAT

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));
; 1319 : 		}

	jmp	??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
??$_Ucopy@PEAU?$_vector3@M@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@PEAU2@00@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<_vector3<float> * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z DD imagerel $LN7
	DD	imagerel $LN7+14
	DD	imagerel $unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Ptr$ = 64
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > > >, COMDAT

; 1315 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

$LN7:
	sub	rsp, 40					; 00000028H

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));

	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >

; 1319 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@1@0PEAU2@@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Where$ = 16
?_Make_iter@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Make_iter, COMDAT

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 803  : 		}

	ret	0
?_Make_iter@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Where$ = 16
?_Make_iter@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Make_iter, COMDAT

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 803  : 		}

	ret	0
?_Make_iter@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_First_arg$ = 24
_Last_arg$ = 32
?erase@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@0@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::erase, COMDAT

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

	cmp	r8, r9
	je	SHORT $LN47@erase

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

	mov	r11, QWORD PTR [rcx+8]
	mov	r10, r8
	cmp	r9, r11
	je	SHORT $LN30@erase
$LL32@erase:
	mov	rax, QWORD PTR [r9]
	add	r9, 24
	add	r10, 24
	mov	QWORD PTR [r10-24], rax
	mov	rax, QWORD PTR [r9-16]
	mov	QWORD PTR [r10-16], rax
	mov	rax, QWORD PTR [r9-8]
	mov	QWORD PTR [r10-8], rax
	cmp	r9, r11
	jne	SHORT $LL32@erase
$LN30@erase:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

	mov	QWORD PTR [rcx+8], r10
$LN47@erase:

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	rax, rdx
	mov	QWORD PTR [rdx], r8

; 1214 : 		}

	ret	0
?erase@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@0@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end, COMDAT

; 792  : 		return (iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 793  : 		}

	ret	0
?end@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@2@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_K_K@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 288230376151711743			; 03ffffffffffffffH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 6
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, r8
	jae	SHORT $LN4@Grow_to@4
	xor	r8d, r8d

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
$LN4@Grow_to@4:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	r8, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEBA_K_K@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Grow_to
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Where$ = 16
?_Make_iter@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Make_iter, COMDAT

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 803  : 		}

	ret	0
?_Make_iter@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_First_arg$ = 24
_Last_arg$ = 32
?erase@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@0@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::erase, COMDAT

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

	cmp	r8, r9
	je	SHORT $LN47@erase@2

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

	mov	r11, QWORD PTR [rcx+8]
	mov	r10, r8
	cmp	r9, r11
	je	SHORT $LN30@erase@2
$LL32@erase@2:
	mov	rax, QWORD PTR [r9]
	add	r9, 12
	add	r10, 12
	mov	QWORD PTR [r10-12], rax
	mov	eax, DWORD PTR [r9-4]
	mov	DWORD PTR [r10-4], eax
	cmp	r9, r11
	jne	SHORT $LL32@erase@2
$LN30@erase@2:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

	mov	QWORD PTR [rcx+8], r10
$LN47@erase@2:

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	rax, rdx
	mov	QWORD PTR [rdx], r8

; 1214 : 		}

	ret	0
?erase@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@0@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end, COMDAT

; 792  : 		return (iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 793  : 		}

	ret	0
?end@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@2@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::end
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+49
	DD	imagerel $unwind$?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Tidy, COMDAT

; 1301 : 		{	// free all storage

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1302 : 		if (this->_Myfirst != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN8@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN8@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1310 : 		this->_Mylast = 0;

	mov	QWORD PTR [rbx+8], rax

; 1311 : 		this->_Myend = 0;

	mov	QWORD PTR [rbx+16], rax

; 1312 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAAXXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAXXZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::clear, COMDAT

; 1218 : 		erase(begin(), end());

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN19@clear
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN48@clear
	npad	12
$LL50@clear:
	mov	rax, QWORD PTR [r8]
	add	r8, 24
	add	rdx, 24
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [r8-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [r8-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	r8, r9
	jne	SHORT $LL50@clear
$LN48@clear:
	mov	QWORD PTR [rcx+8], rdx
$LN19@clear:

; 1219 : 		}

	fatret	0
?clear@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAXXZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::clear
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_and_free@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN21@clear_and_
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN50@clear_and_
	npad	12
$LL52@clear_and_:
	mov	rax, QWORD PTR [r8]
	add	r8, 24
	add	rdx, 24
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [r8-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [r8-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	r8, r9
	jne	SHORT $LL52@clear_and_
$LN50@clear_and_:
	mov	QWORD PTR [rcx+8], rdx
$LN21@clear_and_:
	fatret	0
?clear_and_free@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear_and_free
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+49
	DD	imagerel $unwind$?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Tidy, COMDAT

; 1301 : 		{	// free all storage

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1302 : 		if (this->_Myfirst != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN8@Tidy@2

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN8@Tidy@2:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1310 : 		this->_Mylast = 0;

	mov	QWORD PTR [rbx+8], rax

; 1311 : 		this->_Myend = 0;

	mov	QWORD PTR [rbx+16], rax

; 1312 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAXXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_First_arg$ = 24
_Last_arg$ = 32
?erase@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@0@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase, COMDAT

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

	cmp	r8, r9
	je	SHORT $LN47@erase@3

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

	mov	r11, QWORD PTR [rcx+8]
	mov	r10, r8
	cmp	r9, r11
	je	SHORT $LN30@erase@3
$LL32@erase@3:
	mov	rax, QWORD PTR [r9]
	add	r9, 64					; 00000040H
	add	r10, 64					; 00000040H
	mov	QWORD PTR [r10-64], rax
	mov	rax, QWORD PTR [r9-56]
	mov	QWORD PTR [r10-56], rax
	mov	rax, QWORD PTR [r9-48]
	mov	QWORD PTR [r10-48], rax
	mov	rax, QWORD PTR [r9-40]
	mov	QWORD PTR [r10-40], rax
	mov	rax, QWORD PTR [r9-32]
	mov	QWORD PTR [r10-32], rax
	mov	rax, QWORD PTR [r9-24]
	mov	QWORD PTR [r10-24], rax
	mov	rax, QWORD PTR [r9-16]
	mov	QWORD PTR [r10-16], rax
	mov	rax, QWORD PTR [r9-8]
	mov	QWORD PTR [r10-8], rax
	cmp	r9, r11
	jne	SHORT $LL32@erase@3
$LN30@erase@3:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);
; 1211 : 			this->_Mylast = _Ptr;

	mov	QWORD PTR [rcx+8], r10
$LN47@erase@3:

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	rax, rdx
	mov	QWORD PTR [rdx], r8

; 1214 : 		}

	ret	0
?erase@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@2@0@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+49
	DD	imagerel $unwind$?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Tidy, COMDAT

; 1301 : 		{	// free all storage

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1302 : 		if (this->_Myfirst != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN8@Tidy@3

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN8@Tidy@3:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1310 : 		this->_Mylast = 0;

	mov	QWORD PTR [rbx+8], rax

; 1311 : 		this->_Myend = 0;

	mov	QWORD PTR [rbx+16], rax

; 1312 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAAXXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAXXZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::clear, COMDAT

; 1218 : 		erase(begin(), end());

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN19@clear@2
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN48@clear@2
	npad	12
$LL50@clear@2:
	mov	rax, QWORD PTR [r8]
	add	r8, 12
	add	rdx, 12
	mov	QWORD PTR [rdx-12], rax
	mov	eax, DWORD PTR [r8-4]
	mov	DWORD PTR [rdx-4], eax
	cmp	r8, r9
	jne	SHORT $LL50@clear@2
$LN48@clear@2:
	mov	QWORD PTR [rcx+8], rdx
$LN19@clear@2:

; 1219 : 		}

	fatret	0
?clear@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAXXZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::clear
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_and_free@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN21@clear_and_@2
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN50@clear_and_@2
	npad	12
$LL52@clear_and_@2:
	mov	rax, QWORD PTR [r8]
	add	r8, 12
	add	rdx, 12
	mov	QWORD PTR [rdx-12], rax
	mov	eax, DWORD PTR [r8-4]
	mov	DWORD PTR [rdx-4], eax
	cmp	r8, r9
	jne	SHORT $LL52@clear_and_@2
$LN50@clear_and_@2:
	mov	QWORD PTR [rcx+8], rdx
$LN21@clear_and_@2:
	fatret	0
?clear_and_free@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear_and_free
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+32
	DD	imagerel $LN140+171
	DD	imagerel $chain$0$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+171
	DD	imagerel $LN140+190
	DD	imagerel $chain$2$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+190
	DD	imagerel $LN140+445
	DD	imagerel $chain$5$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+445
	DD	imagerel $LN140+517
	DD	imagerel $chain$7$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+517
	DD	imagerel $LN140+531
	DD	imagerel $chain$8$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 021H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040021H
	DD	076400H
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040c21H
	DD	07640cH
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020021H
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020521H
	DD	065405H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::operator=, COMDAT

; 709  : 		{	// assign _Right

$LN140:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 710  : 		if (this != &_Right)

	cmp	rcx, rdx
	je	$LN134@operator@3

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();
; 713  : 
; 714  : 			if (_Right.size() == 0)

	mov	r10, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rdx]
	mov	QWORD PTR [rsp+48], rbp
	mov	r8, r10
	mov	rbp, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	r8, r9
	mov	rax, rbp
	imul	r8
	mov	r11, rdx
	sar	r11, 2
	mov	rax, r11
	shr	rax, 63					; 0000003fH
	add	r11, rax
	jne	SHORT $LN8@operator@3

; 715  : 				clear();	// new sequence empty, erase existing sequence

	mov	rdx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	cmp	rdx, r8
	je	SHORT $LN135@operator@3
	mov	rcx, r8
	cmp	r8, r8
	je	SHORT $LN63@operator@3
	npad	14
$LL65@operator@3:
	mov	rax, QWORD PTR [rcx]
	add	rcx, 24
	add	rdx, 24
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [rcx-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [rcx-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	rcx, r8
	jne	SHORT $LL65@operator@3
$LN63@operator@3:
	mov	rbp, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbx+8], rdx

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN135@operator@3:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rcx
	mov	rbp, QWORD PTR [rsp+48]

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@operator@3:

; 716  : 			else if (_Right.size() <= size())

	mov	r8, QWORD PTR [rcx]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rsp+56], rsi
	sub	rcx, r8
	mov	rax, rbp
	imul	rcx
	mov	rsi, rdx
	sar	rsi, 2
	mov	rax, rsi
	shr	rax, 63					; 0000003fH
	add	rsi, rax
	cmp	r11, rsi
	ja	SHORT $LN6@operator@3

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

	cmp	r9, r10
	je	SHORT $LN86@operator@3
	npad	2
$LL88@operator@3:
	mov	rax, QWORD PTR [r9]
	add	r9, 24
	add	r8, 24
	mov	QWORD PTR [r8-24], rax
	mov	rcx, QWORD PTR [r9-16]
	mov	QWORD PTR [r8-16], rcx
	mov	rcx, QWORD PTR [r9-8]
	mov	QWORD PTR [r8-8], rcx
	cmp	r9, r10
	jne	SHORT $LL88@operator@3
$LN86@operator@3:

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old
; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

	mov	rcx, QWORD PTR [rdi+8]
	mov	r8, QWORD PTR [rbx]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rdi]
	imul	rcx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	lea	rax, QWORD PTR [rdx+rdx*2]
	lea	rcx, QWORD PTR [r8+rax*8]
	mov	QWORD PTR [rbx+8], rcx

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

	jmp	SHORT $LN133@operator@3
$LN6@operator@3:
	mov	rcx, QWORD PTR [rbx+16]
	mov	rax, rbp
	sub	rcx, r8
	imul	rcx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	r11, rdx
	ja	SHORT $LN4@operator@3

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();

	lea	rax, QWORD PTR [rsi+rsi*2]
	lea	rcx, QWORD PTR [r9+rax*8]

; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

	cmp	r9, rcx
	je	SHORT $LN103@operator@3
	npad	3
$LL105@operator@3:
	mov	rax, QWORD PTR [r9]
	add	r9, 24
	add	r8, 24
	mov	QWORD PTR [r8-24], rax
	mov	rax, QWORD PTR [r9-16]
	mov	QWORD PTR [r8-16], rax
	mov	rax, QWORD PTR [r9-8]
	mov	QWORD PTR [r8-8], rax
	cmp	r9, rcx
	jne	SHORT $LL105@operator@3
$LN103@operator@3:

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

	mov	r8, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR [rdi+8]
$LN138@operator@3:
	call	??$_Uninit_copy@PEAVTRI@CDB@@PEAV12@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@PEAV12@00AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::TRI * __ptr64,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
	mov	QWORD PTR [rbx+8], rax
$LN133@operator@3:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rsi, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+48]
	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@operator@3:

; 728  : 				}
; 729  : 			else
; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

	test	r8, r8
	je	SHORT $LN116@operator@3

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);
; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, r8
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN116@operator@3:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

	mov	rcx, QWORD PTR [rdi+8]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rdi]
	imul	rcx
	mov	rcx, rbx
	sar	rdx, 2
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	call	?_Buy@?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@IEAA_N_K@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::_Buy
	test	al, al
	je	SHORT $LN133@operator@3

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rdi]
	jmp	SHORT $LN138@operator@3
$LN134@operator@3:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rcx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+49
	DD	imagerel $unwind$??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::~vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 704  : 		{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H

; 705  : 		_Tidy();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN10@vector@3
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN10@vector@3:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax

; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@XZ ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::~vector<CDB::TRI,xalloc<CDB::TRI> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD imagerel $LN65
	DD	imagerel $LN65+207
	DD	imagerel $unwind$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z+169
	DD	00H
	DD	imagerel ??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z+188
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA+14
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD 061d19H
	DD	0a641dH
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	01H
	DD	imagerel $tryMap$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	05H
	DD	imagerel $ip2state$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T118169 = 32
this$ = 64
_Right$ = 72
??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 535  : 		{	// construct by copying _Right

$LN65:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T118169[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	rsi, rdx
	mov	rbx, rcx
	xor	ecx, ecx
	mov	QWORD PTR [rbx], rcx
	mov	QWORD PTR [rbx+8], rcx
	mov	QWORD PTR [rbx+16], rcx

; 536  : 		if (_Buy(_Right.size()))

	mov	r8, QWORD PTR [rdx+8]
	sub	r8, QWORD PTR [rdx]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	imul	r8
	mov	rdi, rdx
	sar	rdi, 2
	mov	rax, rdi
	shr	rax, 63					; 0000003fH
	add	rdi, rax
	mov	QWORD PTR [rbx], rcx
	mov	QWORD PTR [rbx+8], rcx
	mov	QWORD PTR [rbx+16], rcx
	je	SHORT $LN7@vector@4
	mov	rax, 768614336404564650			; 0aaaaaaaaaaaaaaaH
	cmp	rdi, rax
	jbe	SHORT $LN18@vector@4
	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN18@vector@4:
	mov	eax, edi
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 3
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	lea	rcx, QWORD PTR [rdi+rdi*2]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rbx+16], rax

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [rsi]
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@std@@PEAVTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@YAPEAVTRI@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@@0@0PEAV12@AEAV?$xalloc@VTRI@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::TRI,xalloc<CDB::TRI> > >,CDB::TRI * __ptr64,xalloc<CDB::TRI> >
	mov	QWORD PTR [rbx+8], rax
$LN7@vector@4:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();
; 542  : 			_RERAISE;
; 543  : 			_CATCH_END
; 544  : 		}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN64@vector@4:
??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T118169 = 32
this$ = 64
_Right$ = 72
?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >'::`1'::catch$0

; 540  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z$0:

; 541  : 			_Tidy();

	mov	rbx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN60@catch$0
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN60@catch$0:
	mov	QWORD PTR [rbx], 0
	mov	QWORD PTR [rbx+8], 0
	mov	QWORD PTR [rbx+16], 0

; 542  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >'::`1'::catch$0
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
text$x	ENDS
;	COMDAT ?clear@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear, COMDAT

; 132  : 	void	clear				()									{ clear_and_free	();			}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN23@clear@3
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN52@clear@3
	npad	12
$LL54@clear@3:
	mov	rax, QWORD PTR [r8]
	add	r8, 24
	add	rdx, 24
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [r8-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [r8-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	r8, r9
	jne	SHORT $LL54@clear@3
$LN52@clear@3:
	mov	QWORD PTR [rcx+8], rdx
$LN23@clear@3:
	fatret	0
?clear@?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAXXZ ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT

; 122  : 			xr_vector			()									: inherited	()					{}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAURESULT@CDB@@XZ
_TEXT	SEGMENT
this$ = 8
?back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAURESULT@CDB@@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::back, COMDAT

; 967  : 		return (*(end() - 1));

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, 64					; 00000040H

; 968  : 		}

	ret	0
?back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAURESULT@CDB@@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::back
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+49
	DD	imagerel $unwind$??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::~vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 704  : 		{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H

; 705  : 		_Tidy();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN10@vector@5
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN10@vector@5:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax

; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@XZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::~vector<CDB::RESULT,xalloc<CDB::RESULT> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD imagerel $LN65
	DD	imagerel $LN65+179
	DD	imagerel $unwind$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z+141
	DD	00H
	DD	imagerel ??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z+160
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA+14
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD 061d19H
	DD	0a641dH
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	01H
	DD	imagerel $tryMap$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	05H
	DD	imagerel $ip2state$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T118892 = 32
this$ = 64
_Right$ = 72
??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 535  : 		{	// construct by copying _Right

$LN65:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T118892[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	rsi, rdx
	mov	rbx, rcx
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 536  : 		if (_Buy(_Right.size()))

	mov	rdi, QWORD PTR [rdx+8]
	sub	rdi, QWORD PTR [rdx]
	sar	rdi, 6
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	test	rdi, rdi
	je	SHORT $LN7@vector@6
	mov	rax, 288230376151711743			; 03ffffffffffffffH
	cmp	rdi, rax
	jbe	SHORT $LN18@vector@6
	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN18@vector@6:
	mov	edx, edi
	shl	rdx, 6
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	shl	rdi, 6
	add	rdi, rax
	mov	QWORD PTR [rbx+16], rdi

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [rsi]
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@std@@PEAURESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@V?$_Vector_const_iterator@V?$_Vector_val@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@@0@0PEAU12@AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<CDB::RESULT,xalloc<CDB::RESULT> > >,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
	mov	QWORD PTR [rbx+8], rax
$LN7@vector@6:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();
; 542  : 			_RERAISE;
; 543  : 			_CATCH_END
; 544  : 		}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN64@vector@6:
??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T118892 = 32
this$ = 64
_Right$ = 72
?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >'::`1'::catch$0

; 540  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z$0:

; 541  : 			_Tidy();

	mov	rbx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN60@catch$0@2
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN60@catch$0@2:
	mov	QWORD PTR [rbx], 0
	mov	QWORD PTR [rbx+8], 0
	mov	QWORD PTR [rbx+16], 0

; 542  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >'::`1'::catch$0
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
text$x	ENDS
;	COMDAT ?clear_not_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_not_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_not_free, COMDAT

; 128  : 	void	clear_not_free		()									{ erase(begin(),end());			}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN19@clear_not_
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN48@clear_not_
	npad	12
$LL50@clear_not_:
	mov	rax, QWORD PTR [r8]
	add	r8, 64					; 00000040H
	add	rdx, 64					; 00000040H
	mov	QWORD PTR [rdx-64], rax
	mov	rax, QWORD PTR [r8-56]
	mov	QWORD PTR [rdx-56], rax
	mov	rax, QWORD PTR [r8-48]
	mov	QWORD PTR [rdx-48], rax
	mov	rax, QWORD PTR [r8-40]
	mov	QWORD PTR [rdx-40], rax
	mov	rax, QWORD PTR [r8-32]
	mov	QWORD PTR [rdx-32], rax
	mov	rax, QWORD PTR [r8-24]
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [r8-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [r8-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	r8, r9
	jne	SHORT $LL50@clear_not_
$LN48@clear_not_:
	mov	QWORD PTR [rcx+8], rdx
$LN19@clear_not_:
	fatret	0
?clear_not_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_not_free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT

; 122  : 			xr_vector			()									: inherited	()					{}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+32
	DD	imagerel $LN140+146
	DD	imagerel $chain$0$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+146
	DD	imagerel $LN140+165
	DD	imagerel $chain$2$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+165
	DD	imagerel $LN140+421
	DD	imagerel $chain$5$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+421
	DD	imagerel $LN140+492
	DD	imagerel $chain$7$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN140+492
	DD	imagerel $LN140+506
	DD	imagerel $chain$8$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 021H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040021H
	DD	076400H
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040c21H
	DD	07640cH
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020021H
	DD	065400H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020521H
	DD	065405H
	DD	imagerel $LN140
	DD	imagerel $LN140+32
	DD	imagerel $unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::operator=, COMDAT

; 709  : 		{	// assign _Right

$LN140:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 710  : 		if (this != &_Right)

	cmp	rcx, rdx
	je	$LN134@operator@4

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();
; 713  : 
; 714  : 			if (_Right.size() == 0)

	mov	r10, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rdx]
	mov	QWORD PTR [rsp+48], rbp
	mov	r8, r10
	mov	rbp, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	r8, r9
	mov	rax, rbp
	imul	r8
	mov	r11, rdx
	sar	r11, 1
	mov	rax, r11
	shr	rax, 63					; 0000003fH
	add	r11, rax
	jne	SHORT $LN8@operator@4

; 715  : 				clear();	// new sequence empty, erase existing sequence

	mov	rdx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	cmp	rdx, r8
	je	SHORT $LN135@operator@4
	mov	rcx, r8
	cmp	r8, r8
	je	SHORT $LN63@operator@4
$LL65@operator@4:
	mov	rax, QWORD PTR [rcx]
	add	rcx, 12
	add	rdx, 12
	mov	QWORD PTR [rdx-12], rax
	mov	eax, DWORD PTR [rcx-4]
	mov	DWORD PTR [rdx-4], eax
	cmp	rcx, r8
	jne	SHORT $LL65@operator@4
$LN63@operator@4:
	mov	rbp, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbx+8], rdx

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN135@operator@4:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rcx
	mov	rbp, QWORD PTR [rsp+48]

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@operator@4:

; 716  : 			else if (_Right.size() <= size())

	mov	r8, QWORD PTR [rcx]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rsp+56], rsi
	sub	rcx, r8
	mov	rax, rbp
	imul	rcx
	mov	rsi, rdx
	sar	rsi, 1
	mov	rax, rsi
	shr	rax, 63					; 0000003fH
	add	rsi, rax
	cmp	r11, rsi
	ja	SHORT $LN6@operator@4

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

	cmp	r9, r10
	je	SHORT $LN86@operator@4
	npad	12
$LL88@operator@4:
	mov	rcx, QWORD PTR [r9]
	add	r9, 12
	add	r8, 12
	mov	QWORD PTR [r8-12], rcx
	mov	ecx, DWORD PTR [r9-4]
	mov	DWORD PTR [r8-4], ecx
	cmp	r9, r10
	jne	SHORT $LL88@operator@4
$LN86@operator@4:

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old
; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

	mov	rcx, QWORD PTR [rdi+8]
	mov	r8, QWORD PTR [rbx]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rdi]
	imul	rcx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	lea	rax, QWORD PTR [rdx+rdx*2]
	lea	rcx, QWORD PTR [r8+rax*4]
	mov	QWORD PTR [rbx+8], rcx

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

	jmp	SHORT $LN133@operator@4
$LN6@operator@4:
	mov	rcx, QWORD PTR [rbx+16]
	mov	rax, rbp
	sub	rcx, r8
	imul	rcx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	r11, rdx
	ja	SHORT $LN4@operator@4

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();

	lea	rax, QWORD PTR [rsi+rsi*2]
	lea	rcx, QWORD PTR [r9+rax*4]

; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

	cmp	r9, rcx
	je	SHORT $LN103@operator@4
	npad	13
$LL105@operator@4:
	mov	rax, QWORD PTR [r9]
	add	r9, 12
	add	r8, 12
	mov	QWORD PTR [r8-12], rax
	mov	eax, DWORD PTR [r9-4]
	mov	DWORD PTR [r8-4], eax
	cmp	r9, rcx
	jne	SHORT $LL105@operator@4
$LN103@operator@4:

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

	mov	r8, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR [rdi+8]
$LN138@operator@4:
	call	??$_Uninit_copy@PEAU?$_vector3@M@@PEAU1@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@PEAU1@00AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<_vector3<float> * __ptr64,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
	mov	QWORD PTR [rbx+8], rax
$LN133@operator@4:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rsi, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+48]
	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@operator@4:

; 728  : 				}
; 729  : 			else
; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

	test	r8, r8
	je	SHORT $LN116@operator@4

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);
; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, r8
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN116@operator@4:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

	mov	rcx, QWORD PTR [rdi+8]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rdi]
	imul	rcx
	mov	rcx, rbx
	sar	rdx, 1
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	call	?_Buy@?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@IEAA_N_K@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::_Buy
	test	al, al
	je	SHORT $LN133@operator@4

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rdi]
	jmp	SHORT $LN138@operator@4
$LN134@operator@4:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rcx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+49
	DD	imagerel $unwind$??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::~vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 704  : 		{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H

; 705  : 		_Tidy();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN10@vector@7
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN10@vector@7:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax

; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@XZ ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::~vector<_vector3<float>,xalloc<_vector3<float> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD imagerel $LN65
	DD	imagerel $LN65+206
	DD	imagerel $unwind$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z+168
	DD	00H
	DD	imagerel ??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z+187
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA+14
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD 061d19H
	DD	0a641dH
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
	DD	01H
	DD	imagerel $tryMap$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
	DD	05H
	DD	imagerel $ip2state$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T119899 = 32
this$ = 64
_Right$ = 72
??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 535  : 		{	// construct by copying _Right

$LN65:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T119899[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	rsi, rdx
	mov	rbx, rcx
	xor	ecx, ecx
	mov	QWORD PTR [rbx], rcx
	mov	QWORD PTR [rbx+8], rcx
	mov	QWORD PTR [rbx+16], rcx

; 536  : 		if (_Buy(_Right.size()))

	mov	r8, QWORD PTR [rdx+8]
	sub	r8, QWORD PTR [rdx]
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	imul	r8
	mov	rdi, rdx
	sar	rdi, 1
	mov	rax, rdi
	shr	rax, 63					; 0000003fH
	add	rdi, rax
	mov	QWORD PTR [rbx], rcx
	mov	QWORD PTR [rbx+8], rcx
	mov	QWORD PTR [rbx+16], rcx
	je	SHORT $LN7@vector@8
	mov	rax, 1537228672809129301		; 1555555555555555H
	cmp	rdi, rax
	jbe	SHORT $LN18@vector@8
	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN18@vector@8:
	mov	eax, edi
	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 2
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	lea	rcx, QWORD PTR [rdi+rdi*2]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR [rbx+16], rax

; 537  : 			_TRY_BEGIN
; 538  : 			this->_Mylast = _Ucopy(_Right.begin(), _Right.end(),
; 539  : 				this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [rsi]
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@std@@PEAU?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@YAPEAU?$_vector3@M@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@@0@0PEAU1@AEAV?$xalloc@U?$_vector3@M@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<_vector3<float>,xalloc<_vector3<float> > > >,_vector3<float> * __ptr64,xalloc<_vector3<float> > >
	mov	QWORD PTR [rbx+8], rax
$LN7@vector@8:

; 540  : 			_CATCH_ALL
; 541  : 			_Tidy();
; 542  : 			_RERAISE;
; 543  : 			_CATCH_END
; 544  : 		}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN64@vector@8:
??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T119899 = 32
this$ = 64
_Right$ = 72
?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >'::`1'::catch$0

; 540  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
__catch$??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z$0:

; 541  : 			_Tidy();

	mov	rbx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN60@catch$0@3
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN60@catch$0@3:
	mov	QWORD PTR [rbx], 0
	mov	QWORD PTR [rbx+8], 0
	mov	QWORD PTR [rbx+16], 0

; 542  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >'::`1'::catch$0
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
text$x	ENDS
;	COMDAT ?clear@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear, COMDAT

; 132  : 	void	clear				()									{ clear_and_free	();			}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN23@clear@4
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN52@clear@4
	npad	12
$LL54@clear@4:
	mov	rax, QWORD PTR [r8]
	add	r8, 12
	add	rdx, 12
	mov	QWORD PTR [rdx-12], rax
	mov	eax, DWORD PTR [r8-4]
	mov	DWORD PTR [rdx-4], eax
	cmp	r8, r9
	jne	SHORT $LL54@clear@4
$LN52@clear@4:
	mov	QWORD PTR [rcx+8], rdx
$LN23@clear@4:
	fatret	0
?clear@?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAXXZ ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT

; 122  : 			xr_vector			()									: inherited	()					{}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::operator=, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAAAEAV0@AEBV0@@Z ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::operator=, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAAAEAV0@AEBV0@@Z ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@AEBV0@@Z ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::xr_vector<CDB::TRI,xalloc<CDB::TRI> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@AEBV0@@Z ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::xr_vector<_vector3<float>,xalloc<_vector3<float> > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+49
	DD	imagerel $unwind$??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ PROC ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::~xr_vector<CDB::TRI,xalloc<CDB::TRI> >, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN12@xr_vector
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN12@xr_vector:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$xr_vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@@QEAA@XZ ENDP ; xr_vector<CDB::TRI,xalloc<CDB::TRI> >::~xr_vector<CDB::TRI,xalloc<CDB::TRI> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+49
	DD	imagerel $unwind$??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ PROC ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::~xr_vector<_vector3<float>,xalloc<_vector3<float> > >, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN12@xr_vector@2
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN12@xr_vector@2:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$xr_vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@@QEAA@XZ ENDP ; xr_vector<_vector3<float>,xalloc<_vector3<float> > >::~xr_vector<_vector3<float>,xalloc<_vector3<float> > >
_TEXT	ENDS
PUBLIC	??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z		; CDB::Collector::operator=
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN7
	DD	imagerel $LN7+48
	DD	imagerel $unwind$??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z PROC		; CDB::Collector::operator=, COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??4?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::operator=
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::operator=
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4Collector@CDB@@QEAAAEAV01@AEBV01@@Z ENDP		; CDB::Collector::operator=
_TEXT	ENDS
PUBLIC	??0Collector@CDB@@QEAA@AEBV01@@Z		; CDB::Collector::Collector
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Collector@CDB@@QEAA@AEBV01@@Z DD imagerel $LN7
	DD	imagerel $LN7+48
	DD	imagerel $unwind$??0Collector@CDB@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Collector@CDB@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0Collector@CDB@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0Collector@CDB@@QEAA@AEBV01@@Z PROC			; CDB::Collector::Collector, COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$vector@U?$_vector3@M@@V?$xalloc@U?$_vector3@M@@@@@std@@QEAA@AEBV01@@Z ; std::vector<_vector3<float>,xalloc<_vector3<float> > >::vector<_vector3<float>,xalloc<_vector3<float> > >
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??0?$vector@VTRI@CDB@@V?$xalloc@VTRI@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::TRI,xalloc<CDB::TRI> >::vector<CDB::TRI,xalloc<CDB::TRI> >
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0Collector@CDB@@QEAA@AEBV01@@Z ENDP			; CDB::Collector::Collector
_TEXT	ENDS
PUBLIC	??1Collector@CDB@@QEAA@XZ			; CDB::Collector::~Collector
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Collector@CDB@@QEAA@XZ DD imagerel $LN35
	DD	imagerel $LN35+92
	DD	imagerel $unwind$??1Collector@CDB@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Collector@CDB@@QEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1Collector@CDB@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Collector@CDB@@QEAA@XZ PROC				; CDB::Collector::~Collector, COMDAT
$LN35:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx+32]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN14@Collector
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN14@Collector:
	xor	edi, edi
	mov	QWORD PTR [rbx+32], rdi
	mov	QWORD PTR [rbx+40], rdi
	mov	QWORD PTR [rbx+48], rdi
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN30@Collector
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN30@Collector:
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rdi
	mov	QWORD PTR [rbx+16], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1Collector@CDB@@QEAA@XZ ENDP				; CDB::Collector::~Collector
_TEXT	ENDS
PUBLIC	??0Collector@CDB@@QEAA@XZ			; CDB::Collector::Collector
; Function compile flags: /Ogtpy
;	COMDAT ??0Collector@CDB@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Collector@CDB@@QEAA@XZ PROC				; CDB::Collector::Collector, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+32], rax
	mov	QWORD PTR [rcx+40], rax
	mov	QWORD PTR [rcx+48], rax
	mov	rax, rcx
	ret	0
??0Collector@CDB@@QEAA@XZ ENDP				; CDB::Collector::Collector
_TEXT	ENDS
PUBLIC	?clear@Collector@CDB@@QEAAXXZ			; CDB::Collector::clear
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.h
;	COMDAT ?clear@Collector@CDB@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@Collector@CDB@@QEAAXXZ PROC			; CDB::Collector::clear, COMDAT

; 215  : 		void			clear			()	{ verts.clear(); faces.clear();	}

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	mov	r8, rcx
	cmp	rdx, r9
	je	SHORT $LN25@clear@5
	mov	rcx, r9
	cmp	r9, r9
	je	SHORT $LN54@clear@5
	npad	9
$LL56@clear@5:
	mov	rax, QWORD PTR [rcx]
	add	rcx, 12
	add	rdx, 12
	mov	QWORD PTR [rdx-12], rax
	mov	eax, DWORD PTR [rcx-4]
	mov	DWORD PTR [rdx-4], eax
	cmp	rcx, r9
	jne	SHORT $LL56@clear@5
$LN54@clear@5:
	mov	QWORD PTR [r8+8], rdx
$LN25@clear@5:
	mov	rcx, QWORD PTR [r8+32]
	mov	r9, QWORD PTR [r8+40]
	cmp	rcx, r9
	je	SHORT $LN91@clear@5
	mov	rdx, r9
	cmp	r9, r9
	je	SHORT $LN120@clear@5
	npad	13
$LL122@clear@5:
	mov	rax, QWORD PTR [rdx]
	add	rdx, 24
	add	rcx, 24
	mov	QWORD PTR [rcx-24], rax
	mov	rax, QWORD PTR [rdx-16]
	mov	QWORD PTR [rcx-16], rax
	mov	rax, QWORD PTR [rdx-8]
	mov	QWORD PTR [rcx-8], rax
	cmp	rdx, r9
	jne	SHORT $LL122@clear@5
$LN120@clear@5:
	mov	QWORD PTR [r8+40], rcx
$LN91@clear@5:
	fatret	0
?clear@Collector@CDB@@QEAAXXZ ENDP			; CDB::Collector::clear
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+49
	DD	imagerel $unwind$??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::~xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN12@xr_vector@3
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN12@xr_vector@3:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@XZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::~xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAA@AEBV0@@Z ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >
_TEXT	ENDS
PUBLIC	??0COLLIDER@CDB@@QEAA@AEBV01@@Z			; CDB::COLLIDER::COLLIDER
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0COLLIDER@CDB@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+47
	DD	imagerel $unwind$??0COLLIDER@CDB@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0COLLIDER@CDB@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0COLLIDER@CDB@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0COLLIDER@CDB@@QEAA@AEBV01@@Z PROC			; CDB::COLLIDER::COLLIDER, COMDAT
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rdx]
	mov	rbx, rcx
	add	rdx, 16
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR [rdx-12]
	add	rcx, 16
	mov	DWORD PTR [rcx-12], eax
	mov	eax, DWORD PTR [rdx-8]
	mov	DWORD PTR [rcx-8], eax
	call	??0?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAA@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::vector<CDB::RESULT,xalloc<CDB::RESULT> >
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0COLLIDER@CDB@@QEAA@AEBV01@@Z ENDP			; CDB::COLLIDER::COLLIDER
_TEXT	ENDS
PUBLIC	?r_clear@COLLIDER@CDB@@QEAAXXZ			; CDB::COLLIDER::r_clear
; Function compile flags: /Ogtpy
;	COMDAT ?r_clear@COLLIDER@CDB@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?r_clear@COLLIDER@CDB@@QEAAXXZ PROC			; CDB::COLLIDER::r_clear, COMDAT

; 187  : 		ICF void		r_clear			()	{	rd.clear_not_free();		};

	add	rcx, 16
	jmp	?clear_not_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_not_free
?r_clear@COLLIDER@CDB@@QEAAXXZ ENDP			; CDB::COLLIDER::r_clear
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@IV?$xalloc@I@@@std@@IEAAXPEAI0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@IV?$xalloc@I@@@std@@IEAAXPEAI0@Z PROC ; std::vector<unsigned int,xalloc<unsigned int> >::_Destroy, COMDAT

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

	ret	0
?_Destroy@?$vector@IV?$xalloc@I@@@std@@IEAAXPEAI0@Z ENDP ; std::vector<unsigned int,xalloc<unsigned int> >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN18
	DD	imagerel $LN18+89
	DD	imagerel $unwind$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+34
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+70
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 061919H
	DD	0b6419H
	DD	093414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T139135 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN18:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T139135[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+88], rsi
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx
$LL6@Uninit_mov@4:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rbx, rsi
	je	SHORT $LN4@Uninit_mov@4

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Cons_val@V?$xalloc@URESULT@CDB@@@@URESULT@CDB@@U23@@std@@YAXAEAV?$xalloc@URESULT@CDB@@@@PEAURESULT@CDB@@$$QEAU23@@Z ; std::_Cons_val<xalloc<CDB::RESULT>,CDB::RESULT,CDB::RESULT>

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	rdi, 64					; 00000040H
	mov	QWORD PTR _Dest$[rsp], rdi
	add	rbx, 64					; 00000040H
	mov	QWORD PTR _First$[rsp], rbx
	jmp	SHORT $LL6@Uninit_mov@4
$LN4@Uninit_mov@4:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, rdi

; 438  : 	}

	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN17@Uninit_mov@4:
??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T139135 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>'::`1'::catch$0
; Function compile flags: /Ogtpy
text$x	ENDS
;	COMDAT ??$_Uninitialized_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z PROC ; std::_Uninitialized_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>
??$_Uninitialized_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@@Z ENDP ; std::_Uninitialized_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Umove<CDB::RESULT * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>
??$_Umove@PEAURESULT@CDB@@@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAPEAURESULT@CDB@@PEAU23@00@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Umove<CDB::RESULT * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD imagerel $LN48
	DD	imagerel $LN48+199
	DD	imagerel $unwind$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA+45
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z+108
	DD	00H
	DD	imagerel ?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z+124
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T139296 = 32
this$ = 64
_Ptr$96058 = 72
_Count$ = 72
?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN48:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T139296[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rdi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 288230376151711743			; 03ffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve@3

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve@3:

; 749  : 		else if (capacity() < _Count)

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 6
	cmp	rax, rdx
	jae	SHORT $LN3@reserve@3

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	edx, edx
	shl	rdx, 6
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	mov	r12, rax
	mov	QWORD PTR _Ptr$96058[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@U12@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT>,CDB::RESULT>
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	rdx, QWORD PTR [rbx]
	mov	rsi, QWORD PTR [rbx+8]
	sub	rsi, rdx

; 761  : 			if (this->_Myfirst != 0)

	test	rdx, rdx
	je	SHORT $LN42@reserve@3

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN42@reserve@3:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	shl	rdi, 6
	add	rdi, r12
	mov	QWORD PTR [rbx+16], rdi

; 770  : 			this->_Mylast = _Ptr + _Size;

	and	rsi, -64				; ffffffffffffffc0H
	add	rsi, r12
	mov	QWORD PTR [rbx+8], rsi

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], r12
$LN3@reserve@3:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN47@reserve@3:
?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T139296 = 32
this$ = 64
_Ptr$96058 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rdx, QWORD PTR _Ptr$96058[rbp]
	test	rdx, rdx
	je	SHORT $LN35@catch$0@6
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN35@catch$0@6:

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+137
	DD	imagerel $unwind$?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	rax, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	mov	r9, rcx
	sub	r8, rax

; 1292 : 		if (max_size() - _Count < _Size)

	mov	rcx, 288230376151711742			; 03fffffffffffffeH
	sar	r8, 6
	cmp	r8, rcx
	jbe	SHORT $LN4@Reserve

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	mov	rdx, QWORD PTR [r9+16]
	inc	r8
	sub	rdx, rax
	sar	rdx, 6
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rcx, rdx
	mov	rax, 288230376151711743			; 03ffffffffffffffH
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN21@Reserve
	xor	edx, edx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve:
	add	rdx, rcx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::reserve
$LN1@Reserve:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve:
?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear, COMDAT

; 1218 : 		erase(begin(), end());

	mov	rdx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [rcx+8]
	cmp	rdx, r9
	je	SHORT $LN19@clear@6
	mov	r8, r9
	cmp	r9, r9
	je	SHORT $LN48@clear@6
	npad	12
$LL50@clear@6:
	mov	rax, QWORD PTR [r8]
	add	r8, 64					; 00000040H
	add	rdx, 64					; 00000040H
	mov	QWORD PTR [rdx-64], rax
	mov	rax, QWORD PTR [r8-56]
	mov	QWORD PTR [rdx-56], rax
	mov	rax, QWORD PTR [r8-48]
	mov	QWORD PTR [rdx-48], rax
	mov	rax, QWORD PTR [r8-40]
	mov	QWORD PTR [rdx-40], rax
	mov	rax, QWORD PTR [r8-32]
	mov	QWORD PTR [rdx-32], rax
	mov	rax, QWORD PTR [r8-24]
	mov	QWORD PTR [rdx-24], rax
	mov	rax, QWORD PTR [r8-16]
	mov	QWORD PTR [rdx-16], rax
	mov	rax, QWORD PTR [r8-8]
	mov	QWORD PTR [rdx-8], rax
	cmp	r8, r9
	jne	SHORT $LL50@clear@6
$LN48@clear@6:
	mov	QWORD PTR [rcx+8], rdx
$LN19@clear@6:

; 1219 : 		}

	fatret	0
?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN53
	DD	imagerel $LN53+72
	DD	imagerel $unwind$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN53+72
	DD	imagerel $LN53+199
	DD	imagerel $chain$0$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN53+199
	DD	imagerel $LN53+252
	DD	imagerel $chain$2$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN53+252
	DD	imagerel $LN53+266
	DD	imagerel $chain$3$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+72
	DD	imagerel $unwind$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020021H
	DD	066400H
	DD	imagerel $LN53
	DD	imagerel $LN53+72
	DD	imagerel $unwind$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN53
	DD	imagerel $LN53+72
	DD	imagerel $unwind$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=, COMDAT

; 709  : 		{	// assign _Right

$LN53:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 710  : 		if (this != &_Right)

	cmp	rcx, rdx
	je	$LN48@operator@5

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();
; 713  : 
; 714  : 			if (_Right.size() == 0)

	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rdx]
	mov	rcx, rax
	sub	rcx, r9
	sar	rcx, 6
	test	rcx, rcx
	jne	SHORT $LN8@operator@5

; 715  : 				clear();	// new sequence empty, erase existing sequence

	mov	rcx, rbx
	call	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@operator@5:

; 716  : 			else if (_Right.size() <= size())

	mov	rdx, QWORD PTR [rbx]
	mov	QWORD PTR [rsp+48], rsi
	mov	rsi, QWORD PTR [rbx+8]
	sub	rsi, rdx
	sar	rsi, 6
	cmp	rcx, rsi
	ja	SHORT $LN6@operator@5

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

	mov	r8, rdx
	mov	rcx, r9
	mov	rdx, rax
	call	??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old
; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

	mov	rax, QWORD PTR [rdi+8]
	sub	rax, QWORD PTR [rdi]
	and	rax, -64				; ffffffffffffffc0H
	add	rax, QWORD PTR [rbx]

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

	jmp	SHORT $LN51@operator@5
$LN6@operator@5:
	mov	rax, QWORD PTR [rbx+16]
	sub	rax, rdx
	sar	rax, 6
	cmp	rcx, rax
	ja	SHORT $LN4@operator@5

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();

	shl	rsi, 6

; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

	mov	r8, rdx
	mov	rcx, r9
	add	rsi, r9
	mov	rdx, rsi
	call	??$_Copy_impl@PEAURESULT@CDB@@PEAU12@@std@@YAPEAURESULT@CDB@@PEAU12@00@Z ; std::_Copy_impl<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64>

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

	mov	r8, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, rsi
$LN50@operator@5:
	call	??$_Uninit_copy@PEAURESULT@CDB@@PEAU12@V?$xalloc@URESULT@CDB@@@@@std@@YAPEAURESULT@CDB@@PEAU12@00AEAV?$xalloc@URESULT@CDB@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CDB::RESULT * __ptr64,CDB::RESULT * __ptr64,xalloc<CDB::RESULT> >
$LN51@operator@5:
	mov	QWORD PTR [rbx+8], rax
$LN47@operator@5:
	mov	rsi, QWORD PTR [rsp+48]

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rbx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@operator@5:

; 728  : 				}
; 729  : 			else
; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

	test	rdx, rdx
	je	SHORT $LN36@operator@5

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);
; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN36@operator@5:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, rbx
	sub	rdx, QWORD PTR [rdi]
	sar	rdx, 6
	call	?_Buy@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAA_N_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Buy
	test	al, al
	je	SHORT $LN47@operator@5

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rdi]
	jmp	SHORT $LN50@operator@5
$LN48@operator@5:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);

	mov	rax, rcx

; 743  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z DD imagerel $LN54
	DD	imagerel $LN54+160
	DD	imagerel $unwind$?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z PROC ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::push_back, COMDAT

; 631  : 		{	// insert element at end

$LN54:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 632  : 		if (_Inside(_STD addressof(_Val)))

	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	rdx, rax
	jae	SHORT $LN4@push_back
	mov	rcx, QWORD PTR [rcx]
	cmp	rcx, rdx
	ja	SHORT $LN4@push_back

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	sub	rdi, rcx

; 635  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN3@push_back

; 636  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
$LN3@push_back:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

	and	rdi, -64				; ffffffffffffffc0H
	add	rdi, QWORD PTR [rbx]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

	jmp	SHORT $LN1@push_back
$LN4@push_back:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN1@push_back

; 646  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
$LN1@push_back:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN45@push_back
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdi+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdi+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdi+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdi+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdi+56]
	mov	QWORD PTR [rcx+56], rax
$LN45@push_back:

; 651  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 64			; 00000040H

; 652  : 			}
; 653  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAX$$QEAURESULT@CDB@@@Z ENDP ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::push_back
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	jmp	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAXXZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free
_TEXT	ENDS
PUBLIC	?r_free@COLLIDER@CDB@@QEAAXXZ			; CDB::COLLIDER::r_free
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.cpp
_TEXT	SEGMENT
this$ = 8
?r_free@COLLIDER@CDB@@QEAAXXZ PROC			; CDB::COLLIDER::r_free

; 181  : 	rd.clear_and_free	();

	add	rcx, 16

; 182  : }

	jmp	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
?r_free@COLLIDER@CDB@@QEAAXXZ ENDP			; CDB::COLLIDER::r_free
_TEXT	ENDS
PUBLIC	?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ	; CDB::COLLIDER::r_add
pdata	SEGMENT
$pdata$?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ DD imagerel $LN79
	DD	imagerel $LN79+266
	DD	imagerel $unwind$?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ DD 061001H
	DD	0f6410H
	DD	0e3410H
	DD	0700cb210H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 112
?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ PROC		; CDB::COLLIDER::r_add

; 174  : {

$LN79:
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rsi
	push	rdi
	sub	rsp, 96					; 00000060H

; 175  : 	rd.push_back		(RESULT());

	mov	rax, QWORD PTR [rcx+24]
	xor	edi, edi
	mov	rsi, rcx
	lea	rcx, QWORD PTR [r11-72]
	mov	QWORD PTR [r11-72], rdi
	mov	QWORD PTR [r11-64], rdi
	mov	QWORD PTR [r11-56], rdi
	mov	QWORD PTR [r11-48], rdi
	mov	QWORD PTR [r11-40], rdi
	mov	QWORD PTR [r11-32], rdi
	mov	QWORD PTR [r11-24], rdi
	mov	QWORD PTR [r11-16], rdi
	cmp	rcx, rax
	jae	SHORT $LN6@r_add
	mov	rcx, QWORD PTR [rsi+16]
	lea	rdx, QWORD PTR [r11-72]
	cmp	rcx, rdx
	ja	SHORT $LN6@r_add
	lea	rdi, QWORD PTR [r11-72]
	sub	rdi, rcx
	cmp	rax, QWORD PTR [rsi+32]
	jne	SHORT $LN5@r_add
	lea	rcx, QWORD PTR [rsi+16]
	call	?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
$LN5@r_add:
	mov	rcx, QWORD PTR [rsi+24]
	and	rdi, -64				; ffffffffffffffc0H
	add	rdi, QWORD PTR [rsi+16]
	test	rcx, rcx
	je	SHORT $LN47@r_add
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [rdi+24]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdi+32]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR [rdi+40]
	mov	QWORD PTR [rcx+40], rax
	mov	rax, QWORD PTR [rdi+48]
	mov	QWORD PTR [rcx+48], rax
	mov	rax, QWORD PTR [rdi+56]
	mov	QWORD PTR [rcx+56], rax
	jmp	SHORT $LN47@r_add
$LN6@r_add:
	cmp	rax, QWORD PTR [rsi+32]
	jne	SHORT $LN3@r_add
	lea	rcx, QWORD PTR [rsi+16]
	call	?_Reserve@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@IEAAX_K@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::_Reserve
$LN3@r_add:
	mov	rax, QWORD PTR [rsi+24]
	test	rax, rax
	je	SHORT $LN47@r_add
	mov	QWORD PTR [rax], rdi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rdi
	mov	QWORD PTR [rax+24], rdi
	mov	QWORD PTR [rax+32], rdi
	mov	QWORD PTR [rax+40], rdi
	mov	QWORD PTR [rax+48], rdi
	mov	QWORD PTR [rax+56], rdi
$LN47@r_add:
	add	QWORD PTR [rsi+24], 64			; 00000040H

; 176  : 	return rd.back		();

	mov	rax, QWORD PTR [rsi+24]

; 177  : }

	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	sub	rax, 64					; 00000040H
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?r_add@COLLIDER@CDB@@QEAAAEAURESULT@2@XZ ENDP		; CDB::COLLIDER::r_add
_TEXT	ENDS
PUBLIC	??1COLLIDER@CDB@@QEAA@XZ			; CDB::COLLIDER::~COLLIDER
pdata	SEGMENT
$pdata$??1COLLIDER@CDB@@QEAA@XZ DD imagerel $LN23
	DD	imagerel $LN23+58
	DD	imagerel $unwind$??1COLLIDER@CDB@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1COLLIDER@CDB@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1COLLIDER@CDB@@QEAA@XZ PROC				; CDB::COLLIDER::~COLLIDER

; 169  : {

$LN23:
	push	rbx
	sub	rsp, 32					; 00000020H

; 170  : 	r_free			();

	lea	rbx, QWORD PTR [rcx+16]
	mov	rcx, rbx
	call	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear

; 171  : }

	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN18@COLLIDER
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN18@COLLIDER:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1COLLIDER@CDB@@QEAA@XZ ENDP				; CDB::COLLIDER::~COLLIDER
_TEXT	ENDS
PUBLIC	??0COLLIDER@CDB@@QEAA@XZ			; CDB::COLLIDER::COLLIDER
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
this$ = 8
??0COLLIDER@CDB@@QEAA@XZ PROC				; CDB::COLLIDER::COLLIDER

; 162  : { 

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
	mov	QWORD PTR [rcx+32], rax

; 163  : 	ray_mode		= 0;

	mov	QWORD PTR [rcx], rax

; 164  : 	box_mode		= 0;
; 165  : 	frustum_mode	= 0;

	mov	DWORD PTR [rcx+8], eax

; 166  : }

	mov	rax, rcx
	ret	0
??0COLLIDER@CDB@@QEAA@XZ ENDP				; CDB::COLLIDER::COLLIDER
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QEAAAEAV0@AEBV0@@Z ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
_TEXT	ENDS
PUBLIC	??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z		; CDB::COLLIDER::operator=
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+47
	DD	imagerel $unwind$??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z PROC		; CDB::COLLIDER::operator=, COMDAT
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	eax, DWORD PTR [rdx]
	mov	rbx, rcx
	add	rdx, 16
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR [rdx-12]
	add	rcx, 16
	mov	DWORD PTR [rcx-12], eax
	mov	eax, DWORD PTR [rdx-8]
	mov	DWORD PTR [rcx-8], eax
	call	??4?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::operator=
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4COLLIDER@CDB@@QEAAAEAV01@AEBV01@@Z ENDP		; CDB::COLLIDER::operator=
_TEXT	ENDS
PUBLIC	?r_clear_compact@COLLIDER@CDB@@QEAAXXZ		; CDB::COLLIDER::r_clear_compact
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.h
;	COMDAT ?r_clear_compact@COLLIDER@CDB@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?r_clear_compact@COLLIDER@CDB@@QEAAXXZ PROC		; CDB::COLLIDER::r_clear_compact, COMDAT

; 188  : 		ICF void		r_clear_compact	()	{	rd.clear_and_free();		};

	add	rcx, 16
	jmp	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@std@@QEAAXXZ ; std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
?r_clear_compact@COLLIDER@CDB@@QEAAXXZ ENDP		; CDB::COLLIDER::r_clear_compact
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+49
	DD	imagerel $unwind$?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ PROC	; std::vector<unsigned int,xalloc<unsigned int> >::_Tidy, COMDAT

; 1301 : 		{	// free all storage

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1302 : 		if (this->_Myfirst != 0)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN8@Tidy@5

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN8@Tidy@5:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 1310 : 		this->_Mylast = 0;

	mov	QWORD PTR [rbx+8], rax

; 1311 : 		this->_Myend = 0;

	mov	QWORD PTR [rbx+16], rax

; 1312 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$vector@IV?$xalloc@I@@@std@@IEAAXXZ ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::_Tidy
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+23
	DD	imagerel $unwind$??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z PROC		; Opcode::OPCODE_Model::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1OPCODE_Model@Opcode@@QEAA@XZ		; Opcode::OPCODE_Model::~OPCODE_Model
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GOPCODE_Model@Opcode@@QEAAPEAXI@Z ENDP		; Opcode::OPCODE_Model::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z DD imagerel $LN11
	DD	imagerel $LN11+39
	DD	imagerel $unwind$??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z PROC ; xr_special_free<0,Opcode::OPCODE_Model>::operator(), COMDAT

; 142  : 	{

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 143  : 		ptr->~T			();

	mov	rcx, QWORD PTR [rcx]
	call	??1OPCODE_Model@Opcode@@QEAA@XZ		; Opcode::OPCODE_Model::~OPCODE_Model

; 144  : 		Memory.mem_free	(ptr);

	mov	rdx, QWORD PTR [rbx]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A

; 145  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
??R?$xr_special_free@$0A@VOPCODE_Model@Opcode@@@@QEAAXAEAPEAVOPCODE_Model@Opcode@@@Z ENDP ; xr_special_free<0,Opcode::OPCODE_Model>::operator()
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z DD imagerel $LN14
	DD	imagerel $LN14+51
	DD	imagerel $unwind$??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z PROC ; xr_delete<Opcode::OPCODE_Model>, COMDAT

; 150  : {

$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 151  : 	if (ptr) 

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN1@xr_delete@3

; 152  : 	{
; 153  : 		xr_special_free<xrcore::is_polymorphic<T>::result,T>()(ptr);

	call	??1OPCODE_Model@Opcode@@QEAA@XZ		; Opcode::OPCODE_Model::~OPCODE_Model
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z

; 154  : 		ptr = NULL;

	mov	QWORD PTR [rbx], 0
$LN1@xr_delete@3:

; 155  : 	}
; 156  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_delete@VOPCODE_Model@Opcode@@@@YAXAEAPEAVOPCODE_Model@Opcode@@@Z ENDP ; xr_delete<Opcode::OPCODE_Model>
_TEXT	ENDS
PUBLIC	??1MODEL@CDB@@QEAA@XZ				; CDB::MODEL::~MODEL
pdata	SEGMENT
$pdata$??1MODEL@CDB@@QEAA@XZ DD imagerel $LN25
	DD	imagerel $LN25+156
	DD	imagerel $unwind$??1MODEL@CDB@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1MODEL@CDB@@QEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1MODEL@CDB@@QEAA@XZ PROC				; CDB::MODEL::~MODEL

; 42   : {

$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 43   : 	syncronize	();		// maybe model still in building

	cmp	DWORD PTR [rcx+16], 0
	mov	rbx, rcx
	je	SHORT $LN3@MODEL
	call	QWORD PTR __imp_?Enter@xrCriticalSection@@QEAAXXZ
	mov	rcx, rbx
	call	QWORD PTR __imp_?Leave@xrCriticalSection@@QEAAXXZ
$LN3@MODEL:

; 44   : 	status		= S_INIT;

	mov	DWORD PTR [rbx+16], 1

; 45   : 	xr_delete	(tree);

	mov	rcx, QWORD PTR [rbx+8]
	xor	edi, edi
	test	rcx, rcx
	je	SHORT $LN6@MODEL
	call	??1OPCODE_Model@Opcode@@QEAA@XZ		; Opcode::OPCODE_Model::~OPCODE_Model
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+8], rdi
$LN6@MODEL:

; 46   : 	xr_free		(tris);		tris_count = 0;

	mov	rdx, QWORD PTR [rbx+24]
	test	rdx, rdx
	je	SHORT $LN19@MODEL
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+24], rdi
$LN19@MODEL:
	mov	DWORD PTR [rbx+32], edi

; 47   : 	xr_free		(verts);	verts_count= 0;

	mov	rdx, QWORD PTR [rbx+40]
	test	rdx, rdx
	je	SHORT $LN22@MODEL
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rbx+40], rdi
$LN22@MODEL:

; 48   : }

	mov	rcx, rbx
	mov	DWORD PTR [rbx+48], edi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1xrCriticalSection@@QEAA@XZ
??1MODEL@CDB@@QEAA@XZ ENDP				; CDB::MODEL::~MODEL
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
pdata	SEGMENT
$pdata$??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+49
	DD	imagerel $unwind$??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ PROC		; std::vector<unsigned int,xalloc<unsigned int> >::~vector<unsigned int,xalloc<unsigned int> >, COMDAT

; 704  : 		{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H

; 705  : 		_Tidy();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN10@vector@10
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN10@vector@10:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax

; 706  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$vector@IV?$xalloc@I@@@std@@QEAA@XZ ENDP		; std::vector<unsigned int,xalloc<unsigned int> >::~vector<unsigned int,xalloc<unsigned int> >
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+49
	DD	imagerel $unwind$??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ PROC		; xr_vector<unsigned int,xalloc<unsigned int> >::~xr_vector<unsigned int,xalloc<unsigned int> >, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN12@xr_vector@5
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN12@xr_vector@5:
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$xr_vector@IV?$xalloc@I@@@@QEAA@XZ ENDP		; xr_vector<unsigned int,xalloc<unsigned int> >::~xr_vector<unsigned int,xalloc<unsigned int> >
_TEXT	ENDS
PUBLIC	??1CollectorPacked@CDB@@QEAA@XZ			; CDB::CollectorPacked::~CollectorPacked
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CollectorPacked@CDB@@QEAA@XZ DD imagerel $LN57
	DD	imagerel $LN57+176
	DD	imagerel $unwind$??1CollectorPacked@CDB@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CollectorPacked@CDB@@QEAA@XZ DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1CollectorPacked@CDB@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CollectorPacked@CDB@@QEAA@XZ PROC			; CDB::CollectorPacked::~CollectorPacked, COMDAT
$LN57:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	lea	rbx, QWORD PTR [rcx+340088]
	mov	esi, 10624				; 00002980H
	xor	ebp, ebp
	npad	11
$LL4@CollectorP:
	mov	rdx, QWORD PTR [rbx-32]
	sub	rbx, 32					; 00000020H
	test	rdx, rdx
	je	SHORT $LN18@CollectorP
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN18@CollectorP:
	dec	esi
	mov	QWORD PTR [rbx], rbp
	mov	QWORD PTR [rbx+8], rbp
	mov	QWORD PTR [rbx+16], rbp
	jns	SHORT $LL4@CollectorP
	mov	rdx, QWORD PTR [rdi+32]
	test	rdx, rdx
	je	SHORT $LN34@CollectorP
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN34@CollectorP:
	mov	QWORD PTR [rdi+32], rbp
	mov	QWORD PTR [rdi+40], rbp
	mov	QWORD PTR [rdi+48], rbp
	mov	rdx, QWORD PTR [rdi]
	test	rdx, rdx
	je	SHORT $LN50@CollectorP
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
$LN50@CollectorP:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+64]
	mov	QWORD PTR [rdi], rbp
	mov	QWORD PTR [rdi+8], rbp
	mov	QWORD PTR [rdi+16], rbp
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1CollectorPacked@CDB@@QEAA@XZ ENDP			; CDB::CollectorPacked::~CollectorPacked
PUBLIC	?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ; CDB::MODEL::build_internal
EXTRN	memcpy:PROC
pdata	SEGMENT
$pdata$?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z DD imagerel $LN69
	DD	imagerel $LN69+556
	DD	imagerel $unwind$?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z DD 081401H
	DD	0e6414H
	DD	0d5414H
	DD	0c3414H
	DD	070109214H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcdb\xrcdb.cpp
xdata	ENDS
_TEXT	SEGMENT
OPCC$ = 48
this$ = 96
V$ = 104
Vcnt$ = 112
T$ = 120
Tcnt$ = 128
bc$ = 136
bcp$ = 144
?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z PROC ; CDB::MODEL::build_internal

; 95   : {

$LN69:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	ebp, r8d
	mov	rbx, rdx
	mov	rsi, rcx

; 96   : 	// verts
; 97   : 	verts_count	= Vcnt;

	mov	DWORD PTR [rcx+48], ebp

; 98   : 	verts		= xr_alloc<Fvector>	(verts_count);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rbp+rbp*2]
	shl	rdx, 2
	mov	rdi, r9
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 99   : 	CopyMemory	(verts,V,verts_count*sizeof(Fvector));

	movsxd	r8, DWORD PTR [rsi+48]
	mov	rdx, rbx
	lea	r8, QWORD PTR [r8+r8*2]
	mov	rcx, rax
	mov	QWORD PTR [rsi+40], rax
	shl	r8, 2
	call	memcpy

; 100  : 	
; 101  : 	// tris
; 102  : 	tris_count	= Tcnt;

	mov	ebx, DWORD PTR Tcnt$[rsp]
	mov	DWORD PTR [rsi+32], ebx

; 103  : 	tris		= xr_alloc<TRI>		(tris_count);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	rdx, QWORD PTR [rbx+rbx*2]
	shl	rdx, 3
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 104  : 	CopyMemory	(tris,T,tris_count*sizeof(TRI));

	movsxd	rcx, DWORD PTR [rsi+32]
	mov	rdx, rdi
	lea	r8, QWORD PTR [rcx+rcx*2]
	mov	rcx, rax
	mov	QWORD PTR [rsi+24], rax
	shl	r8, 3
	call	memcpy

; 105  : 
; 106  : 	// callback
; 107  : 	if (bc)		bc	(verts,Vcnt,tris,Tcnt,bcp);

	mov	r11, QWORD PTR bc$[rsp]
	test	r11, r11
	je	SHORT $LN6@build_inte
	mov	rax, QWORD PTR bcp$[rsp]
	mov	r8, QWORD PTR [rsi+24]
	mov	rcx, QWORD PTR [rsi+40]
	mov	r9d, ebx
	mov	edx, ebp
	mov	QWORD PTR [rsp+32], rax
	call	r11
$LN6@build_inte:

; 108  : 
; 109  : 	// Release data pointers
; 110  : 	status		= S_BUILD;
; 111  : 	
; 112  : 	// Allocate temporary "OPCODE" tris + convert tris to 'pointer' form
; 113  : 	u32*		temp_tris	= xr_alloc<u32>	(tris_count*3);

	mov	eax, DWORD PTR [rsi+32]
	mov	DWORD PTR [rsi+16], 2
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	edx, DWORD PTR [rax+rax*2]
	shl	rdx, 2
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z

; 114  : 	if (0==temp_tris)	{
; 115  : 		xr_free		(verts);

	xor	ebx, ebx
	mov	rdi, rax
	test	rax, rax
	jne	SHORT $LN5@build_inte
	mov	rdx, QWORD PTR [rsi+40]
	test	rdx, rdx
	je	SHORT $LN15@build_inte
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rsi+40], rbx
$LN15@build_inte:

; 116  : 		xr_free		(tris);

	mov	rdx, QWORD PTR [rsi+24]
	test	rdx, rdx
	je	$LN63@build_inte
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rsi+24], rbx

; 117  : 		return;

	jmp	$LN63@build_inte
$LN5@build_inte:

; 118  : 	}
; 119  : 	u32*		temp_ptr	= temp_tris;

	mov	rdx, rax

; 120  : 	for (int i=0; i<tris_count; i++)

	mov	r9d, ebx
	cmp	DWORD PTR [rsi+32], ebx
	jle	SHORT $LN2@build_inte

; 118  : 	}
; 119  : 	u32*		temp_ptr	= temp_tris;

	mov	r8, rbx
	npad	5
$LL4@build_inte:

; 121  : 	{
; 122  : 		*temp_ptr++	= tris[i].verts[0];

	mov	rax, QWORD PTR [rsi+24]
	inc	r9d

; 123  : 		*temp_ptr++	= tris[i].verts[1];
; 124  : 		*temp_ptr++	= tris[i].verts[2];

	add	rdx, 12
	mov	ecx, DWORD PTR [r8+rax]
	add	r8, 24
	mov	DWORD PTR [rdx-12], ecx
	mov	rax, QWORD PTR [rsi+24]
	mov	ecx, DWORD PTR [rax+r8-20]
	mov	DWORD PTR [rdx-8], ecx
	mov	rax, QWORD PTR [rsi+24]
	mov	ecx, DWORD PTR [rax+r8-16]
	mov	DWORD PTR [rdx-4], ecx
	cmp	r9d, DWORD PTR [rsi+32]
	jl	SHORT $LL4@build_inte
$LN2@build_inte:

; 125  : 	}
; 126  : 	
; 127  : 	// Build a non quantized no-leaf tree
; 128  : 	OPCODECREATE	OPCC;
; 129  : 	OPCC.NbTris		= tris_count;
; 130  : 	OPCC.NbVerts	= verts_count;

	mov	eax, DWORD PTR [rsi+48]
	mov	ebp, DWORD PTR [rsi+32]

; 131  : 	OPCC.Tris		= (unsigned*)temp_tris;
; 132  : 	OPCC.Verts		= (Point*)verts;
; 133  : 	OPCC.Rules		= SPLIT_COMPLETE | SPLIT_SPLATTERPOINTS | SPLIT_GEOMCENTER;
; 134  : 	OPCC.NoLeaf		= true;
; 135  : 	OPCC.Quantized	= false;
; 136  : 	// if (Memory.debug_mode) OPCC.KeepOriginal = true;
; 137  : 
; 138  : 	tree			= xr_new<OPCODE_Model> ();

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	DWORD PTR OPCC$[rsp+4], eax
	mov	rax, QWORD PTR [rsi+40]
	mov	edx, 24
	mov	BYTE PTR OPCC$[rsp+30], bl
	mov	DWORD PTR OPCC$[rsp], ebp
	mov	QWORD PTR OPCC$[rsp+8], rdi
	mov	QWORD PTR OPCC$[rsp+16], rax
	mov	DWORD PTR OPCC$[rsp+24], 69		; 00000045H
	mov	WORD PTR OPCC$[rsp+28], 1
	call	QWORD PTR __imp_?mem_alloc@xrMemory@@QEAAPEAX_K@Z
	test	rax, rax
	je	SHORT $LN25@build_inte
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rax+8], rbx
	mov	WORD PTR [rax+16], bx
	jmp	SHORT $LN26@build_inte
$LN25@build_inte:
	mov	rax, rbx
$LN26@build_inte:
	mov	QWORD PTR [rsi+8], rax

; 139  : 	if (!tree->Build(OPCC)) {

	test	ebp, ebp
	je	SHORT $LN68@build_inte
	lea	rdx, QWORD PTR OPCC$[rsp]
	mov	rcx, rax
	call	?Build@OPCODE_Model@Opcode@@QEAA_NAEBUOPCODECREATE@2@@Z ; Opcode::OPCODE_Model::Build
	test	al, al

; 143  : 		return;
; 144  : 	};
; 145  : 
; 146  : 	// Free temporary tris
; 147  : 	xr_free			(temp_tris);

	jne	SHORT $LN57@build_inte
$LN68@build_inte:

; 140  : 		xr_free		(verts);

	mov	rdx, QWORD PTR [rsi+40]
	test	rdx, rdx
	je	SHORT $LN54@build_inte
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rsi+40], rbx
$LN54@build_inte:

; 141  : 		xr_free		(tris);

	mov	rdx, QWORD PTR [rsi+24]
	test	rdx, rdx
	je	SHORT $LN57@build_inte
	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z
	mov	QWORD PTR [rsi+24], rbx
$LN57@build_inte:

; 142  : 		xr_free		(temp_tris);

	mov	rcx, QWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	rdx, rdi
	call	QWORD PTR __imp_?mem_free@xrMemory@@QEAAXPEAX@Z

; 143  : 		return;
; 144  : 	};
; 145  : 
; 146  : 	// Free temporary tris
; 147  : 	xr_free			(temp_tris);

$LN63@build_inte:

; 148  : 	return;
; 149  : }

	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ENDP ; CDB::MODEL::build_internal
_TEXT	ENDS
PUBLIC	?build_thread@MODEL@CDB@@SAXPEAX@Z		; CDB::MODEL::build_thread
pdata	SEGMENT
$pdata$?build_thread@MODEL@CDB@@SAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+160
	DD	imagerel $unwind$?build_thread@MODEL@CDB@@SAXPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?build_thread@MODEL@CDB@@SAXPEAX@Z DD 0c1e01H
	DD	0f741eH
	DD	0e641eH
	DD	0d541eH
	DD	0c341eH
	DD	0e01a721eH
	DD	0c016d018H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
params$ = 96
?build_thread@MODEL@CDB@@SAXPEAX@Z PROC			; CDB::MODEL::build_thread

; 62   : {

$LN3:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r13
	push	r14
	sub	rsp, 64					; 00000040H
	mov	rbx, rcx

; 63   : 	_initialize_cpu_thread		();

	call	QWORD PTR __imp_?_initialize_cpu_thread@@YAXXZ

; 64   : 	FPU::m64r					();

	call	QWORD PTR __imp_?m64r@FPU@@YAXXZ

; 65   : 	BTHREAD_params	P			= *( (BTHREAD_params*)params );

	mov	r14, QWORD PTR [rbx]
	mov	r13, QWORD PTR [rbx+8]
	mov	r12, QWORD PTR [rbx+16]
	mov	rbp, QWORD PTR [rbx+24]
	mov	rsi, QWORD PTR [rbx+32]
	mov	rdi, QWORD PTR [rbx+40]
	mov	rbx, QWORD PTR [rbx+48]

; 66   : 	P.M->cs.Enter				();

	mov	rcx, r14
	call	QWORD PTR __imp_?Enter@xrCriticalSection@@QEAAXXZ

; 67   : 	P.M->build_internal			(P.V,P.Vcnt,P.T,P.Tcnt,P.BC,P.BCP);

	mov	QWORD PTR [rsp+48], rbx
	mov	r9, rbp
	mov	r8d, r12d
	mov	rdx, r13
	mov	rcx, r14
	mov	QWORD PTR [rsp+40], rdi
	mov	DWORD PTR [rsp+32], esi
	call	?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ; CDB::MODEL::build_internal

; 68   : 	P.M->status					= S_READY;
; 69   : 	P.M->cs.Leave				();

	mov	rcx, r14
	mov	DWORD PTR [r14+16], 0

; 70   : 	//Msg						("* xrCDB: cform build completed, memory usage: %d K",P.M->memory()/1024);
; 71   : }

	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	mov	rdi, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	r13
	pop	r12
	rex_jmp	QWORD PTR __imp_?Leave@xrCriticalSection@@QEAAXXZ
?build_thread@MODEL@CDB@@SAXPEAX@Z ENDP			; CDB::MODEL::build_thread
_TEXT	ENDS
PUBLIC	?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ; CDB::MODEL::build
pdata	SEGMENT
$pdata$?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z DD imagerel $LN20
	DD	imagerel $LN20+403
	DD	imagerel $unwind$?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z DD 0a1b01H
	DD	016641bH
	DD	015541bH
	DD	014341bH
	DD	0d014f21bH
	DD	07010c012H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
P$95482 = 64
this$ = 160
V$ = 168
Vcnt$ = 176
T$ = 184
Tcnt$ = 192
bc$ = 200
bcp$ = 208
?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z PROC ; CDB::MODEL::build

; 74   : {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 128				; 00000080H

; 75   : 	R_ASSERT					(S_INIT == status);

	cmp	BYTE PTR ?ignore_always@?3??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA, 0
	mov	rbp, r9
	mov	esi, r8d
	mov	r12, rdx
	mov	rbx, rcx
	lea	r13, OFFSET FLAT:??_C@_0BC@GJKGJBBN@CDB?3?3MODEL?3?3build?$AA@
	jne	SHORT $LN12@build
	cmp	DWORD PTR [rcx+16], 1
	je	SHORT $LN12@build
	mov	rcx, QWORD PTR __imp_?Debug@@3VxrDebug@@A
	lea	rax, OFFSET FLAT:?ignore_always@?3??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA
	lea	r8, OFFSET FLAT:??_C@_09FONEFOJL@xrCDB?4cpp?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0BB@DMGNJNBH@S_INIT?5?$DN?$DN?5status?$AA@
	mov	r9d, 75					; 0000004bH
	mov	QWORD PTR [rsp+32], r13
	call	QWORD PTR __imp_?fail@xrDebug@@QEAAXPEBD0H0AEA_N@Z
$LN12@build:

; 76   :     R_ASSERT					((Vcnt>=4)&&(Tcnt>=2));

	cmp	BYTE PTR ?ignore_always@?7??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA, 0
	mov	edi, DWORD PTR Tcnt$[rsp]
	jne	SHORT $LN8@build
	cmp	esi, 4
	jl	SHORT $LN5@build
	cmp	edi, 2
	jge	SHORT $LN8@build
$LN5@build:
	mov	rcx, QWORD PTR __imp_?Debug@@3VxrDebug@@A
	lea	rax, OFFSET FLAT:?ignore_always@?7??build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@3@HP6AX0H1HPEAX@Z2@Z@4_NA
	lea	r8, OFFSET FLAT:??_C@_09FONEFOJL@xrCDB?4cpp?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0BF@JLEIHKIA@?$CIVcnt?$DO?$DN4?$CJ?$CG?$CG?$CITcnt?$DO?$DN2?$CJ?$AA@
	mov	r9d, 76					; 0000004cH
	mov	QWORD PTR [rsp+32], r13
	call	QWORD PTR __imp_?fail@xrDebug@@QEAAXPEBD0H0AEA_N@Z
$LN8@build:

; 77   : 
; 78   : 	_initialize_cpu_thread		();

	call	QWORD PTR __imp_?_initialize_cpu_thread@@YAXXZ

; 79   : #ifdef _EDITOR    
; 80   : 	build_internal				(V,Vcnt,T,Tcnt,bc,bcp);
; 81   : #else
; 82   : 	if(!strstr(Core.Params, "-mt_cdb"))

	mov	rcx, QWORD PTR __imp_?Core@@3VxrCore@@A
	lea	rdx, OFFSET FLAT:??_C@_07JLJFPMN@?9mt_cdb?$AA@
	add	rcx, 1232				; 000004d0H
	call	QWORD PTR __imp_strstr
	test	rax, rax
	jne	SHORT $LN4@build

; 83   : 	{
; 84   : 		build_internal				(V,Vcnt,T,Tcnt,bc,bcp);

	mov	rax, QWORD PTR bcp$[rsp]
	mov	r9, rbp
	mov	r8d, esi
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR bc$[rsp]
	mov	rdx, r12
	mov	QWORD PTR [rsp+40], rax
	mov	rcx, rbx
	mov	DWORD PTR [rsp+32], edi
	call	?build_internal@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ; CDB::MODEL::build_internal

; 85   : 	}else

	jmp	SHORT $LN1@build
$LN4@build:

; 86   : 	{
; 87   : 		BTHREAD_params				P = { this, V, Vcnt, T, Tcnt, bc, bcp };

	mov	rax, QWORD PTR bc$[rsp]

; 88   : 		thread_spawn				(build_thread,"CDB-construction",0,&P);

	lea	r9, QWORD PTR P$95482[rsp]
	lea	rdx, OFFSET FLAT:??_C@_0BB@KNMADMJC@CDB?9construction?$AA@
	mov	QWORD PTR P$95482[rsp+40], rax
	mov	rax, QWORD PTR bcp$[rsp]
	lea	rcx, OFFSET FLAT:?build_thread@MODEL@CDB@@SAXPEAX@Z ; CDB::MODEL::build_thread
	xor	r8d, r8d
	mov	QWORD PTR P$95482[rsp], rbx
	mov	QWORD PTR P$95482[rsp+8], r12
	mov	QWORD PTR P$95482[rsp+48], rax
	mov	DWORD PTR P$95482[rsp+16], esi
	mov	QWORD PTR P$95482[rsp+24], rbp
	mov	DWORD PTR P$95482[rsp+32], edi
	call	QWORD PTR __imp_?thread_spawn@@YAXP6AXPEAX@ZPEBDI0@Z

; 89   : 		while						(S_INIT	== status)	Sleep	(5);

	cmp	DWORD PTR [rbx+16], 1
	jne	SHORT $LN1@build
$LL2@build:
	mov	ecx, 5
	call	QWORD PTR __imp_Sleep
	cmp	DWORD PTR [rbx+16], 1
	je	SHORT $LL2@build
$LN1@build:

; 90   : 	}
; 91   : #endif
; 92   : }

	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?build@MODEL@CDB@@QEAAXPEAU?$_vector3@M@@HPEAVTRI@2@HP6AX0H1HPEAX@Z2@Z ENDP ; CDB::MODEL::build
END
