; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_R4CVirtualFileReader@@6B@			; CVirtualFileReader::`RTTI Complete Object Locator'
PUBLIC	??_R3CVirtualFileReader@@8			; CVirtualFileReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CVirtualFileReader@@8			; CVirtualFileReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CVirtualFileReader@@8		; CVirtualFileReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCVirtualFileReader@@@8			; CVirtualFileReader `RTTI Type Descriptor'
PUBLIC	??_R4CCompressedReader@@6B@			; CCompressedReader::`RTTI Complete Object Locator'
PUBLIC	??_R3CCompressedReader@@8			; CCompressedReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCompressedReader@@8			; CCompressedReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCompressedReader@@8		; CCompressedReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCompressedReader@@@8			; CCompressedReader `RTTI Type Descriptor'
PUBLIC	??_R4CFileReader@@6B@				; CFileReader::`RTTI Complete Object Locator'
PUBLIC	??_R3CFileReader@@8				; CFileReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileReader@@8				; CFileReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFileReader@@8			; CFileReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCFileReader@@@8				; CFileReader `RTTI Type Descriptor'
PUBLIC	??_R4CPackReader@@6B@				; CPackReader::`RTTI Complete Object Locator'
PUBLIC	??_R3CPackReader@@8				; CPackReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPackReader@@8				; CPackReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPackReader@@8			; CPackReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCPackReader@@@8				; CPackReader `RTTI Type Descriptor'
PUBLIC	??_R4CTempReader@@6B@				; CTempReader::`RTTI Complete Object Locator'
PUBLIC	??_R3CTempReader@@8				; CTempReader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTempReader@@8				; CTempReader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTempReader@@8			; CTempReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCTempReader@@@8				; CTempReader `RTTI Type Descriptor'
PUBLIC	?w@CMemoryWriter@@UEAAXPEBXI@Z			; CMemoryWriter::w
PUBLIC	?mk_mark@@YAXAEAY08DPEBD@Z			; mk_mark
PUBLIC	?_Inside@?$vector@IV?$xalloc@I@@@std@@IEBA_NPEBI@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Inside
PUBLIC	??$_Val_type@PEAI@std@@YAPEAIPEAI@Z		; std::_Val_type<unsigned int * __ptr64>
PUBLIC	??$forward@I@std@@YA$$QEAIAEAI@Z		; std::forward<unsigned int>
PUBLIC	??$_Cons_val@V?$xalloc@I@@II@std@@YAXAEAV?$xalloc@I@@PEAI$$QEAI@Z ; std::_Cons_val<xalloc<unsigned int>,unsigned int,unsigned int>
PUBLIC	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
PUBLIC	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
PUBLIC	??$_Uninitialized_move@PEAIPEAIV?$xalloc@I@@@std@@YAPEAIPEAI00AEAV?$xalloc@I@@@Z ; std::_Uninitialized_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int> >
PUBLIC	??$_Umove@PEAI@?$vector@IV?$xalloc@I@@@std@@IEAAPEAIPEAI00@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Umove<unsigned int * __ptr64>
PUBLIC	?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z	; std::vector<unsigned int,xalloc<unsigned int> >::reserve
PUBLIC	?_Grow_to@?$vector@IV?$xalloc@I@@@std@@IEBA_K_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Grow_to
PUBLIC	?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@IV?$xalloc@I@@@std@@IEBAXPEAI0@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Orphan_range
PUBLIC	??$addressof@$$CBI@std@@YAPEBIAEBI@Z		; std::addressof<unsigned int const >
PUBLIC	?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z ; std::vector<unsigned int,xalloc<unsigned int> >::push_back
PUBLIC	?push@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXAEBI@Z ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::push
PUBLIC	?pop_back@?$vector@IV?$xalloc@I@@@std@@QEAAXXZ	; std::vector<unsigned int,xalloc<unsigned int> >::pop_back
PUBLIC	?pop@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXXZ ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::pop
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBAAEAIXZ ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator*
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-
PUBLIC	?back@?$vector@IV?$xalloc@I@@@std@@QEAAAEAIXZ	; std::vector<unsigned int,xalloc<unsigned int> >::back
PUBLIC	?top@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAAEAIXZ ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::top
PUBLIC	?div@?$_vector3@M@@QEAAAEAU1@AEBU1@M@Z		; _vector3<float>::div
PUBLIC	?magnitude@?$_vector3@M@@QEBAMXZ		; _vector3<float>::magnitude
PUBLIC	??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z ; xr_special_free<1,IReader>::operator()
PUBLIC	??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z	; xr_delete<IReader>
PUBLIC	??0CTempReader@@QEAA@PEAXHH@Z			; CTempReader::CTempReader
PUBLIC	??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z ; xr_new<CTempReader,unsigned char * __ptr64,unsigned int,unsigned int>
PUBLIC	??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z ; xr_new<IReader,void * __ptr64,unsigned int,unsigned int>
PUBLIC	?is_term@@YAHD@Z				; is_term
PUBLIC	??_GCTempReader@@UEAAPEAXI@Z			; CTempReader::`scalar deleting destructor'
PUBLIC	??_GCPackReader@@UEAAPEAXI@Z			; CPackReader::`scalar deleting destructor'
PUBLIC	??_GCFileReader@@UEAAPEAXI@Z			; CFileReader::`scalar deleting destructor'
PUBLIC	??_GCCompressedReader@@UEAAPEAXI@Z		; CCompressedReader::`scalar deleting destructor'
PUBLIC	??_GCVirtualFileReader@@UEAAPEAXI@Z		; CVirtualFileReader::`scalar deleting destructor'
PUBLIC	?g_dummy_stuff@@3P6AXPEBXAEBIPEAX@ZEA		; g_dummy_stuff
PUBLIC	??_C@_0N@NDJPHIGH@FileDownload?$AA@		; `string'
PUBLIC	??_C@_06ODPOMCLF@FS?4cpp?$AA@			; `string'
PUBLIC	??_C@_07DAHKOGFN@hFile?$DO0?$AA@		; `string'
PUBLIC	??_C@_0BG@MHEELJOF@Can?8t?5read?5file?5data?3?$AA@ ; `string'
PUBLIC	??_C@_0BD@OMBPCKBP@r_bytes?$DN?$DN?$CIint?$CJsize?$AA@ ; `string'
PUBLIC	??_C@_0N@OHMAIPMK@FileCompress?$AA@		; `string'
PUBLIC	??_C@_03HBKIKOFI@H?$DO0?$AA@			; `string'
PUBLIC	??_C@_0P@MHGIJJCK@FileDecompress?$AA@		; `string'
PUBLIC	??_C@_0DK@HIOEDNGA@FATAL?3?5signatures?5doesn?8t?5match?0@ ; `string'
PUBLIC	??_C@_0BC@MHGJGJKA@strncmp?$CIM?0F?08?$CJ?$DN?$DN0?$AA@ ; `string'
PUBLIC	??_C@_0BC@LFPNBCKC@IReader?3?3r_string?$AA@	; `string'
PUBLIC	??_C@_0BO@CBOGAODA@Dest?5string?5less?5than?5needed?4?$AA@ ; `string'
PUBLIC	??_C@_0O@CCNJDAAG@sz?$DM?$CItgt_sz?91?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BD@HIDJIKAI@IReader?3?3r_stringZ?$AA@	; `string'
PUBLIC	??_C@_09KHGJHDDP@sz?$DMtgt_sz?$AA@		; `string'
PUBLIC	??_C@_0BP@JFCPEDIH@CVirtualFileRW?3?3CVirtualFileRW?$AA@ ; `string'
PUBLIC	??_C@_0BP@JJGNJHJF@hSrcFile?$CB?$DNINVALID_HANDLE_VALUE?$AA@ ; `string'
PUBLIC	??_C@_04EBKMHHBE@Size?$AA@			; `string'
PUBLIC	??_C@_0BO@DODFDMMA@hSrcMap?$CB?$DNINVALID_HANDLE_VALUE?$AA@ ; `string'
PUBLIC	??_C@_04PJOLNDGD@data?$AA@			; `string'
PUBLIC	??_C@_0CH@JKOJKKOC@CVirtualFileReader?3?3CVirtualFile@ ; `string'
PUBLIC	??_7CTempReader@@6B@				; CTempReader::`vftable'
PUBLIC	??_7CPackReader@@6B@				; CPackReader::`vftable'
PUBLIC	??_7CFileReader@@6B@				; CFileReader::`vftable'
PUBLIC	??_7CCompressedReader@@6B@			; CCompressedReader::`vftable'
PUBLIC	??_7CVirtualFileReader@@6B@			; CVirtualFileReader::`vftable'
EXTRN	__imp__mkdir:PROC
EXTRN	__imp_Sleep:PROC
EXTRN	__imp__filelength:PROC
EXTRN	__imp_?_open@@YAHPEBDHH@Z:PROC
EXTRN	__imp__write:PROC
EXTRN	__imp_strncmp:PROC
EXTRN	__imp__close:PROC
EXTRN	__imp__read:PROC
EXTRN	__imp_filelength:PROC
EXTRN	__imp_open:PROC
EXTRN	__imp_vsprintf:PROC
EXTRN	??_ECTempReader@@UEAAPEAXI@Z:PROC		; CTempReader::`vector deleting destructor'
EXTRN	??_ECPackReader@@UEAAPEAXI@Z:PROC		; CPackReader::`vector deleting destructor'
EXTRN	??_ECFileReader@@UEAAPEAXI@Z:PROC		; CFileReader::`vector deleting destructor'
EXTRN	??_ECCompressedReader@@UEAAPEAXI@Z:PROC		; CCompressedReader::`vector deleting destructor'
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_GetFileSize:PROC
EXTRN	__imp_MapViewOfFile:PROC
EXTRN	__imp_CreateFileMappingA:PROC
EXTRN	__imp_UnmapViewOfFile:PROC
EXTRN	??_ECVirtualFileReader@@UEAAPEAXI@Z:PROC	; CVirtualFileReader::`vector deleting destructor'
?g_dummy_stuff@@3P6AXPEBXAEBIPEAX@ZEA DQ 01H DUP (?)	; g_dummy_stuff
;	COMDAT ?ignore_always@?6??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?6??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA DB 01H DUP (?) ; `FileDownload'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?L@??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA DB 01H DUP (?) ; `FileDownload'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??FileCompress@@YAXPEBD0PEAXI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??FileCompress@@YAXPEBD0PEAXI@Z@4_NA DB 01H DUP (?) ; `FileCompress'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??FileDecompress@@YAPEAXPEBD0PEAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??FileDecompress@@YAPEAXPEBD0PEAI@Z@4_NA DB 01H DUP (?) ; `FileDecompress'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??FileDecompress@@YAPEAXPEBD0PEAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?L@??FileDecompress@@YAPEAXPEBD0PEAI@Z@4_NA DB 01H DUP (?) ; `FileDecompress'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??r_string@IReader@@QEAAXPEADI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??r_string@IReader@@QEAAXPEADI@Z@4_NA DB 01H DUP (?) ; `IReader::r_string'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??r_stringZ@IReader@@QEAAXPEADI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??r_stringZ@IReader@@QEAAXPEADI@Z@4_NA DB 01H DUP (?) ; `IReader::r_stringZ'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileRW::CVirtualFileRW'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileRW::CVirtualFileRW'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileRW::CVirtualFileRW'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BA@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BA@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileRW::CVirtualFileRW'::`16'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileReader::CVirtualFileReader'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileReader::CVirtualFileReader'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileReader::CVirtualFileReader'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BA@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BA@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA DB 01H DUP (?) ; `CVirtualFileReader::CVirtualFileReader'::`16'::ignore_always
;	COMDAT ??_7CVirtualFileReader@@6B@
CONST	SEGMENT
??_7CVirtualFileReader@@6B@ DQ FLAT:??_R4CVirtualFileReader@@6B@ ; CVirtualFileReader::`vftable'
	DQ	FLAT:??_ECVirtualFileReader@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CVirtualFileReader@@6B@
rdata$r	SEGMENT
??_R4CVirtualFileReader@@6B@ DD 01H			; CVirtualFileReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCVirtualFileReader@@@8
	DD	imagerel ??_R3CVirtualFileReader@@8
	DD	imagerel ??_R4CVirtualFileReader@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CVirtualFileReader@@8
rdata$r	SEGMENT
??_R3CVirtualFileReader@@8 DD 00H			; CVirtualFileReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CVirtualFileReader@@8
rdata$r	ENDS
;	COMDAT ??_R2CVirtualFileReader@@8
rdata$r	SEGMENT
??_R2CVirtualFileReader@@8 DD imagerel ??_R1A@?0A@EA@CVirtualFileReader@@8 ; CVirtualFileReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IReader@@8
	DD	imagerel ??_R1A@?0A@EA@?$IReaderBase@VIReader@@@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CVirtualFileReader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CVirtualFileReader@@8 DD imagerel ??_R0?AVCVirtualFileReader@@@8 ; CVirtualFileReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CVirtualFileReader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCVirtualFileReader@@@8
_DATA	SEGMENT
??_R0?AVCVirtualFileReader@@@8 DQ FLAT:??_7type_info@@6B@ ; CVirtualFileReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCVirtualFileReader@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCompressedReader@@6B@
CONST	SEGMENT
??_7CCompressedReader@@6B@ DQ FLAT:??_R4CCompressedReader@@6B@ ; CCompressedReader::`vftable'
	DQ	FLAT:??_ECCompressedReader@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CCompressedReader@@6B@
rdata$r	SEGMENT
??_R4CCompressedReader@@6B@ DD 01H			; CCompressedReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCCompressedReader@@@8
	DD	imagerel ??_R3CCompressedReader@@8
	DD	imagerel ??_R4CCompressedReader@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CCompressedReader@@8
rdata$r	SEGMENT
??_R3CCompressedReader@@8 DD 00H			; CCompressedReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CCompressedReader@@8
rdata$r	ENDS
;	COMDAT ??_R2CCompressedReader@@8
rdata$r	SEGMENT
??_R2CCompressedReader@@8 DD imagerel ??_R1A@?0A@EA@CCompressedReader@@8 ; CCompressedReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IReader@@8
	DD	imagerel ??_R1A@?0A@EA@?$IReaderBase@VIReader@@@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCompressedReader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCompressedReader@@8 DD imagerel ??_R0?AVCCompressedReader@@@8 ; CCompressedReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCompressedReader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCompressedReader@@@8
_DATA	SEGMENT
??_R0?AVCCompressedReader@@@8 DQ FLAT:??_7type_info@@6B@ ; CCompressedReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCCompressedReader@@', 00H
_DATA	ENDS
;	COMDAT ??_7CFileReader@@6B@
CONST	SEGMENT
??_7CFileReader@@6B@ DQ FLAT:??_R4CFileReader@@6B@	; CFileReader::`vftable'
	DQ	FLAT:??_ECFileReader@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CFileReader@@6B@
rdata$r	SEGMENT
??_R4CFileReader@@6B@ DD 01H				; CFileReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCFileReader@@@8
	DD	imagerel ??_R3CFileReader@@8
	DD	imagerel ??_R4CFileReader@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CFileReader@@8
rdata$r	SEGMENT
??_R3CFileReader@@8 DD 00H				; CFileReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CFileReader@@8
rdata$r	ENDS
;	COMDAT ??_R2CFileReader@@8
rdata$r	SEGMENT
??_R2CFileReader@@8 DD imagerel ??_R1A@?0A@EA@CFileReader@@8 ; CFileReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IReader@@8
	DD	imagerel ??_R1A@?0A@EA@?$IReaderBase@VIReader@@@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFileReader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileReader@@8 DD imagerel ??_R0?AVCFileReader@@@8 ; CFileReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CFileReader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileReader@@@8
_DATA	SEGMENT
??_R0?AVCFileReader@@@8 DQ FLAT:??_7type_info@@6B@	; CFileReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCFileReader@@', 00H
_DATA	ENDS
;	COMDAT ??_7CPackReader@@6B@
CONST	SEGMENT
??_7CPackReader@@6B@ DQ FLAT:??_R4CPackReader@@6B@	; CPackReader::`vftable'
	DQ	FLAT:??_ECPackReader@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CPackReader@@6B@
rdata$r	SEGMENT
??_R4CPackReader@@6B@ DD 01H				; CPackReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCPackReader@@@8
	DD	imagerel ??_R3CPackReader@@8
	DD	imagerel ??_R4CPackReader@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CPackReader@@8
rdata$r	SEGMENT
??_R3CPackReader@@8 DD 00H				; CPackReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CPackReader@@8
rdata$r	ENDS
;	COMDAT ??_R2CPackReader@@8
rdata$r	SEGMENT
??_R2CPackReader@@8 DD imagerel ??_R1A@?0A@EA@CPackReader@@8 ; CPackReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IReader@@8
	DD	imagerel ??_R1A@?0A@EA@?$IReaderBase@VIReader@@@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPackReader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPackReader@@8 DD imagerel ??_R0?AVCPackReader@@@8 ; CPackReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CPackReader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPackReader@@@8
_DATA	SEGMENT
??_R0?AVCPackReader@@@8 DQ FLAT:??_7type_info@@6B@	; CPackReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCPackReader@@', 00H
_DATA	ENDS
;	COMDAT ??_7CTempReader@@6B@
CONST	SEGMENT
??_7CTempReader@@6B@ DQ FLAT:??_R4CTempReader@@6B@	; CTempReader::`vftable'
	DQ	FLAT:??_ECTempReader@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CTempReader@@6B@
rdata$r	SEGMENT
??_R4CTempReader@@6B@ DD 01H				; CTempReader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCTempReader@@@8
	DD	imagerel ??_R3CTempReader@@8
	DD	imagerel ??_R4CTempReader@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CTempReader@@8
rdata$r	SEGMENT
??_R3CTempReader@@8 DD 00H				; CTempReader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CTempReader@@8
rdata$r	ENDS
;	COMDAT ??_R2CTempReader@@8
rdata$r	SEGMENT
??_R2CTempReader@@8 DD imagerel ??_R1A@?0A@EA@CTempReader@@8 ; CTempReader::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IReader@@8
	DD	imagerel ??_R1A@?0A@EA@?$IReaderBase@VIReader@@@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTempReader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTempReader@@8 DD imagerel ??_R0?AVCTempReader@@@8 ; CTempReader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CTempReader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTempReader@@@8
_DATA	SEGMENT
??_R0?AVCTempReader@@@8 DQ FLAT:??_7type_info@@6B@	; CTempReader `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCTempReader@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CH@JKOJKKOC@CVirtualFileReader?3?3CVirtualFile@
CONST	SEGMENT
??_C@_0CH@JKOJKKOC@CVirtualFileReader?3?3CVirtualFile@ DB 'CVirtualFileRe'
	DB	'ader::CVirtualFileReader', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PJOLNDGD@data?$AA@
CONST	SEGMENT
??_C@_04PJOLNDGD@data?$AA@ DB 'data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DODFDMMA@hSrcMap?$CB?$DNINVALID_HANDLE_VALUE?$AA@
CONST	SEGMENT
??_C@_0BO@DODFDMMA@hSrcMap?$CB?$DNINVALID_HANDLE_VALUE?$AA@ DB 'hSrcMap!='
	DB	'INVALID_HANDLE_VALUE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBKMHHBE@Size?$AA@
CONST	SEGMENT
??_C@_04EBKMHHBE@Size?$AA@ DB 'Size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JJGNJHJF@hSrcFile?$CB?$DNINVALID_HANDLE_VALUE?$AA@
CONST	SEGMENT
??_C@_0BP@JJGNJHJF@hSrcFile?$CB?$DNINVALID_HANDLE_VALUE?$AA@ DB 'hSrcFile'
	DB	'!=INVALID_HANDLE_VALUE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JFCPEDIH@CVirtualFileRW?3?3CVirtualFileRW?$AA@
CONST	SEGMENT
??_C@_0BP@JFCPEDIH@CVirtualFileRW?3?3CVirtualFileRW?$AA@ DB 'CVirtualFile'
	DB	'RW::CVirtualFileRW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09KHGJHDDP@sz?$DMtgt_sz?$AA@
CONST	SEGMENT
??_C@_09KHGJHDDP@sz?$DMtgt_sz?$AA@ DB 'sz<tgt_sz', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIDJIKAI@IReader?3?3r_stringZ?$AA@
CONST	SEGMENT
??_C@_0BD@HIDJIKAI@IReader?3?3r_stringZ?$AA@ DB 'IReader::r_stringZ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CCNJDAAG@sz?$DM?$CItgt_sz?91?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@CCNJDAAG@sz?$DM?$CItgt_sz?91?$CJ?$AA@ DB 'sz<(tgt_sz-1)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CBOGAODA@Dest?5string?5less?5than?5needed?4?$AA@
CONST	SEGMENT
??_C@_0BO@CBOGAODA@Dest?5string?5less?5than?5needed?4?$AA@ DB 'Dest strin'
	DB	'g less than needed.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFPNBCKC@IReader?3?3r_string?$AA@
CONST	SEGMENT
??_C@_0BC@LFPNBCKC@IReader?3?3r_string?$AA@ DB 'IReader::r_string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MHGJGJKA@strncmp?$CIM?0F?08?$CJ?$DN?$DN0?$AA@
CONST	SEGMENT
??_C@_0BC@MHGJGJKA@strncmp?$CIM?0F?08?$CJ?$DN?$DN0?$AA@ DB 'strncmp(M,F,8'
	DB	')==0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@HIOEDNGA@FATAL?3?5signatures?5doesn?8t?5match?0@
CONST	SEGMENT
??_C@_0DK@HIOEDNGA@FATAL?3?5signatures?5doesn?8t?5match?0@ DB 'FATAL: sig'
	DB	'natures doesn''t match, file(%s) / requested(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHGIJJCK@FileDecompress?$AA@
CONST	SEGMENT
??_C@_0P@MHGIJJCK@FileDecompress?$AA@ DB 'FileDecompress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HBKIKOFI@H?$DO0?$AA@
CONST	SEGMENT
??_C@_03HBKIKOFI@H?$DO0?$AA@ DB 'H>0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OHMAIPMK@FileCompress?$AA@
CONST	SEGMENT
??_C@_0N@OHMAIPMK@FileCompress?$AA@ DB 'FileCompress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OMBPCKBP@r_bytes?$DN?$DN?$CIint?$CJsize?$AA@
CONST	SEGMENT
??_C@_0BD@OMBPCKBP@r_bytes?$DN?$DN?$CIint?$CJsize?$AA@ DB 'r_bytes==(int)'
	DB	'size', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MHEELJOF@Can?8t?5read?5file?5data?3?$AA@
CONST	SEGMENT
??_C@_0BG@MHEELJOF@Can?8t?5read?5file?5data?3?$AA@ DB 'Can''t read file d'
	DB	'ata:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07DAHKOGFN@hFile?$DO0?$AA@
CONST	SEGMENT
??_C@_07DAHKOGFN@hFile?$DO0?$AA@ DB 'hFile>0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ODPOMCLF@FS?4cpp?$AA@
CONST	SEGMENT
??_C@_06ODPOMCLF@FS?4cpp?$AA@ DB 'FS.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NDJPHIGH@FileDownload?$AA@
CONST	SEGMENT
??_C@_0N@NDJPHIGH@FileDownload?$AA@ DB 'FileDownload', 00H ; `string'
EPS_S	DD	033d6bf95r			; 1e-007
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Y?$_Vector_const_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	add	QWORD PTR [rcx], -4

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@I@std@@YA$$QEAIAEAI@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@I@std@@YA$$QEAIAEAI@Z PROC			; std::forward<unsigned int>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@I@std@@YA$$QEAIAEAI@Z ENDP			; std::forward<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAI@std@@YAPEAIPEAI@Z
_TEXT	SEGMENT
??$_Val_type@PEAI@std@@YAPEAIPEAI@Z PROC		; std::_Val_type<unsigned int * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAI@std@@YAPEAIPEAI@Z ENDP		; std::_Val_type<unsigned int * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBI@std@@YAPEBIAEBI@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBI@std@@YAPEBIAEBI@Z PROC		; std::addressof<unsigned int const >, COMDAT

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	rax, rcx

; 112  : 	}

	ret	0
??$addressof@$$CBI@std@@YAPEBIAEBI@Z ENDP		; std::addressof<unsigned int const >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@IV?$xalloc@I@@@std@@IEBAXPEAI0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@IV?$xalloc@I@@@std@@IEBAXPEAI0@Z PROC ; std::vector<unsigned int,xalloc<unsigned int> >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@IV?$xalloc@I@@@std@@IEBAXPEAI0@Z ENDP ; std::vector<unsigned int,xalloc<unsigned int> >::_Orphan_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@IV?$xalloc@I@@@std@@IEBA_NPEBI@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@IV?$xalloc@I@@@std@@IEBA_NPEBI@Z PROC	; std::vector<unsigned int,xalloc<unsigned int> >::_Inside, COMDAT

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	cmp	rdx, QWORD PTR [rcx+8]
	jae	SHORT $LN3@Inside@4
	cmp	QWORD PTR [rcx], rdx
	ja	SHORT $LN3@Inside@4
	mov	al, 1

; 1287 : 		}

	ret	0
$LN3@Inside@4:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	xor	al, al

; 1287 : 		}

	ret	0
?_Inside@?$vector@IV?$xalloc@I@@@std@@IEBA_NPEBI@Z ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::_Inside
_TEXT	ENDS
PUBLIC	__real@3f800000
EXTRN	_fltused:DWORD
;	COMDAT __real@3f800000
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_vector3d.h
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?div@?$_vector3@M@@QEAAAEAU1@AEBU1@M@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
s$ = 24
?div@?$_vector3@M@@QEAAAEAU1@AEBU1@M@Z PROC		; _vector3<float>::div, COMDAT

; 47   : 	ICF SelfRef	div(const Self &a, T s)					{ x=a.x/s;  y=a.y/s;	z=a.z/s;		return *this;	};

	movss	xmm3, DWORD PTR __real@3f800000
	mov	rax, rcx
	divss	xmm3, xmm2
	movaps	xmm0, xmm3
	movaps	xmm1, xmm3
	mulss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR [rcx], xmm0
	mulss	xmm1, DWORD PTR [rdx+4]
	movss	DWORD PTR [rcx+4], xmm1
	mulss	xmm3, DWORD PTR [rdx+8]
	movss	DWORD PTR [rcx+8], xmm3
	ret	0
?div@?$_vector3@M@@QEAAAEAU1@AEBU1@M@Z ENDP		; _vector3<float>::div
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
_TEXT	ENDS
;	COMDAT ?is_term@@YAHD@Z
_TEXT	SEGMENT
a$ = 8
?is_term@@YAHD@Z PROC					; is_term, COMDAT

; 330  : IC BOOL			is_term		(char a) { return (a==13)||(a==10); };

	cmp	cl, 13
	je	SHORT $LN3@is_term
	cmp	cl, 10
	je	SHORT $LN3@is_term
	xor	eax, eax
	ret	0
$LN3@is_term:
	mov	eax, 1
	ret	0
?is_term@@YAHD@Z ENDP					; is_term
_TEXT	ENDS
PUBLIC	?VerifyPath@@YAXPEBD@Z				; VerifyPath
pdata	SEGMENT
$pdata$?VerifyPath@@YAXPEBD@Z DD imagerel $LN10
	DD	imagerel $LN10+25
	DD	imagerel $unwind$?VerifyPath@@YAXPEBD@Z
$pdata$1$?VerifyPath@@YAXPEBD@Z DD imagerel $LN10+25
	DD	imagerel $LN10+114
	DD	imagerel $chain$1$?VerifyPath@@YAXPEBD@Z
$pdata$2$?VerifyPath@@YAXPEBD@Z DD imagerel $LN10+114
	DD	imagerel $LN10+131
	DD	imagerel $chain$2$?VerifyPath@@YAXPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?VerifyPath@@YAXPEBD@Z DD 050f01H
	DD	088640fH
	DD	084010fH
	DD	07008H
$chain$1$?VerifyPath@@YAXPEBD@Z DD 040821H
	DD	0875408H
	DD	0863404H
	DD	imagerel $LN10
	DD	imagerel $LN10+25
	DD	imagerel $unwind$?VerifyPath@@YAXPEBD@Z
$chain$2$?VerifyPath@@YAXPEBD@Z DD 021H
	DD	imagerel $LN10
	DD	imagerel $LN10+25
	DD	imagerel $unwind$?VerifyPath@@YAXPEBD@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
tmp$ = 32
path$ = 1072
?VerifyPath@@YAXPEBD@Z PROC				; VerifyPath

; 77   : {

$LN10:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rsi
	push	rdi
	sub	rsp, 1056				; 00000420H

; 78   : 	string1024 tmp;
; 79   : 	for(int i=0;path[i];i++){

	xor	edi, edi
	mov	rsi, rcx
	cmp	BYTE PTR [rcx], dil
	je	SHORT $LN3@VerifyPath
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	lea	rbp, QWORD PTR tmp$[rsp]
	sub	rbp, rcx
	mov	rbx, rcx
	npad	4
$LL5@VerifyPath:

; 80   : 		if( path[i]!='\\' || i==0 )

	cmp	BYTE PTR [rbx], 92			; 0000005cH
	jne	SHORT $LN4@VerifyPath
	test	edi, edi
	je	SHORT $LN4@VerifyPath

; 81   : 			continue;
; 82   : 		CopyMemory( tmp, path, i );

	lea	rcx, QWORD PTR tmp$[rsp]
	movsxd	r8, edi
	mov	rdx, rsi
	call	memcpy

; 83   : 		tmp[i] = 0;
; 84   :         _mkdir(tmp);

	lea	rcx, QWORD PTR tmp$[rsp]
	mov	BYTE PTR [rbx+rbp], 0
	call	QWORD PTR __imp__mkdir
$LN4@VerifyPath:

; 78   : 	string1024 tmp;
; 79   : 	for(int i=0;path[i];i++){

	inc	rbx
	inc	edi
	cmp	BYTE PTR [rbx], 0
	jne	SHORT $LL5@VerifyPath
	mov	rbp, QWORD PTR [rsp+1080]
	mov	rbx, QWORD PTR [rsp+1072]
$LN3@VerifyPath:

; 85   : 	}
; 86   : }

	mov	rsi, QWORD PTR [rsp+1088]
	add	rsp, 1056				; 00000420H
	pop	rdi
	ret	0
?VerifyPath@@YAXPEBD@Z ENDP				; VerifyPath
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Y?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=, COMDAT

; 358  : 		*(_Mybase *)this += _Off;

	add	QWORD PTR [rcx], -4

; 359  : 		return (*this);

	mov	rax, rcx

; 360  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Z?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-=, COMDAT

; 370  : 		return (*this += -_Off);

	add	QWORD PTR [rcx], -4
	mov	rax, rcx

; 371  : 		}

	ret	0
??Z?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@IV?$xalloc@I@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@IV?$xalloc@I@@@std@@IEBA_K_K@Z PROC	; std::vector<unsigned int,xalloc<unsigned int> >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 2
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, r8
	jae	SHORT $LN4@Grow_to@7
	xor	r8d, r8d

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
$LN4@Grow_to@7:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	r8, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@IV?$xalloc@I@@@std@@IEBA_K_K@Z ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::_Grow_to
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??G?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-, COMDAT

; 375  : 		_Myiter _Tmp = *this;
; 376  : 		return (_Tmp -= _Off);

	mov	rax, QWORD PTR [rcx]
	sub	rax, 4
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 377  : 		}

	ret	0
??G?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBAAEAIXZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBAAEAIXZ PROC ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@IV?$xalloc@I@@@std@@@std@@QEBAAEAIXZ ENDP ; std::_Vector_iterator<std::_Vector_val<unsigned int,xalloc<unsigned int> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@IV?$xalloc@I@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?pop_back@?$vector@IV?$xalloc@I@@@std@@QEAAXXZ PROC	; std::vector<unsigned int,xalloc<unsigned int> >::pop_back, COMDAT

; 1017 : 		if (!empty())

	mov	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx], rax
	je	SHORT $LN1@pop_back

; 1018 : 			{	// erase last element
; 1019 : 			_Dest_val(this->_Alval,
; 1020 : 				this->_Mylast - 1);
; 1021 : 			--this->_Mylast;

	add	rax, -4
	mov	QWORD PTR [rcx+8], rax
$LN1@pop_back:

; 1022 : 			}
; 1023 : 		}

	fatret	0
?pop_back@?$vector@IV?$xalloc@I@@@std@@QEAAXXZ ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::pop_back
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?pop@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?pop@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXXZ PROC ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::pop, COMDAT

; 187  : 	void				pop				()									{c.pop_back(); }

	mov	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx], rax
	je	SHORT $LN3@pop
	add	rax, -4
	mov	QWORD PTR [rcx+8], rax
$LN3@pop:
	fatret	0
?pop@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXXZ ENDP ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::pop
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?magnitude@?$_vector3@M@@QEBAMXZ
_TEXT	SEGMENT
this$ = 8
?magnitude@?$_vector3@M@@QEBAMXZ PROC			; _vector3<float>::magnitude, COMDAT

; 172  : 		return _sqrt(square_magnitude());

	movss	xmm0, DWORD PTR [rcx+4]
	movss	xmm2, DWORD PTR [rcx]
	movss	xmm1, DWORD PTR [rcx+8]
	mulss	xmm2, xmm2
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	addss	xmm2, xmm0
	addss	xmm2, xmm1
	sqrtss	xmm0, xmm2

; 173  : 	}

	ret	0
?magnitude@?$_vector3@M@@QEBAMXZ ENDP			; _vector3<float>::magnitude
_TEXT	ENDS
PUBLIC	??1CVirtualFileReader@@UEAA@XZ			; CVirtualFileReader::~CVirtualFileReader
pdata	SEGMENT
$pdata$??1CVirtualFileReader@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+65
	DD	imagerel $unwind$??1CVirtualFileReader@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CVirtualFileReader@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CVirtualFileReader@@UEAA@XZ PROC			; CVirtualFileReader::~CVirtualFileReader

; 470  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CVirtualFileReader@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 471  : #ifdef DEBUG
; 472  : 	unregister_file_mapping	(data,Size);
; 473  : #endif // DEBUG
; 474  : 
; 475  : 	UnmapViewOfFile ((void*)data);

	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_UnmapViewOfFile

; 476  : 	CloseHandle		(hSrcMap);

	mov	rcx, QWORD PTR [rbx+40]
	call	QWORD PTR __imp_CloseHandle

; 477  : 	CloseHandle		(hSrcFile);

	mov	rcx, QWORD PTR [rbx+32]
	call	QWORD PTR __imp_CloseHandle

; 478  : }

	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CVirtualFileReader@@UEAA@XZ ENDP			; CVirtualFileReader::~CVirtualFileReader
_TEXT	ENDS
PUBLIC	??1CVirtualFileRW@@UEAA@XZ			; CVirtualFileRW::~CVirtualFileRW
pdata	SEGMENT
$pdata$??1CVirtualFileRW@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+65
	DD	imagerel $unwind$??1CVirtualFileRW@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CVirtualFileRW@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CVirtualFileRW@@UEAA@XZ PROC				; CVirtualFileRW::~CVirtualFileRW

; 440  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CVirtualFileRW@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 441  : #ifdef DEBUG
; 442  : 	unregister_file_mapping	(data,Size);
; 443  : #endif // DEBUG
; 444  : 
; 445  : 	UnmapViewOfFile ((void*)data);

	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_UnmapViewOfFile

; 446  : 	CloseHandle		(hSrcMap);

	mov	rcx, QWORD PTR [rbx+40]
	call	QWORD PTR __imp_CloseHandle

; 447  : 	CloseHandle		(hSrcFile);

	mov	rcx, QWORD PTR [rbx+32]
	call	QWORD PTR __imp_CloseHandle

; 448  : }

	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CVirtualFileRW@@UEAA@XZ ENDP				; CVirtualFileRW::~CVirtualFileRW
_TEXT	ENDS
PUBLIC	??1CPackReader@@UEAA@XZ				; CPackReader::~CPackReader
pdata	SEGMENT
$pdata$??1CPackReader@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+45
	DD	imagerel $unwind$??1CPackReader@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CPackReader@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CPackReader@@UEAA@XZ PROC				; CPackReader::~CPackReader

; 393  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CPackReader@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 394  : #ifdef DEBUG
; 395  : 	unregister_file_mapping	(base_address,Size);
; 396  : #endif // DEBUG
; 397  : 
; 398  : 	UnmapViewOfFile	(base_address);

	mov	rcx, QWORD PTR [rcx+32]
	call	QWORD PTR __imp_UnmapViewOfFile

; 399  : };

	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CPackReader@@UEAA@XZ ENDP				; CPackReader::~CPackReader
_TEXT	ENDS
PUBLIC	?r@IReader@@QEAAXPEAXH@Z			; IReader::r
pdata	SEGMENT
$pdata$?r@IReader@@QEAAXPEAXH@Z DD imagerel $LN13
	DD	imagerel $LN13+52
	DD	imagerel $unwind$?r@IReader@@QEAAXPEAXH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r@IReader@@QEAAXPEAXH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
p$ = 56
cnt$ = 64
?r@IReader@@QEAAXPEAXH@Z PROC				; IReader::r

; 316  : {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, rdx

; 317  : 	VERIFY				(Pos+cnt<=Size);
; 318  : 	CopyMemory		(p,pointer(),cnt);

	movsxd	rdx, DWORD PTR [rcx+16]
	movsxd	rdi, r8d
	add	rdx, QWORD PTR [rcx+8]
	mov	rbx, rcx
	mov	r8, rdi
	mov	rcx, rax
	call	memcpy

; 319  : 	advance				(cnt);

	add	DWORD PTR [rbx+16], edi

; 320  : #ifdef DEBUG
; 321  : 	BOOL	bShow		= FALSE		;
; 322  : 	if (dynamic_cast<CFileReader*>(this))			bShow = TRUE;
; 323  : 	if (dynamic_cast<CVirtualFileReader*>(this))	bShow = TRUE;
; 324  : 	if (bShow)			{
; 325  :   		FS.dwOpenCounter	++		;
; 326  : 	}
; 327  : #endif
; 328  : };

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?r@IReader@@QEAAXPEAXH@Z ENDP				; IReader::r
_TEXT	ENDS
PUBLIC	?w_printf@IWriter@@QEAAXPEBDZZ			; IWriter::w_printf
pdata	SEGMENT
$pdata$?w_printf@IWriter@@QEAAXPEBDZZ DD imagerel $LN5
	DD	imagerel $LN5+87
	DD	imagerel $unwind$?w_printf@IWriter@@QEAAXPEBDZZ
pdata	ENDS
xdata	SEGMENT
$unwind$?w_printf@IWriter@@QEAAXPEBDZZ DD 041801H
	DD	0850118H
	DD	030107011H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
buf$ = 32
this$ = 1088
format$ = 1096
?w_printf@IWriter@@QEAAXPEBDZZ PROC			; IWriter::w_printf

; 259  : {

$LN5:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rdx
	mov	QWORD PTR [rax+24], r8
	mov	QWORD PTR [rax+32], r9
	push	rbx
	push	rdi
	sub	rsp, 1064				; 00000428H
	mov	rbx, rcx

; 260  : 	va_list mark;
; 261  : 	char buf[1024];
; 262  : 	va_start( mark, format );

	lea	r8, QWORD PTR [rax+24]

; 263  : 	vsprintf( buf, format, mark );

	lea	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR __imp_vsprintf

; 264  : 	w		( buf, xr_strlen(buf) );

	mov	r11, QWORD PTR [rbx]
	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR buf$[rsp]
	lea	rdx, QWORD PTR buf$[rsp]
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	QWORD PTR [r11+24]

; 265  : }

	add	rsp, 1064				; 00000428H
	pop	rdi
	pop	rbx
	ret	0
?w_printf@IWriter@@QEAAXPEBDZZ ENDP			; IWriter::w_printf
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs_internal.h
_TEXT	ENDS
;	COMDAT ??0CTempReader@@QEAA@PEAXHH@Z
_TEXT	SEGMENT
this$ = 8
_data$ = 16
_size$ = 24
_iterpos$ = 32
??0CTempReader@@QEAA@PEAXHH@Z PROC			; CTempReader::CTempReader, COMDAT

; 77   : 				CTempReader(void *_data, int _size, int _iterpos) : IReader(_data,_size,_iterpos)	{}

	lea	rax, OFFSET FLAT:??_7CTempReader@@6B@
	mov	QWORD PTR [rcx+8], rdx
	mov	DWORD PTR [rcx+20], r8d
	mov	QWORD PTR [rcx], rax
	mov	DWORD PTR [rcx+16], 0
	mov	DWORD PTR [rcx+24], r9d
	mov	rax, rcx
	ret	0
??0CTempReader@@QEAA@PEAXHH@Z ENDP			; CTempReader::CTempReader
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$xalloc@I@@II@std@@YAXAEAV?$xalloc@I@@PEAI$$QEAI@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@I@@II@std@@YAXAEAV?$xalloc@I@@PEAI$$QEAI@Z PROC ; std::_Cons_val<xalloc<unsigned int>,unsigned int,unsigned int>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@16
	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
$LN9@Cons_val@16:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@I@@II@std@@YAXAEAV?$xalloc@I@@PEAI$$QEAI@Z ENDP ; std::_Cons_val<xalloc<unsigned int>,unsigned int,unsigned int>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+59
	DD	imagerel $unwind$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z+51
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T188895 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T188895[rsp], -2
	npad	3
$LL6@Uninit_mov@4:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_mov@4

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	mov	eax, DWORD PTR [rcx]
	test	r8, r8
	je	SHORT $LN22@Uninit_mov@4
	mov	DWORD PTR [r8], eax
$LN22@Uninit_mov@4:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 4
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 4
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_mov@4
$LN4@Uninit_mov@4:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, r8

; 438  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_mov@4:
??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T188895 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>, COMDAT

; 446  : 	{	// move [_First, _Last) to raw _Dest, using _Al, scalar type

$LN3:
	sub	rsp, 40					; 00000028H

; 447  : 	return (_Uninit_move(_First, _Last, _Dest,
; 448  : 		_Al, (_Valty *)0, _Nonscalar_ptr_iterator_tag()));

	call	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>

; 449  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PEAIPEAIV?$xalloc@I@@@std@@YAPEAIPEAI00AEAV?$xalloc@I@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAIPEAIV?$xalloc@I@@@std@@YAPEAIPEAI00AEAV?$xalloc@I@@@Z PROC ; std::_Uninitialized_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int> >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
??$_Uninitialized_move@PEAIPEAIV?$xalloc@I@@@std@@YAPEAIPEAI00AEAV?$xalloc@I@@@Z ENDP ; std::_Uninitialized_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD imagerel $LN28
	DD	imagerel $LN28+84
	DD	imagerel $unwind$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD imagerel $LN28+84
	DD	imagerel $LN28+134
	DD	imagerel $chain$0$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD imagerel $LN28+134
	DD	imagerel $LN28+145
	DD	imagerel $chain$1$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+84
	DD	imagerel $unwind$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN28
	DD	imagerel $LN28+84
	DD	imagerel $unwind$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z
_TEXT	SEGMENT
ptr$ = 48
??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z PROC ; xr_special_free<1,IReader>::operator(), COMDAT

; 131  : 	{

$LN28:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	rcx, QWORD PTR [rcx]
	call	__RTCastToVoid

; 133  : 		ptr->~T			();

	mov	rcx, QWORD PTR [rbx]
	xor	edx, edx
	mov	r8, QWORD PTR [rcx]

; 134  : 		Memory.mem_free	(_real_ptr);

	lea	rdi, QWORD PTR [rax-1]
	call	QWORD PTR [r8]
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi]
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN5@operator@21
	test	rdi, rdi
	je	SHORT $LN26@operator@21
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]

; 135  : 	}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_free

; 134  : 		Memory.mem_free	(_real_ptr);

$LN5@operator@21:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+48], rsi
	lea	rsi, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rsi+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rsi+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rsi+rbx*8]
	mov	QWORD PTR [rsi+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rsi, QWORD PTR [rsp+48]
$LN26@operator@21:

; 135  : 	}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z ENDP ; xr_special_free<1,IReader>::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAI@?$vector@IV?$xalloc@I@@@std@@IEAAPEAIPEAI00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAI@?$vector@IV?$xalloc@I@@@std@@IEAAPEAIPEAI00@Z PROC ; std::vector<unsigned int,xalloc<unsigned int> >::_Umove<unsigned int * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
??$_Umove@PEAI@?$vector@IV?$xalloc@I@@@std@@IEAAPEAIPEAI00@Z ENDP ; std::vector<unsigned int,xalloc<unsigned int> >::_Umove<unsigned int * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
pdata	SEGMENT
$pdata$??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z DD imagerel $LN4
	DD	imagerel $LN4+33
	DD	imagerel $unwind$??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z PROC	; xr_delete<IReader>, COMDAT

; 150  : {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 151  : 	if (ptr) 

	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	je	SHORT $LN1@xr_delete@3

; 152  : 	{
; 153  : 		xr_special_free<xrcore::is_polymorphic<T>::result,T>()(ptr);

	call	??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z ; xr_special_free<1,IReader>::operator()

; 154  : 		ptr = NULL;

	mov	QWORD PTR [rbx], 0
$LN1@xr_delete@3:

; 155  : 	}
; 156  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_delete@VIReader@@@@YAXAEAPEAVIReader@@@Z ENDP	; xr_delete<IReader>
_TEXT	ENDS
PUBLIC	?skip_stringZ@IReader@@QEAAXXZ			; IReader::skip_stringZ
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
_TEXT	SEGMENT
this$ = 8
?skip_stringZ@IReader@@QEAAXXZ PROC			; IReader::skip_stringZ

; 381  : 	char *src = (char *) data;

	mov	r9, QWORD PTR [rcx+8]

; 382  : 	while ((src[Pos]!=0) && (!eof())) Pos++;

	movsxd	rax, DWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+r9], 0
	je	SHORT $LN13@skip_strin
	mov	r8d, DWORD PTR [rcx+20]
$LL2@skip_strin:
	mov	edx, DWORD PTR [rcx+16]
	mov	eax, r8d
	sub	eax, edx
	test	eax, eax
	jle	SHORT $LN13@skip_strin
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rcx+16], eax
	cdqe
	cmp	BYTE PTR [rax+r9], 0
	jne	SHORT $LL2@skip_strin
$LN13@skip_strin:

; 383  : 	Pos		++;

	inc	DWORD PTR [rcx+16]

; 384  : };

	ret	0
?skip_stringZ@IReader@@QEAAXXZ ENDP			; IReader::skip_stringZ
_TEXT	ENDS
PUBLIC	?advance_term_string@IReader@@IEAAIXZ		; IReader::advance_term_string
; Function compile flags: /Ogtpy
;	COMDAT ?advance_term_string@IReader@@IEAAIXZ
_TEXT	SEGMENT
this$ = 8
?advance_term_string@IReader@@IEAAIXZ PROC		; IReader::advance_term_string, COMDAT

; 333  : 	u32 sz		= 0;
; 334  : 	char *src 	= (char *) data;
; 335  : 	while (!eof()) {

	mov	r10d, DWORD PTR [rcx+20]
	mov	r11, QWORD PTR [rcx+8]
	xor	r8d, r8d
	mov	eax, r10d
	mov	rdx, rcx
	sub	eax, DWORD PTR [rcx+16]
$LN47@advance_te:
	test	eax, eax
	jle	SHORT $LN42@advance_te

; 336  :         Pos++;

	inc	DWORD PTR [rdx+16]
	movsxd	rcx, DWORD PTR [rdx+16]

; 337  :         sz++;
; 338  : 		if (!eof()&&is_term(src[Pos])) {

	mov	eax, r10d
	sub	eax, ecx
	inc	r8d
	test	eax, eax
	jle	SHORT $LN3@advance_te
	movzx	r9d, BYTE PTR [rcx+r11]
	cmp	r9b, 13
	je	SHORT $LN35@advance_te
	cmp	r9b, 10
	je	SHORT $LN35@advance_te
$LN3@advance_te:

; 333  : 	u32 sz		= 0;
; 334  : 	char *src 	= (char *) data;
; 335  : 	while (!eof()) {

	mov	eax, r10d
	sub	eax, DWORD PTR [rdx+16]
	jmp	SHORT $LN47@advance_te
$LN35@advance_te:

; 339  :         	while(!eof()&&is_term(src[Pos])) Pos++;

	sub	r10d, ecx
	test	r10d, r10d
$LN45@advance_te:
	jle	SHORT $LN42@advance_te
	movsxd	rax, ecx
	movzx	r9d, BYTE PTR [rax+r11]
	cmp	r9b, 13
	je	SHORT $LN32@advance_te
	cmp	r9b, 10
	jne	SHORT $LN42@advance_te
$LN32@advance_te:
	inc	ecx
	mov	DWORD PTR [rdx+16], ecx
	mov	eax, DWORD PTR [rdx+20]
	sub	eax, ecx
	test	eax, eax
	jmp	SHORT $LN45@advance_te
$LN42@advance_te:

; 340  : 			break;
; 341  : 		}
; 342  : 	}
; 343  :     return sz;

	mov	eax, r8d

; 344  : }

	ret	0
?advance_term_string@IReader@@IEAAIXZ ENDP		; IReader::advance_term_string
_TEXT	ENDS
PUBLIC	?close@IReader@@QEAAXXZ				; IReader::close
pdata	SEGMENT
$pdata$?close@IReader@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+30
	DD	imagerel $unwind$?close@IReader@@QEAAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?close@IReader@@QEAAXXZ DD 010e01H
	DD	0420eH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?close@IReader@@QEAAXXZ PROC				; IReader::close

; 285  : {	xr_delete((IReader*)this); }

$LN7:
	test	rcx, rcx
	je	SHORT $LN6@close@2
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	lea	rcx, QWORD PTR this$[rsp]
	call	??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z ; xr_special_free<1,IReader>::operator()
	add	rsp, 40					; 00000028H
$LN6@close@2:
	fatret	0
?close@IReader@@QEAAXXZ ENDP				; IReader::close
_TEXT	ENDS
PUBLIC	?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z	; IWriter::w_sdir
pdata	SEGMENT
$pdata$?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z DD imagerel $LN21
	DD	imagerel $LN21+217
	DD	imagerel $unwind$?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z DD 041901H
	DD	036819H
	DD	030027206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
C$ = 32
$T189236 = 80
$T189228 = 80
this$ = 80
D$ = 88
?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z PROC		; IWriter::w_sdir

; 246  : {

$LN21:
	push	rbx
	sub	rsp, 64					; 00000040H

; 247  : 	Fvector C;
; 248  : 	float mag		= D.magnitude();

	movss	xmm3, DWORD PTR [rdx]
	movss	xmm0, DWORD PTR [rdx+4]
	movss	xmm1, DWORD PTR [rdx+8]
	movaps	XMMWORD PTR [rsp+48], xmm6
	mov	rbx, rcx
	movaps	xmm2, xmm3
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	mulss	xmm2, xmm3
	addss	xmm2, xmm0
	addss	xmm2, xmm1
	sqrtss	xmm6, xmm2

; 249  : 	if (mag>EPS_S)	{

	comiss	xmm6, DWORD PTR EPS_S
	jbe	SHORT $LN2@w_sdir

; 250  : 		C.div		(D,mag);

	movss	xmm2, DWORD PTR __real@3f800000
	divss	xmm2, xmm6
	movaps	xmm1, xmm2
	movaps	xmm0, xmm2
	mulss	xmm2, DWORD PTR [rdx+8]
	mulss	xmm1, DWORD PTR [rdx+4]
	mulss	xmm0, xmm3
	movss	DWORD PTR C$[rsp+8], xmm2
	movss	DWORD PTR C$[rsp], xmm0
	movss	DWORD PTR C$[rsp+4], xmm1

; 251  : 	} else {

	jmp	SHORT $LN1@w_sdir
$LN2@w_sdir:

; 252  : 		C.set		(0,0,1);

	xorps	xmm6, xmm6
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR C$[rsp], xmm6
	movss	DWORD PTR C$[rsp+4], xmm6
	movss	DWORD PTR C$[rsp+8], xmm0
$LN1@w_sdir:

; 253  : 		mag			= 0;
; 254  : 	}
; 255  : 	w_dir	(C);

	lea	rcx, QWORD PTR C$[rsp]
	call	?pvCompress@@YAGAEBU?$_vector3@M@@@Z	; pvCompress
	lea	rdx, QWORD PTR $T189228[rsp]
	mov	r8d, 2
	mov	WORD PTR $T189228[rsp], ax
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+24]

; 256  : 	w_float (mag);

	mov	rax, QWORD PTR [rbx]
	lea	rdx, QWORD PTR $T189236[rsp]
	movss	DWORD PTR $T189236[rsp], xmm6
	mov	r8d, 4
	mov	rcx, rbx
	call	QWORD PTR [rax+24]

; 257  : }

	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?w_sdir@IWriter@@QEAAXAEBU?$_vector3@M@@@Z ENDP		; IWriter::w_sdir
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?back@?$vector@IV?$xalloc@I@@@std@@QEAAAEAIXZ
_TEXT	SEGMENT
this$ = 8
?back@?$vector@IV?$xalloc@I@@@std@@QEAAAEAIXZ PROC	; std::vector<unsigned int,xalloc<unsigned int> >::back, COMDAT

; 967  : 		return (*(end() - 1));

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, 4

; 968  : 		}

	ret	0
?back@?$vector@IV?$xalloc@I@@@std@@QEAAAEAIXZ ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::back
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?top@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAAEAIXZ
_TEXT	SEGMENT
this$ = 8
?top@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAAEAIXZ PROC ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::top, COMDAT

; 184  : 	value_type&			top				()									{return (c.back()); }

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, 4
	ret	0
?top@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAAEAIXZ ENDP ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::top
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCVirtualFileReader@@UEAAPEAXI@Z DD imagerel $LN13
	DD	imagerel $LN13+99
	DD	imagerel $unwind$??_GCVirtualFileReader@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCVirtualFileReader@@UEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCVirtualFileReader@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T216130 = 48
this$ = 48
__flags$ = 56
??_GCVirtualFileReader@@UEAAPEAXI@Z PROC		; CVirtualFileReader::`scalar deleting destructor', COMDAT
$LN13:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CVirtualFileReader@@6B@
	mov	rdi, rcx
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_UnmapViewOfFile
	mov	rcx, QWORD PTR [rdi+40]
	call	QWORD PTR __imp_CloseHandle
	mov	rcx, QWORD PTR [rdi+32]
	call	QWORD PTR __imp_CloseHandle
	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rdi], r11
	test	bl, 1
	je	SHORT $LN12@scalar@9
	lea	rcx, QWORD PTR $T216130[rsp]
	mov	QWORD PTR $T216130[rsp], rdi
	call	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
$LN12@scalar@9:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCVirtualFileReader@@UEAAPEAXI@Z ENDP		; CVirtualFileReader::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CCompressedReader@@UEAA@XZ			; CCompressedReader::~CCompressedReader
pdata	SEGMENT
$pdata$??1CCompressedReader@@UEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+51
	DD	imagerel $unwind$??1CCompressedReader@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CCompressedReader@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CCompressedReader@@UEAA@XZ PROC			; CCompressedReader::~CCompressedReader

; 417  : {	xr_free(data);	};

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CCompressedReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	je	SHORT $LN12@CCompresse
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN12@CCompresse:
	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CCompressedReader@@UEAA@XZ ENDP			; CCompressedReader::~CCompressedReader
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCCompressedReader@@UEAAPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+86
	DD	imagerel $unwind$??_GCCompressedReader@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCCompressedReader@@UEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCCompressedReader@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T216196 = 48
this$ = 48
__flags$ = 56
??_GCCompressedReader@@UEAAPEAXI@Z PROC			; CCompressedReader::`scalar deleting destructor', COMDAT
$LN18:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CCompressedReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	mov	edi, edx
	je	SHORT $LN6@scalar@10
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN6@scalar@10:
	lea	rax, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], rax
	test	dil, 1
	je	SHORT $LN17@scalar@10
	lea	rcx, QWORD PTR $T216196[rsp]
	mov	QWORD PTR $T216196[rsp], rbx
	call	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
$LN17@scalar@10:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCCompressedReader@@UEAAPEAXI@Z ENDP			; CCompressedReader::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CFileReader@@UEAA@XZ				; CFileReader::~CFileReader
pdata	SEGMENT
$pdata$??1CFileReader@@UEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+51
	DD	imagerel $unwind$??1CFileReader@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CFileReader@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CFileReader@@UEAA@XZ PROC				; CFileReader::~CFileReader

; 408  : {	xr_free(data);	};

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CFileReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	je	SHORT $LN12@CFileReade
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN12@CFileReade:
	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CFileReader@@UEAA@XZ ENDP				; CFileReader::~CFileReader
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCFileReader@@UEAAPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+86
	DD	imagerel $unwind$??_GCFileReader@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCFileReader@@UEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCFileReader@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T216263 = 48
this$ = 48
__flags$ = 56
??_GCFileReader@@UEAAPEAXI@Z PROC			; CFileReader::`scalar deleting destructor', COMDAT
$LN18:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CFileReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	mov	edi, edx
	je	SHORT $LN6@scalar@11
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN6@scalar@11:
	lea	rax, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], rax
	test	dil, 1
	je	SHORT $LN17@scalar@11
	lea	rcx, QWORD PTR $T216263[rsp]
	mov	QWORD PTR $T216263[rsp], rbx
	call	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
$LN17@scalar@11:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCFileReader@@UEAAPEAXI@Z ENDP			; CFileReader::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CTempReader@@UEAA@XZ				; CTempReader::~CTempReader
pdata	SEGMENT
$pdata$??1CTempReader@@UEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+51
	DD	imagerel $unwind$??1CTempReader@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CTempReader@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CTempReader@@UEAA@XZ PROC				; CTempReader::~CTempReader

; 389  : {	xr_free(data);	};

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CTempReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	je	SHORT $LN12@CTempReade
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN12@CTempReade:
	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CTempReader@@UEAA@XZ ENDP				; CTempReader::~CTempReader
_TEXT	ENDS
PUBLIC	?chunk_size@IWriter@@QEAAIXZ			; IWriter::chunk_size
pdata	SEGMENT
$pdata$?chunk_size@IWriter@@QEAAIXZ DD imagerel $LN35
	DD	imagerel $LN35+55
	DD	imagerel $unwind$?chunk_size@IWriter@@QEAAIXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?chunk_size@IWriter@@QEAAIXZ DD 031a01H
	DD	04341aH
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?chunk_size@IWriter@@QEAAIXZ PROC			; IWriter::chunk_size

; 219  : {

$LN35:
	sub	rsp, 40					; 00000028H

; 220  : 	if (chunk_pos.empty())	return 0;

	mov	rax, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN1@chunk_size
	xor	eax, eax

; 222  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN1@chunk_size:
	mov	QWORD PTR [rsp+32], rbx

; 221  : 	return tell() - chunk_pos.top()-4;

	mov	rbx, rax
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	ecx, -4					; fffffffcH
	sub	ecx, DWORD PTR [rbx-4]
	mov	rbx, QWORD PTR [rsp+32]
	add	eax, ecx

; 222  : }

	add	rsp, 40					; 00000028H
	ret	0
?chunk_size@IWriter@@QEAAIXZ ENDP			; IWriter::chunk_size
_TEXT	ENDS
PUBLIC	?close_chunk@IWriter@@QEAAXXZ			; IWriter::close_chunk
pdata	SEGMENT
$pdata$?close_chunk@IWriter@@QEAAXXZ DD imagerel $LN69
	DD	imagerel $LN69+116
	DD	imagerel $unwind$?close_chunk@IWriter@@QEAAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?close_chunk@IWriter@@QEAAXXZ DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
$T216703 = 48
this$ = 48
?close_chunk@IWriter@@QEAAXXZ PROC			; IWriter::close_chunk

; 209  : {

$LN69:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 210  : 	VERIFY(!chunk_pos.empty());
; 211  : 
; 212  : 	int pos			= tell();

	mov	rax, QWORD PTR [rcx]
	mov	rdi, rcx
	call	QWORD PTR [rax+16]

; 213  : 	seek			(chunk_pos.top());

	mov	rdx, QWORD PTR [rdi+16]
	mov	r8, QWORD PTR [rdi]
	mov	edx, DWORD PTR [rdx-4]
	mov	rcx, rdi
	mov	ebx, eax
	call	QWORD PTR [r8+8]

; 214  : 	w_u32			(pos-chunk_pos.top()-4);

	mov	r11, QWORD PTR [rdi+16]
	mov	rax, QWORD PTR [rdi]
	mov	ecx, ebx
	lea	rdx, QWORD PTR $T216703[rsp]
	mov	r8d, 4
	sub	ecx, DWORD PTR [r11-4]
	sub	ecx, 4
	mov	DWORD PTR $T216703[rsp], ecx
	mov	rcx, rdi
	call	QWORD PTR [rax+24]

; 215  : 	seek			(pos);

	mov	r11, QWORD PTR [rdi]
	mov	edx, ebx
	mov	rcx, rdi
	call	QWORD PTR [r11+8]

; 216  : 	chunk_pos.pop	();

	mov	rax, QWORD PTR [rdi+16]
	cmp	QWORD PTR [rdi+8], rax
	je	SHORT $LN64@close_chun
	add	rax, -4
	mov	QWORD PTR [rdi+16], rax
$LN64@close_chun:

; 217  : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?close_chunk@IWriter@@QEAAXXZ ENDP			; IWriter::close_chunk
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCPackReader@@UEAAPEAXI@Z DD imagerel $LN13
	DD	imagerel $LN13+79
	DD	imagerel $unwind$??_GCPackReader@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCPackReader@@UEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCPackReader@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T216752 = 48
this$ = 48
__flags$ = 56
??_GCPackReader@@UEAAPEAXI@Z PROC			; CPackReader::`scalar deleting destructor', COMDAT
$LN13:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CPackReader@@6B@
	mov	rdi, rcx
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+32]
	call	QWORD PTR __imp_UnmapViewOfFile
	lea	r11, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rdi], r11
	test	bl, 1
	je	SHORT $LN12@scalar@12
	lea	rcx, QWORD PTR $T216752[rsp]
	mov	QWORD PTR $T216752[rsp], rdi
	call	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
$LN12@scalar@12:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCPackReader@@UEAAPEAXI@Z ENDP			; CPackReader::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCTempReader@@UEAAPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+86
	DD	imagerel $unwind$??_GCTempReader@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCTempReader@@UEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCTempReader@@UEAAPEAXI@Z
_TEXT	SEGMENT
$T216793 = 48
this$ = 48
__flags$ = 56
??_GCTempReader@@UEAAPEAXI@Z PROC			; CTempReader::`scalar deleting destructor', COMDAT
$LN18:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CTempReader@@6B@
	mov	rbx, rcx
	add	rcx, 8
	mov	QWORD PTR [rcx-8], rax
	cmp	QWORD PTR [rcx], 0
	mov	edi, edx
	je	SHORT $LN6@scalar@13
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN6@scalar@13:
	lea	rax, OFFSET FLAT:??_7?$IReaderBase@VIReader@@@@6B@
	mov	QWORD PTR [rbx], rax
	test	dil, 1
	je	SHORT $LN17@scalar@13
	lea	rcx, QWORD PTR $T216793[rsp]
	mov	QWORD PTR $T216793[rsp], rbx
	call	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
$LN17@scalar@13:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCTempReader@@UEAAPEAXI@Z ENDP			; CTempReader::`scalar deleting destructor'
PUBLIC	?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z	; IReader::r_stringZ
pdata	SEGMENT
$pdata$?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z DD imagerel $LN17
	DD	imagerel $LN17+117
	DD	imagerel $unwind$?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
dest$ = 56
?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z PROC	; IReader::r_stringZ

; 369  : {

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx

; 370  : 	dest		= (char*)(data+Pos);

	movsxd	rdx, DWORD PTR [rcx+16]
	mov	rbx, rcx
	add	rdx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR ?g_pStringContainer@@3PEAVstr_container@@EA ; g_pStringContainer
	call	?dock@str_container@@QEAAPEAUstr_value@@PEBD@Z ; str_container::dock
	test	rax, rax
	je	SHORT $LN5@r_stringZ
	inc	DWORD PTR [rax]
$LN5@r_stringZ:
	mov	rcx, QWORD PTR [rdi]
	xor	r8d, r8d
	test	rcx, rcx
	je	SHORT $LN8@r_stringZ
	dec	DWORD PTR [rcx]
	mov	rcx, QWORD PTR [rdi]
	cmp	DWORD PTR [rcx], r8d
	mov	rdx, rcx
	cmove	rdx, r8
	mov	QWORD PTR [rdi], rdx
$LN8@r_stringZ:
	mov	QWORD PTR [rdi], rax

; 371  :     Pos			+=(dest.size()+1);

	test	rax, rax
	jne	SHORT $LN13@r_stringZ
	lea	eax, DWORD PTR [r8+1]
	add	DWORD PTR [rbx+16], eax

; 372  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 371  :     Pos			+=(dest.size()+1);

$LN13@r_stringZ:
	mov	eax, DWORD PTR [rax+4]
	inc	eax
	add	DWORD PTR [rbx+16], eax

; 372  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?r_stringZ@IReader@@QEAAXAEAVshared_str@@@Z ENDP	; IReader::r_stringZ
PUBLIC	??0CVirtualFileReader@@QEAA@PEBD@Z		; CVirtualFileReader::CVirtualFileReader
pdata	SEGMENT
$pdata$??0CVirtualFileReader@@QEAA@PEBD@Z DD imagerel $LN45
	DD	imagerel $LN45+684
	DD	imagerel $unwind$??0CVirtualFileReader@@QEAA@PEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$??0CVirtualFileReader@@QEAA@PEBD@Z DD 0a1801H
	DD	0106418H
	DD	0f5418H
	DD	0e3418H
	DD	0d0149218H
	DD	07010c012H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 112
cFileName$ = 120
??0CVirtualFileReader@@QEAA@PEBD@Z PROC			; CVirtualFileReader::CVirtualFileReader

; 451  : {

$LN45:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 80					; 00000050H
	xor	esi, esi
	mov	rdi, rdx
	lea	rax, OFFSET FLAT:??_7CVirtualFileReader@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	mov	DWORD PTR [rcx+16], esi

; 452  : 	// Open the file
; 453  : 	hSrcFile		= CreateFile(cFileName, GENERIC_READ, FILE_SHARE_READ|FILE_SHARE_WRITE, 0, OPEN_EXISTING, 0, 0);

	mov	QWORD PTR [rsp+48], rsi
	lea	r8d, QWORD PTR [rsi+3]
	mov	rcx, rdi
	xor	r9d, r9d
	mov	edx, -2147483648			; 80000000H
	mov	DWORD PTR [rsp+40], esi
	mov	DWORD PTR [rsp+32], 3
	call	QWORD PTR __imp_CreateFileA

; 454  : 	R_ASSERT3		(hSrcFile!=INVALID_HANDLE_VALUE,cFileName,Debug.error2string(GetLastError()));

	lea	rbp, OFFSET FLAT:?desc_storage@?1??error2string@xrDebug@@QEAAPEBDJ@Z@4PADA
	mov	QWORD PTR [rbx+32], rax
	cmp	BYTE PTR ?ignore_always@?3???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA, sil
	lea	r12, OFFSET FLAT:??_C@_0CH@JKOJKKOC@CVirtualFileReader?3?3CVirtualFile@
	lea	r13, OFFSET FLAT:??_C@_06ODPOMCLF@FS?4cpp?$AA@
	jne	SHORT $LN15@CVirtualFi
	cmp	rax, -1
	jne	SHORT $LN15@CVirtualFi
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?3???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_0BP@JJGNJHJF@hSrcFile?$CB?$DNINVALID_HANDLE_VALUE?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 454			; 000001c6H
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN15@CVirtualFi:

; 455  : 	Size			= (int)GetFileSize(hSrcFile, NULL);

	mov	rcx, QWORD PTR [rbx+32]
	xor	edx, edx
	call	QWORD PTR __imp_GetFileSize
	mov	DWORD PTR [rbx+20], eax

; 456  : 	R_ASSERT3		(Size,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?7???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN11@CVirtualFi
	test	eax, eax
	jne	SHORT $LN11@CVirtualFi
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?7???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_04EBKMHHBE@Size?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 456			; 000001c8H
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN11@CVirtualFi:

; 457  : 
; 458  : 	hSrcMap			= CreateFileMapping (hSrcFile, 0, PAGE_READONLY, 0, 0, 0);

	mov	rcx, QWORD PTR [rbx+32]
	xor	r9d, r9d
	xor	edx, edx
	lea	r8d, QWORD PTR [r9+2]
	mov	QWORD PTR [rsp+40], rsi
	mov	DWORD PTR [rsp+32], esi
	call	QWORD PTR __imp_CreateFileMappingA
	mov	QWORD PTR [rbx+40], rax

; 459  : 	R_ASSERT3		(hSrcMap!=INVALID_HANDLE_VALUE,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?M@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN7@CVirtualFi
	cmp	rax, -1
	jne	SHORT $LN7@CVirtualFi
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?M@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_0BO@DODFDMMA@hSrcMap?$CB?$DNINVALID_HANDLE_VALUE?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 459			; 000001cbH
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN7@CVirtualFi:

; 460  : 
; 461  : 	data			= (char*)MapViewOfFile (hSrcMap, FILE_MAP_READ, 0, 0, 0);

	mov	rcx, QWORD PTR [rbx+40]
	xor	r9d, r9d
	xor	r8d, r8d
	lea	edx, QWORD PTR [r9+4]
	mov	QWORD PTR [rsp+32], rsi
	call	QWORD PTR __imp_MapViewOfFile
	mov	QWORD PTR [rbx+8], rax

; 462  : 	R_ASSERT3		(data,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?BA@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN43@CVirtualFi
	test	rax, rax
	jne	SHORT $LN43@CVirtualFi
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?BA@???0CVirtualFileReader@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_04PJOLNDGD@data?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 462			; 000001ceH
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN43@CVirtualFi:

; 463  : 
; 464  : #ifdef DEBUG
; 465  : 	register_file_mapping	(data,Size,cFileName);
; 466  : #endif // DEBUG
; 467  : }

	mov	rbp, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??0CVirtualFileReader@@QEAA@PEBD@Z ENDP			; CVirtualFileReader::CVirtualFileReader
_TEXT	ENDS
PUBLIC	??0CVirtualFileRW@@QEAA@PEBD@Z			; CVirtualFileRW::CVirtualFileRW
pdata	SEGMENT
$pdata$??0CVirtualFileRW@@QEAA@PEBD@Z DD imagerel $LN45
	DD	imagerel $LN45+685
	DD	imagerel $unwind$??0CVirtualFileRW@@QEAA@PEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$??0CVirtualFileRW@@QEAA@PEBD@Z DD 0a1801H
	DD	0106418H
	DD	0f5418H
	DD	0e3418H
	DD	0d0149218H
	DD	07010c012H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 112
cFileName$ = 120
??0CVirtualFileRW@@QEAA@PEBD@Z PROC			; CVirtualFileRW::CVirtualFileRW

; 421  : {

$LN45:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 80					; 00000050H
	xor	esi, esi
	mov	rdi, rdx
	lea	rax, OFFSET FLAT:??_7CVirtualFileRW@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	mov	DWORD PTR [rcx+16], esi

; 422  : 	// Open the file
; 423  : 	hSrcFile		= CreateFile(cFileName, GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ, 0, OPEN_EXISTING, 0, 0);

	mov	QWORD PTR [rsp+48], rsi
	lea	r8d, QWORD PTR [rsi+1]
	mov	rcx, rdi
	xor	r9d, r9d
	mov	edx, -1073741824			; c0000000H
	mov	DWORD PTR [rsp+40], esi
	mov	DWORD PTR [rsp+32], 3
	call	QWORD PTR __imp_CreateFileA

; 424  : 	R_ASSERT3		(hSrcFile!=INVALID_HANDLE_VALUE,cFileName,Debug.error2string(GetLastError()));

	lea	rbp, OFFSET FLAT:?desc_storage@?1??error2string@xrDebug@@QEAAPEBDJ@Z@4PADA
	mov	QWORD PTR [rbx+32], rax
	cmp	BYTE PTR ?ignore_always@?3???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA, sil
	lea	r12, OFFSET FLAT:??_C@_0BP@JFCPEDIH@CVirtualFileRW?3?3CVirtualFileRW?$AA@
	lea	r13, OFFSET FLAT:??_C@_06ODPOMCLF@FS?4cpp?$AA@
	jne	SHORT $LN15@CVirtualFi@2
	cmp	rax, -1
	jne	SHORT $LN15@CVirtualFi@2
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?3???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_0BP@JJGNJHJF@hSrcFile?$CB?$DNINVALID_HANDLE_VALUE?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 424			; 000001a8H
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN15@CVirtualFi@2:

; 425  : 	Size			= (int)GetFileSize(hSrcFile, NULL);

	mov	rcx, QWORD PTR [rbx+32]
	xor	edx, edx
	call	QWORD PTR __imp_GetFileSize
	mov	DWORD PTR [rbx+20], eax

; 426  : 	R_ASSERT3		(Size,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?7???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN11@CVirtualFi@2
	test	eax, eax
	jne	SHORT $LN11@CVirtualFi@2
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?7???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_04EBKMHHBE@Size?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 426			; 000001aaH
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN11@CVirtualFi@2:

; 427  : 
; 428  : 	hSrcMap			= CreateFileMapping (hSrcFile, 0, PAGE_READWRITE, 0, 0, 0);

	mov	rcx, QWORD PTR [rbx+32]
	xor	r9d, r9d
	xor	edx, edx
	lea	r8d, QWORD PTR [r9+4]
	mov	QWORD PTR [rsp+40], rsi
	mov	DWORD PTR [rsp+32], esi
	call	QWORD PTR __imp_CreateFileMappingA
	mov	QWORD PTR [rbx+40], rax

; 429  : 	R_ASSERT3		(hSrcMap!=INVALID_HANDLE_VALUE,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?M@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN7@CVirtualFi@2
	cmp	rax, -1
	jne	SHORT $LN7@CVirtualFi@2
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?M@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_0BO@DODFDMMA@hSrcMap?$CB?$DNINVALID_HANDLE_VALUE?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 429			; 000001adH
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN7@CVirtualFi@2:

; 430  : 
; 431  : 	data			= (char*)MapViewOfFile (hSrcMap, FILE_MAP_ALL_ACCESS, 0, 0, 0);

	mov	rcx, QWORD PTR [rbx+40]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 983071				; 000f001fH
	mov	QWORD PTR [rsp+32], rsi
	call	QWORD PTR __imp_MapViewOfFile
	mov	QWORD PTR [rbx+8], rax

; 432  : 	R_ASSERT3		(data,cFileName,Debug.error2string(GetLastError()));

	cmp	BYTE PTR ?ignore_always@?BA@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA, sil
	jne	SHORT $LN43@CVirtualFi@2
	test	rax, rax
	jne	SHORT $LN43@CVirtualFi@2
	call	QWORD PTR __imp_GetLastError
	mov	QWORD PTR [rsp+48], rsi
	xor	r9d, r9d
	xor	edx, edx
	mov	ecx, 4096				; 00001000H
	mov	r8d, eax
	mov	DWORD PTR [rsp+40], 1023		; 000003ffH
	mov	QWORD PTR [rsp+32], rbp
	call	QWORD PTR __imp_FormatMessageA
	lea	r11, OFFSET FLAT:?ignore_always@?BA@???0CVirtualFileRW@@QEAA@PEBD@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_04PJOLNDGD@data?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], r11
	mov	QWORD PTR [rsp+56], r12
	mov	DWORD PTR [rsp+48], 432			; 000001b0H
	mov	r9, rbp
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], rsi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN43@CVirtualFi@2:

; 433  : 
; 434  : #ifdef DEBUG
; 435  : 	register_file_mapping	(data,Size,cFileName);
; 436  : #endif // DEBUG
; 437  : }

	mov	rbp, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??0CVirtualFileRW@@QEAA@PEBD@Z ENDP			; CVirtualFileRW::CVirtualFileRW
_TEXT	ENDS
PUBLIC	?r_stringZ@IReader@@QEAAXPEADI@Z		; IReader::r_stringZ
pdata	SEGMENT
$pdata$?r_stringZ@IReader@@QEAAXPEADI@Z DD imagerel $LN23
	DD	imagerel $LN23+39
	DD	imagerel $unwind$?r_stringZ@IReader@@QEAAXPEADI@Z
$pdata$0$?r_stringZ@IReader@@QEAAXPEADI@Z DD imagerel $LN23+39
	DD	imagerel $LN23+65
	DD	imagerel $chain$0$?r_stringZ@IReader@@QEAAXPEADI@Z
$pdata$1$?r_stringZ@IReader@@QEAAXPEADI@Z DD imagerel $LN23+65
	DD	imagerel $LN23+218
	DD	imagerel $chain$1$?r_stringZ@IReader@@QEAAXPEADI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r_stringZ@IReader@@QEAAXPEADI@Z DD 061001H
	DD	0e5410H
	DD	0d3410H
	DD	0600c9210H
$chain$0$?r_stringZ@IReader@@QEAAXPEADI@Z DD 020421H
	DD	0c7404H
	DD	imagerel $LN23
	DD	imagerel $LN23+39
	DD	imagerel $unwind$?r_stringZ@IReader@@QEAAXPEADI@Z
$chain$1$?r_stringZ@IReader@@QEAAXPEADI@Z DD 021H
	DD	imagerel $LN23
	DD	imagerel $LN23+39
	DD	imagerel $unwind$?r_stringZ@IReader@@QEAAXPEADI@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 96
dest$ = 104
tgt_sz$ = 112
?r_stringZ@IReader@@QEAAXPEADI@Z PROC			; IReader::r_stringZ

; 360  : {

$LN23:
	mov	r11, rsp
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11+24], rbp
	push	rsi
	sub	rsp, 80					; 00000050H

; 363  :     R_ASSERT2(sz<tgt_sz,"Dest string less than needed.");

	cmp	BYTE PTR ?ignore_always@?3??r_stringZ@IReader@@QEAAXPEADI@Z@4_NA, 0
	mov	rbp, QWORD PTR [rcx+8]
	mov	rsi, rdx
	mov	rbx, rcx
	jne	SHORT $LN5@r_stringZ@2

; 361  : 	char *src 	= (char *) data;
; 362  : 	u32 sz 		= xr_strlen(src);

	or	rcx, -1
	mov	QWORD PTR [r11+8], rdi
	xor	eax, eax
	mov	rdi, rbp
	repne scasb
	mov	rdi, QWORD PTR [r11+8]
	not	rcx
	dec	rcx

; 363  :     R_ASSERT2(sz<tgt_sz,"Dest string less than needed.");

	cmp	ecx, r8d
	jb	SHORT $LN5@r_stringZ@2
	lea	rax, OFFSET FLAT:?ignore_always@?3??r_stringZ@IReader@@QEAAXPEADI@Z@4_NA
	lea	r8, OFFSET FLAT:??_C@_0BO@CBOGAODA@Dest?5string?5less?5than?5needed?4?$AA@
	lea	rdx, OFFSET FLAT:??_C@_09KHGJHDDP@sz?$DMtgt_sz?$AA@
	mov	QWORD PTR [r11-24], rax
	lea	rax, OFFSET FLAT:??_C@_0BD@HIDJIKAI@IReader?3?3r_stringZ?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [r11-32], rax
	lea	rax, OFFSET FLAT:??_C@_06ODPOMCLF@FS?4cpp?$AA@
	mov	DWORD PTR [rsp+48], 363			; 0000016bH
	mov	QWORD PTR [r11-48], rax
	xor	r9d, r9d
	mov	QWORD PTR [r11-56], 0
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN5@r_stringZ@2:

; 364  : 	while ((src[Pos]!=0) && (!eof())) *dest++ = src[Pos++];

	movsxd	rax, DWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+rbp], 0
	je	SHORT $LN21@r_stringZ@2
	npad	7
$LL2@r_stringZ@2:
	movsxd	rcx, DWORD PTR [rbx+16]
	mov	eax, DWORD PTR [rbx+20]
	sub	eax, ecx
	test	eax, eax
	jle	SHORT $LN21@r_stringZ@2
	movzx	ecx, BYTE PTR [rcx+rbp]
	inc	rsi
	mov	BYTE PTR [rsi-1], cl
	inc	DWORD PTR [rbx+16]
	movsxd	rax, DWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+rbp], 0
	jne	SHORT $LL2@r_stringZ@2
$LN21@r_stringZ@2:

; 365  : 	*dest		=	0;
; 366  : 	Pos++;
; 367  : }

	mov	rbp, QWORD PTR [rsp+112]
	mov	BYTE PTR [rsi], 0
	inc	DWORD PTR [rbx+16]
	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rsi
	ret	0
?r_stringZ@IReader@@QEAAXPEADI@Z ENDP			; IReader::r_stringZ
_TEXT	ENDS
PUBLIC	?r_string@IReader@@QEAAXPEADI@Z			; IReader::r_string
pdata	SEGMENT
$pdata$?r_string@IReader@@QEAAXPEADI@Z DD imagerel $LN9
	DD	imagerel $LN9+179
	DD	imagerel $unwind$?r_string@IReader@@QEAAXPEADI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r_string@IReader@@QEAAXPEADI@Z DD 081401H
	DD	0e6414H
	DD	0d5414H
	DD	0c3414H
	DD	070109214H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 96
dest$ = 104
tgt_sz$ = 112
?r_string@IReader@@QEAAXPEADI@Z PROC			; IReader::r_string

; 346  : {

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 80					; 00000050H

; 347  : 	char *src 	= (char *) data+Pos;

	movsxd	rbp, DWORD PTR [rcx+16]
	mov	esi, r8d
	mov	rdi, rdx
	add	rbp, QWORD PTR [rcx+8]

; 348  : 	u32 sz 		= advance_term_string();

	call	?advance_term_string@IReader@@IEAAIXZ	; IReader::advance_term_string

; 349  :     R_ASSERT2(sz<(tgt_sz-1),"Dest string less than needed.");

	cmp	BYTE PTR ?ignore_always@?3??r_string@IReader@@QEAAXPEADI@Z@4_NA, 0
	mov	ebx, eax
	jne	SHORT $LN3@r_string
	lea	ecx, DWORD PTR [rsi-1]
	cmp	ebx, ecx
	jb	SHORT $LN3@r_string
	lea	rax, OFFSET FLAT:?ignore_always@?3??r_string@IReader@@QEAAXPEADI@Z@4_NA
	lea	r8, OFFSET FLAT:??_C@_0BO@CBOGAODA@Dest?5string?5less?5than?5needed?4?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0O@CCNJDAAG@sz?$DM?$CItgt_sz?91?$CJ?$AA@
	mov	QWORD PTR [rsp+64], rax
	lea	rax, OFFSET FLAT:??_C@_0BC@LFPNBCKC@IReader?3?3r_string?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:??_C@_06ODPOMCLF@FS?4cpp?$AA@
	mov	DWORD PTR [rsp+48], 349			; 0000015dH
	mov	QWORD PTR [rsp+40], rax
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], 0
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN3@r_string:

; 350  :     strncpy		(dest,src,sz);

	mov	r8, rbx
	mov	rdx, rbp
	mov	rcx, rdi
	call	QWORD PTR __imp_strncpy

; 351  :     dest[sz]	= 0;
; 352  : }

	mov	rbp, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	mov	BYTE PTR [rbx+rdi], 0
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?r_string@IReader@@QEAAXPEADI@Z ENDP			; IReader::r_string
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h
pdata	SEGMENT
$pdata$??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z DD imagerel $LN11
	DD	imagerel $LN11+114
	DD	imagerel $unwind$??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z
_TEXT	SEGMENT
p1$ = 48
p2$ = 56
p3$ = 64
??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z PROC ; xr_new<IReader,void * __ptr64,unsigned int,unsigned int>, COMDAT

; 85   : IC	T*		xr_new		(const P1& p1, const P2& p2, const P3& p3) {

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rdi, rdx

; 86   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 32					; 00000020H
	mov	rbx, r8
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 87   : 	return new (ptr) T(p1,p2,p3);

	test	rax, rax
	je	SHORT $LN3@xr_new@14
	mov	rcx, QWORD PTR [rsi]
	mov	r8d, DWORD PTR [rbx]
	lea	rdx, OFFSET FLAT:??_7IReader@@6B@
	mov	QWORD PTR [rax+8], rcx
	mov	ecx, DWORD PTR [rdi]
	mov	QWORD PTR [rax], rdx
	mov	DWORD PTR [rax+16], 0
	mov	DWORD PTR [rax+24], r8d
	mov	DWORD PTR [rax+20], ecx

; 88   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@xr_new@14:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_new@VIReader@@PEAXII@@YAPEAVIReader@@AEBQEAXAEBI1@Z ENDP ; xr_new<IReader,void * __ptr64,unsigned int,unsigned int>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h
pdata	SEGMENT
$pdata$??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z DD imagerel $LN13
	DD	imagerel $LN13+114
	DD	imagerel $unwind$??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z
_TEXT	SEGMENT
p1$ = 48
p2$ = 56
p3$ = 64
??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z PROC ; xr_new<CTempReader,unsigned char * __ptr64,unsigned int,unsigned int>, COMDAT

; 85   : IC	T*		xr_new		(const P1& p1, const P2& p2, const P3& p3) {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rdi, rdx

; 86   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 32					; 00000020H
	mov	rbx, r8
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 87   : 	return new (ptr) T(p1,p2,p3);

	test	rax, rax
	je	SHORT $LN3@xr_new@15
	mov	r8d, DWORD PTR [rbx]
	mov	rcx, QWORD PTR [rsi]
	mov	DWORD PTR [rax+16], 0
	mov	QWORD PTR [rax+8], rcx
	mov	ecx, DWORD PTR [rdi]
	mov	DWORD PTR [rax+24], r8d
	mov	DWORD PTR [rax+20], ecx
	lea	rcx, OFFSET FLAT:??_7CTempReader@@6B@
	mov	QWORD PTR [rax], rcx

; 88   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@xr_new@15:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_new@VCTempReader@@PEAEII@@YAPEAVCTempReader@@AEBQEAEAEBI1@Z ENDP ; xr_new<CTempReader,unsigned char * __ptr64,unsigned int,unsigned int>
_TEXT	ENDS
PUBLIC	??1CMemoryWriter@@UEAA@XZ			; CMemoryWriter::~CMemoryWriter
pdata	SEGMENT
$pdata$??1CMemoryWriter@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+48
	DD	imagerel $unwind$??1CMemoryWriter@@UEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1CMemoryWriter@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
??1CMemoryWriter@@UEAA@XZ PROC				; CMemoryWriter::~CMemoryWriter

; 165  : {	xr_free(data);	}

$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CMemoryWriter@@6B@
	mov	rbx, rcx
	add	rcx, 48					; 00000030H
	mov	QWORD PTR [rcx-48], rax
	cmp	QWORD PTR [rcx], 0
	je	SHORT $LN3@CMemoryWri
	call	??$xr_free@E@@YAXAEAPEAE@Z		; xr_free<unsigned char>
$LN3@CMemoryWri:
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1IWriter@@UEAA@XZ			; IWriter::~IWriter
??1CMemoryWriter@@UEAA@XZ ENDP				; CMemoryWriter::~CMemoryWriter
_TEXT	ENDS
PUBLIC	?FileDownload@@YAPEAXPEBDPEAI@Z			; FileDownload
pdata	SEGMENT
$pdata$?FileDownload@@YAPEAXPEBDPEAI@Z DD imagerel $LN18
	DD	imagerel $LN18+358
	DD	imagerel $unwind$?FileDownload@@YAPEAXPEBDPEAI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FileDownload@@YAPEAXPEBDPEAI@Z DD 0c1e01H
	DD	011741eH
	DD	010641eH
	DD	0f541eH
	DD	0e341eH
	DD	0f01a921eH
	DD	0c016e018H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
fn$ = 112
pdwSize$ = 120
?FileDownload@@YAPEAXPEBDPEAI@Z PROC			; FileDownload

; 88   : {

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rbp, rdx

; 89   : 	int		hFile;
; 90   : 	u32		size;
; 91   : 	void*	buf;
; 92   : 
; 93   : #ifdef _EDITOR
; 94   : 	hFile	= _open(fn,O_RDONLY|O_BINARY|O_SEQUENTIAL);
; 95   : #else
; 96   : 	hFile	= _open(fn,O_RDONLY|O_BINARY|O_SEQUENTIAL,_S_IREAD);

	mov	r8d, 256				; 00000100H
	mov	edx, 32800				; 00008020H
	mov	rsi, rcx
	call	QWORD PTR __imp_?_open@@YAHPEBDHH@Z
	mov	ebx, eax

; 97   : #endif
; 98   : 	if (hFile<=0)	{

	test	eax, eax
	jg	SHORT $LN9@FileDownlo

; 99   : 		Sleep	(1);

	mov	ecx, 1
	call	QWORD PTR __imp_Sleep

; 100  : #ifdef _EDITOR
; 101  : 		hFile	= _open(fn,O_RDONLY|O_BINARY|O_SEQUENTIAL);
; 102  : #else
; 103  : 		hFile	= _open(fn,O_RDONLY|O_BINARY|O_SEQUENTIAL,_S_IREAD);

	mov	edx, 32800				; 00008020H
	mov	r8d, 256				; 00000100H
	mov	rcx, rsi
	call	QWORD PTR __imp_?_open@@YAHPEBDHH@Z
	mov	ebx, eax
$LN9@FileDownlo:

; 104  : #endif
; 105  : 	}
; 106  : 	R_ASSERT2(hFile>0,fn);

	cmp	BYTE PTR ?ignore_always@?6??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA, 0
	lea	r14, OFFSET FLAT:??_C@_0N@NDJPHIGH@FileDownload?$AA@
	lea	r15, OFFSET FLAT:??_C@_06ODPOMCLF@FS?4cpp?$AA@
	jne	SHORT $LN8@FileDownlo
	test	ebx, ebx
	jg	SHORT $LN8@FileDownlo
	lea	rax, OFFSET FLAT:?ignore_always@?6??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA
	lea	rdx, OFFSET FLAT:??_C@_07DAHKOGFN@hFile?$DO0?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], r14
	mov	DWORD PTR [rsp+48], 106			; 0000006aH
	xor	r9d, r9d
	mov	r8, rsi
	mov	QWORD PTR [rsp+40], r15
	mov	QWORD PTR [rsp+32], 0
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN8@FileDownlo:

; 107  : #ifdef _EDITOR
; 108  : 	size	= filelength(hFile);
; 109  : #else
; 110  : 	size	= _filelength(hFile);

	mov	ecx, ebx
	call	QWORD PTR __imp__filelength

; 111  : #endif
; 112  : 
; 113  : 	buf		= Memory.mem_alloc	(size
; 114  : #ifdef DEBUG_MEMORY_NAME
; 115  : 		,"FILE in memory"
; 116  : #endif // DEBUG_MEMORY_NAME
; 117  : 		);

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, eax
	mov	r12d, eax
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 118  : 	int r_bytes	= _read	(hFile,buf,size);

	mov	r8d, r12d
	mov	ecx, ebx
	mov	rdx, rax
	mov	rdi, rax
	call	QWORD PTR __imp__read

; 119  : 	R_ASSERT3(r_bytes==(int)size,"Can't read file data:",fn);

	cmp	BYTE PTR ?ignore_always@?L@??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA, 0
	jne	SHORT $LN4@FileDownlo
	cmp	eax, r12d
	je	SHORT $LN4@FileDownlo
	lea	rax, OFFSET FLAT:?ignore_always@?L@??FileDownload@@YAPEAXPEBDPEAI@Z@4_NA
	lea	r8, OFFSET FLAT:??_C@_0BG@MHEELJOF@Can?8t?5read?5file?5data?3?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0BD@OMBPCKBP@r_bytes?$DN?$DN?$CIint?$CJsize?$AA@
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], r14
	mov	DWORD PTR [rsp+48], 119			; 00000077H
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	r9, rsi
	mov	QWORD PTR [rsp+40], r15
	mov	QWORD PTR [rsp+32], 0
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN4@FileDownlo:

; 120  : 	_close	(hFile);

	mov	ecx, ebx
	call	QWORD PTR __imp__close

; 122  : 	return buf;

	mov	rax, rdi
	test	rbp, rbp
	je	SHORT $LN1@FileDownlo

; 121  : 	if (pdwSize) *pdwSize = size;

	mov	DWORD PTR [rbp], r12d
$LN1@FileDownlo:

; 123  : }

	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	ret	0
?FileDownload@@YAPEAXPEBDPEAI@Z ENDP			; FileDownload
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD imagerel $LN44
	DD	imagerel $LN44+198
	DD	imagerel $unwind$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z+107
	DD	00H
	DD	imagerel ?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z+123
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T310384 = 32
this$ = 64
$T310372 = 72
$T310365 = 72
_Ptr$97704 = 72
_Count$ = 72
?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z PROC	; std::vector<unsigned int,xalloc<unsigned int> >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN44:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T310384[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rdi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve@9

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve@9:

; 749  : 		else if (capacity() < _Count)

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 2
	cmp	rax, rdx
	jae	SHORT $LN3@reserve@9

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	edx, edx
	shl	rdx, 2
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rsi, rax
	mov	QWORD PTR _Ptr$97704[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAIPEAIV?$xalloc@I@@I@std@@YAPEAIPEAI00AEAV?$xalloc@I@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int * __ptr64,unsigned int * __ptr64,xalloc<unsigned int>,unsigned int>
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	rax, QWORD PTR [rbx]
	mov	r12, QWORD PTR [rbx+8]
	sub	r12, rax
	sar	r12, 2

; 761  : 			if (this->_Myfirst != 0)

	test	rax, rax
	je	SHORT $LN39@reserve@9

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	QWORD PTR $T310372[rsp], rax
	lea	rcx, QWORD PTR $T310372[rsp]
	call	??$xr_free@I@@YAXAEAPEAI@Z		; xr_free<unsigned int>
$LN39@reserve@9:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	lea	rax, QWORD PTR [rsi+rdi*4]
	mov	QWORD PTR [rbx+16], rax

; 770  : 			this->_Mylast = _Ptr + _Size;

	lea	rax, QWORD PTR [rsi+r12*4]
	mov	QWORD PTR [rbx+8], rax

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], rsi
$LN3@reserve@9:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN43@reserve@9:
?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T310384 = 32
this$ = 64
$T310372 = 72
$T310365 = 72
_Ptr$97704 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<unsigned int,xalloc<unsigned int> >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rax, QWORD PTR _Ptr$97704[rbp]
	mov	QWORD PTR $T310365[rbp], rax
	lea	rcx, QWORD PTR $T310365[rbp]
	call	??$xr_free@I@@YAXAEAPEAI@Z		; xr_free<unsigned int>

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<unsigned int,xalloc<unsigned int> >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+137
	DD	imagerel $unwind$?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z PROC	; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	rax, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	mov	r9, rcx
	sub	r8, rax

; 1292 : 		if (max_size() - _Count < _Size)

	mov	rcx, 4611686018427387902		; 3ffffffffffffffeH
	sar	r8, 2
	cmp	r8, rcx
	jbe	SHORT $LN4@Reserve@8

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve@8:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	mov	rdx, QWORD PTR [r9+16]
	inc	r8
	sub	rdx, rax
	sar	rdx, 2
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve@8

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rcx, rdx
	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN21@Reserve@8
	xor	edx, edx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve@8:
	add	rdx, rcx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@IV?$xalloc@I@@@std@@QEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::reserve
$LN1@Reserve@8:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve@8:
?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ENDP	; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z DD imagerel $LN48
	DD	imagerel $LN48+130
	DD	imagerel $unwind$?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z PROC ; std::vector<unsigned int,xalloc<unsigned int> >::push_back, COMDAT

; 976  : 		{	// insert element at end

$LN48:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 977  : 		if (_Inside(_STD addressof(_Val)))

	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	rdx, rax
	jae	SHORT $LN4@push_back@6
	mov	rcx, QWORD PTR [rcx]
	cmp	rcx, rdx
	ja	SHORT $LN4@push_back@6

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	sub	rdi, rcx
	sar	rdi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN3@push_back@6

; 981  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
$LN3@push_back@6:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN41@push_back@6
	mov	rax, QWORD PTR [rbx]
	mov	ecx, DWORD PTR [rax+rdi*4]
	mov	DWORD PTR [rdx], ecx

; 996  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 4

; 997  : 			}
; 998  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@push_back@6:

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else
; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN1@push_back@6

; 991  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
$LN1@push_back@6:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN41@push_back@6
	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rcx], eax
$LN41@push_back@6:

; 996  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 4

; 997  : 			}
; 998  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z ENDP ; std::vector<unsigned int,xalloc<unsigned int> >::push_back
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?push@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXAEBI@Z
_TEXT	SEGMENT
this$ = 8
_X$ = 16
?push@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXAEBI@Z PROC ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::push, COMDAT

; 186  : 	void				push			(const value_type& _X)				{c.push_back(_X); }

	jmp	?push_back@?$vector@IV?$xalloc@I@@@std@@QEAAXAEBI@Z ; std::vector<unsigned int,xalloc<unsigned int> >::push_back
?push@?$xr_stack@IV?$xr_vector@IV?$xalloc@I@@@@@@QEAAXAEBI@Z ENDP ; xr_stack<unsigned int,xr_vector<unsigned int,xalloc<unsigned int> > >::push
_TEXT	ENDS
PUBLIC	??0CFileReader@@QEAA@PEBD@Z			; CFileReader::CFileReader
pdata	SEGMENT
$pdata$??0CFileReader@@QEAA@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+61
	DD	imagerel $unwind$??0CFileReader@@QEAA@PEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$??0CFileReader@@QEAA@PEBD@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
name$ = 56
??0CFileReader@@QEAA@PEBD@Z PROC			; CFileReader::CFileReader

; 403  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	DWORD PTR [rcx+16], 0
	mov	rax, rdx
	lea	rcx, OFFSET FLAT:??_7CFileReader@@6B@

; 404  :     data	= (char *)FileDownload(name,(u32 *)&Size);

	lea	rdx, QWORD PTR [rbx+20]
	mov	QWORD PTR [rbx], rcx
	mov	rcx, rax
	call	?FileDownload@@YAPEAXPEBDPEAI@Z		; FileDownload

; 405  :     Pos		= 0;

	mov	DWORD PTR [rbx+16], 0
	mov	QWORD PTR [rbx+8], rax

; 406  : };

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0CFileReader@@QEAA@PEBD@Z ENDP			; CFileReader::CFileReader
_TEXT	ENDS
PUBLIC	?open_chunk@IWriter@@QEAAXI@Z			; IWriter::open_chunk
pdata	SEGMENT
$pdata$?open_chunk@IWriter@@QEAAXI@Z DD imagerel $LN56
	DD	imagerel $LN56+205
	DD	imagerel $unwind$?open_chunk@IWriter@@QEAAXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?open_chunk@IWriter@@QEAAXI@Z DD 060f01H
	DD	08640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
$T310885 = 56
$T310645 = 56
$T310641 = 56
type$ = 56
?open_chunk@IWriter@@QEAAXI@Z PROC			; IWriter::open_chunk

; 203  : {

$LN56:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 204  : 	w_u32(type);

	mov	rax, QWORD PTR [rcx]
	mov	DWORD PTR $T310645[rsp], edx
	lea	rdx, QWORD PTR $T310645[rsp]
	mov	r8d, 4
	mov	rsi, rcx
	call	QWORD PTR [rax+24]

; 205  : 	chunk_pos.push(tell());

	mov	r11, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [r11+16]
	mov	rdx, QWORD PTR [rsi+16]
	mov	edi, eax
	mov	DWORD PTR $T310641[rsp], eax
	lea	rax, QWORD PTR $T310641[rsp]
	cmp	rax, rdx
	jae	SHORT $LN10@open_chunk@2
	mov	rcx, QWORD PTR [rsi+8]
	lea	rax, QWORD PTR $T310641[rsp]
	cmp	rcx, rax
	ja	SHORT $LN10@open_chunk@2
	lea	rdi, QWORD PTR $T310641[rsp]
	sub	rdi, rcx
	sar	rdi, 2
	cmp	rdx, QWORD PTR [rsi+24]
	jne	SHORT $LN9@open_chunk@2
	lea	rcx, QWORD PTR [rsi+8]
	call	?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
$LN9@open_chunk@2:
	mov	rdx, QWORD PTR [rsi+16]
	test	rdx, rdx
	je	SHORT $LN47@open_chunk@2
	mov	rax, QWORD PTR [rsi+8]
	mov	ecx, DWORD PTR [rax+rdi*4]
	mov	DWORD PTR [rdx], ecx
	jmp	SHORT $LN47@open_chunk@2
$LN10@open_chunk@2:
	cmp	rdx, QWORD PTR [rsi+24]
	jne	SHORT $LN7@open_chunk@2
	lea	rcx, QWORD PTR [rsi+8]
	call	?_Reserve@?$vector@IV?$xalloc@I@@@std@@IEAAX_K@Z ; std::vector<unsigned int,xalloc<unsigned int> >::_Reserve
$LN7@open_chunk@2:
	mov	rax, QWORD PTR [rsi+16]
	test	rax, rax
	je	SHORT $LN47@open_chunk@2
	mov	DWORD PTR [rax], edi
$LN47@open_chunk@2:
	add	QWORD PTR [rsi+16], 4

; 206  : 	w_u32(0);	// the place for 'size'

	mov	rax, QWORD PTR [rsi]
	lea	rdx, QWORD PTR $T310885[rsp]
	mov	r8d, 4
	mov	rcx, rsi
	mov	DWORD PTR $T310885[rsp], 0
	call	QWORD PTR [rax+24]

; 207  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?open_chunk@IWriter@@QEAAXI@Z ENDP			; IWriter::open_chunk
_TEXT	ENDS
pdata	SEGMENT
$pdata$?w@CMemoryWriter@@UEAAXPEBXI@Z DD imagerel $LN13
	DD	imagerel $LN13+166
	DD	imagerel $unwind$?w@CMemoryWriter@@UEAAXPEBXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?w@CMemoryWriter@@UEAAXPEBXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
ptr$ = 56
count$ = 64
?w@CMemoryWriter@@UEAAXPEBXI@Z PROC			; CMemoryWriter::w

; 168  : {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 169  : 	if (position+count > mem_size) {

	mov	eax, DWORD PTR [rcx+56]
	mov	rbx, rcx
	mov	edi, r8d
	mov	r8d, DWORD PTR [rbx+60]
	lea	ecx, DWORD PTR [rdi+rax]
	mov	rsi, rdx
	cmp	ecx, r8d
	jbe	SHORT $LN2@w@2

; 170  : 		// reallocate
; 171  : 		if (mem_size==0)	mem_size=128;

	mov	edx, 128				; 00000080H
	test	r8d, r8d
	mov	eax, r8d
	cmove	eax, edx
	mov	DWORD PTR [rbx+60], eax

; 172  : 		while (mem_size <= (position+count)) mem_size*=2;

	mov	edx, eax
	cmp	eax, ecx
	ja	SHORT $LN4@w@2
	npad	2
$LL5@w@2:
	add	edx, edx
	mov	DWORD PTR [rbx+60], edx
	mov	eax, DWORD PTR [rbx+56]
	lea	ecx, DWORD PTR [rdi+rax]
	cmp	edx, ecx
	jbe	SHORT $LL5@w@2
$LN4@w@2:

; 173  : 		if (0==data)		data = (BYTE*)	Memory.mem_alloc	(mem_size

	mov	rdx, QWORD PTR [rbx+48]

; 174  : #ifdef DEBUG_MEMORY_NAME
; 175  : 			,		"CMemoryWriter - storage"
; 176  : #endif // DEBUG_MEMORY_NAME
; 177  : 			);

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	test	rdx, rdx
	jne	SHORT $LN3@w@2
	mov	edx, DWORD PTR [rbx+60]
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 178  : 		else				data = (BYTE*)	Memory.mem_realloc	(data,mem_size

	jmp	SHORT $LN12@w@2
$LN3@w@2:

; 179  : #ifdef DEBUG_MEMORY_NAME
; 180  : 			,	"CMemoryWriter - storage"
; 181  : #endif // DEBUG_MEMORY_NAME
; 182  : 			);

	mov	r8d, DWORD PTR [rbx+60]
	call	?mem_realloc@xrMemory@@QEAAPEAXPEAX_K@Z	; xrMemory::mem_realloc
$LN12@w@2:
	mov	QWORD PTR [rbx+48], rax
$LN2@w@2:

; 183  : 	}
; 184  : 	CopyMemory	(data+position,ptr,count);

	mov	ecx, DWORD PTR [rbx+56]
	mov	r8, rdi
	mov	rdx, rsi
	add	rcx, QWORD PTR [rbx+48]
	call	memcpy

; 185  : 	position		+=count;

	add	DWORD PTR [rbx+56], edi
	mov	eax, DWORD PTR [rbx+56]

; 186  : 	if (position>file_size) file_size=position;

	cmp	eax, DWORD PTR [rbx+64]
	jbe	SHORT $LN1@w@2
	mov	DWORD PTR [rbx+64], eax
$LN1@w@2:

; 187  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?w@CMemoryWriter@@UEAAXPEBXI@Z ENDP			; CMemoryWriter::w
PUBLIC	?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; IReader::r_stringZ
pdata	SEGMENT
$pdata$?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN11
	DD	imagerel $LN11+79
	DD	imagerel $unwind$?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
dest$ = 56
?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z PROC ; IReader::r_stringZ

; 374  : {

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, rdx

; 375  :     dest 		= (char*)(data+Pos);

	movsxd	rdx, DWORD PTR [rcx+16]
	add	rdx, QWORD PTR [rcx+8]
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 376  :     Pos			+=int(dest.size()+1);

	mov	edx, DWORD PTR [rbx+16]

; 377  : };

	mov	rbx, QWORD PTR [rsp+48]
	inc	edx
	add	DWORD PTR [rsi+16], edx
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?r_stringZ@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ENDP ; IReader::r_stringZ
_TEXT	ENDS
PUBLIC	?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; IReader::r_string
pdata	SEGMENT
$pdata$?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
dest$ = 56
?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z PROC ; IReader::r_string

; 354  : {

$LN3:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 355  : 	char *src 	= (char *) data+Pos;

	movsxd	rbx, DWORD PTR [rcx+16]
	mov	rdi, rdx
	add	rbx, QWORD PTR [rcx+8]

; 356  : 	u32 sz 		= advance_term_string();

	call	?advance_term_string@IReader@@IEAAIXZ	; IReader::advance_term_string

; 357  :     dest.assign	(src,sz);

	mov	rdx, rbx
	mov	r8d, eax
	mov	rcx, rdi

; 358  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
?r_string@IReader@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ENDP ; IReader::r_string
PUBLIC	?save_to@CMemoryWriter@@QEAA_NPEBD@Z		; CMemoryWriter::save_to
pdata	SEGMENT
$pdata$?save_to@CMemoryWriter@@QEAA_NPEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+156
	DD	imagerel $unwind$?save_to@CMemoryWriter@@QEAA_NPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?save_to@CMemoryWriter@@QEAA_NPEBD@Z DD 030901H
	DD	0460109H
	DD	03002H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
fname$341738 = 32
this$ = 576
fn$ = 584
F$ = 592
?save_to@CMemoryWriter@@QEAA_NPEBD@Z PROC		; CMemoryWriter::save_to

; 191  : {

$LN25:
	push	rbx
	sub	rsp, 560				; 00000230H
	mov	rbx, rcx

; 192  : 	IWriter* F 		= FS.w_open(fn);

	mov	r8, rdx
	lea	rcx, QWORD PTR fname$341738[rsp]
	mov	edx, 520				; 00000208H
	call	QWORD PTR __imp_strcpy_s
	lea	rcx, QWORD PTR fname$341738[rsp]
	call	QWORD PTR __imp_strlwr
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 56					; 00000038H
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	test	rax, rax
	je	SHORT $LN17@save_to
	lea	rdx, QWORD PTR fname$341738[rsp]
	xor	r8d, r8d
	mov	rcx, rax
	call	??0CFileWriter@@QEAA@PEBD_N@Z		; CFileWriter::CFileWriter
	mov	rcx, rax
	jmp	SHORT $LN18@save_to
$LN17@save_to:
	xor	ecx, ecx
$LN18@save_to:
	mov	QWORD PTR F$[rsp], rcx

; 193  :     if (F){

	test	rcx, rcx
	je	SHORT $LN1@save_to

; 194  : 	    F->w		(pointer(),size());

	mov	rax, QWORD PTR [rcx]
	mov	r8d, DWORD PTR [rbx+64]
	mov	rdx, QWORD PTR [rbx+48]
	call	QWORD PTR [rax+24]

; 195  :     	FS.w_close	(F);

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	rdx, QWORD PTR F$[rsp]
	call	?w_close@CLocatorAPI@@QEAAXAEAPEAVIWriter@@@Z ; CLocatorAPI::w_close

; 196  :         return 		true;

	mov	al, 1

; 199  : }

	add	rsp, 560				; 00000230H
	pop	rbx
	ret	0
$LN1@save_to:

; 197  :     }
; 198  :     return false;

	xor	al, al

; 199  : }

	add	rsp, 560				; 00000230H
	pop	rbx
	ret	0
?save_to@CMemoryWriter@@QEAA_NPEBD@Z ENDP		; CMemoryWriter::save_to
PUBLIC	?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z ; IReader::open_chunk_iterator
pdata	SEGMENT
$pdata$?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z DD imagerel $LN106
	DD	imagerel $LN106+328
	DD	imagerel $unwind$?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z DD 085901H
	DD	0a7459H
	DD	096454H
	DD	0c0053209H
	DD	030025003H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
$T348066 = 64
this$ = 64
ID$ = 72
_prev$ = 80
?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z PROC ; IReader::open_chunk_iterator

; 288  : {

$LN106:
	push	rbx
	push	rbp
	push	r12
	sub	rsp, 32					; 00000020H

; 289  : 	if (0==_prev)	{

	xor	r12d, r12d
	mov	rbp, rdx
	mov	rbx, rcx
	test	r8, r8
	jne	SHORT $LN5@open_chunk@4

; 290  : 		// first
; 291  : 		rewind		();

	mov	DWORD PTR [rcx+16], r12d

; 292  : 	} else {

	jmp	SHORT $LN24@open_chunk@4
$LN5@open_chunk@4:

; 293  : 		// next
; 294  : 		seek		(_prev->iterpos);

	mov	eax, DWORD PTR [r8+24]

; 295  : 		_prev->close();

	mov	QWORD PTR $T348066[rsp], r8
	mov	DWORD PTR [rcx+16], eax
	lea	rcx, QWORD PTR $T348066[rsp]
	call	??R?$xr_special_free@$00VIReader@@@@QEAAXAEAPEAVIReader@@@Z ; xr_special_free<1,IReader>::operator()
$LN24@open_chunk@4:

; 296  : 	}
; 297  : 
; 298  : 	//	open
; 299  : 	if			(elapsed()<8)	return		NULL;

	movsxd	rdx, DWORD PTR [rbx+16]
	mov	eax, DWORD PTR [rbx+20]
	sub	eax, edx
	cmp	eax, 8
	jge	SHORT $LN37@open_chunk@4
	xor	eax, eax

; 312  : 	}
; 313  : }

	add	rsp, 32					; 00000020H
	pop	r12
	pop	rbp
	pop	rbx
	ret	0

; 300  : 	ID			= r_u32	()		;

$LN37@open_chunk@4:
	mov	rax, rdx
	mov	QWORD PTR [rsp+72], rsi
	mov	QWORD PTR [rsp+80], rdi
	add	rax, QWORD PTR [rbx+8]
	mov	ecx, DWORD PTR [rax]
	lea	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [rbx+16], eax
	mov	DWORD PTR [rbp], ecx

; 301  : 	u32 _size	= r_u32	()		;

	movsxd	rcx, DWORD PTR [rbx+16]
	mov	rdx, QWORD PTR [rbx+8]
	lea	esi, DWORD PTR [rcx+4]
	mov	edi, DWORD PTR [rcx+rdx]
	mov	DWORD PTR [rbx+16], esi

; 302  : 	if ( ID & CFS_CompressMark )

	test	DWORD PTR [rbp], -2147483648		; 80000000H
	je	SHORT $LN2@open_chunk@4

; 303  : 	{
; 304  : 		// compressed
; 305  : 		u8*				dest	;
; 306  : 		unsigned		dest_sz	;
; 307  : 		_decompressLZ	(&dest,&dest_sz,pointer(),_size);

	movsxd	rcx, esi
	mov	QWORD PTR fs+8, r12
	mov	QWORD PTR fs, r12
	add	rcx, rdx
	mov	QWORD PTR fs+16, rcx
	mov	QWORD PTR fs+32, rcx
	lea	rax, QWORD PTR [rcx+rdi]
	mov	QWORD PTR fs+24, rax
	call	?Decode@@YAXXZ				; Decode
	mov	rbp, QWORD PTR fs+40
	mov	esi, DWORD PTR fs+56

; 308  : 		return xr_new<CTempReader>	(dest,		dest_sz,	tell()+_size);

	mov	ebx, DWORD PTR [rbx+16]
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 32					; 00000020H
	sub	esi, ebp
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	test	rax, rax
	je	SHORT $LN95@open_chunk@4
	lea	ecx, DWORD PTR [rbx+rdi]
	mov	QWORD PTR [rax+8], rbp
	mov	DWORD PTR [rax+20], esi
	mov	DWORD PTR [rax+24], ecx
	lea	rcx, OFFSET FLAT:??_7CTempReader@@6B@
	mov	QWORD PTR [rax], rcx

; 309  : 	} else {
; 310  : 		// normal
; 311  : 		return xr_new<IReader>		(pointer(),	_size,		tell()+_size);

	mov	DWORD PTR [rax+16], r12d
	jmp	SHORT $LN96@open_chunk@4
$LN2@open_chunk@4:
	movsxd	rbx, esi
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	add	rbx, rdx
	mov	edx, 32					; 00000020H
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	test	rax, rax
	je	SHORT $LN95@open_chunk@4
	lea	rcx, OFFSET FLAT:??_7IReader@@6B@
	mov	QWORD PTR [rax+8], rbx
	mov	DWORD PTR [rax+20], edi
	mov	QWORD PTR [rax], rcx
	lea	ecx, DWORD PTR [rsi+rdi]
	mov	DWORD PTR [rax+24], ecx
	mov	DWORD PTR [rax+16], r12d
	jmp	SHORT $LN96@open_chunk@4
$LN95@open_chunk@4:
	mov	rax, r12
$LN96@open_chunk@4:
	mov	rsi, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+80]

; 312  : 	}
; 313  : }

	add	rsp, 32					; 00000020H
	pop	r12
	pop	rbp
	pop	rbx
	ret	0
?open_chunk_iterator@IReader@@QEAAPEAV1@AEAIPEAV1@@Z ENDP ; IReader::open_chunk_iterator
_TEXT	ENDS
PUBLIC	?open_chunk@IReader@@QEAAPEAV1@I@Z		; IReader::open_chunk
pdata	SEGMENT
$pdata$?open_chunk@IReader@@QEAAPEAV1@I@Z DD imagerel $LN116
	DD	imagerel $LN116+146
	DD	imagerel $unwind$?open_chunk@IReader@@QEAAPEAV1@I@Z
$pdata$0$?open_chunk@IReader@@QEAAPEAV1@I@Z DD imagerel $LN116+146
	DD	imagerel $LN116+275
	DD	imagerel $chain$0$?open_chunk@IReader@@QEAAPEAV1@I@Z
$pdata$2$?open_chunk@IReader@@QEAAPEAV1@I@Z DD imagerel $LN116+275
	DD	imagerel $LN116+288
	DD	imagerel $chain$2$?open_chunk@IReader@@QEAAPEAV1@I@Z
$pdata$3$?open_chunk@IReader@@QEAAPEAV1@I@Z DD imagerel $LN116+288
	DD	imagerel $LN116+356
	DD	imagerel $chain$3$?open_chunk@IReader@@QEAAPEAV1@I@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?open_chunk@IReader@@QEAAPEAV1@I@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	073415H
	DD	0c0113215H
$chain$0$?open_chunk@IReader@@QEAAPEAV1@I@Z DD 020521H
	DD	065405H
	DD	imagerel $LN116
	DD	imagerel $LN116+146
	DD	imagerel $unwind$?open_chunk@IReader@@QEAAPEAV1@I@Z
$chain$2$?open_chunk@IReader@@QEAAPEAV1@I@Z DD 020021H
	DD	065400H
	DD	imagerel $LN116
	DD	imagerel $LN116+146
	DD	imagerel $unwind$?open_chunk@IReader@@QEAAPEAV1@I@Z
$chain$3$?open_chunk@IReader@@QEAAPEAV1@I@Z DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+146
	DD	imagerel $unwind$?open_chunk@IReader@@QEAAPEAV1@I@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
ID$ = 56
?open_chunk@IReader@@QEAAPEAV1@I@Z PROC			; IReader::open_chunk

; 270  : {

$LN116:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 32					; 00000020H

; 271  : 	BOOL	bCompressed;
; 272  : 	u32	dwSize = find_chunk(ID,&bCompressed);

	xor	r12d, r12d
	mov	r9d, edx
	mov	rbx, rcx
	mov	DWORD PTR [rcx+16], r12d
	cmp	DWORD PTR [rcx+20], r12d
	jle	SHORT $LN4@open_chunk@5
	mov	r8, QWORD PTR [rcx+8]
	npad	4
$LL14@open_chunk@5:
	movsxd	rdx, DWORD PTR [rbx+16]
	mov	ecx, DWORD PTR [rdx+r8]
	add	edx, 4
	movsxd	rax, edx
	mov	DWORD PTR [rbx+16], edx
	lea	esi, DWORD PTR [rdx+4]
	mov	edi, DWORD PTR [rax+r8]
	mov	eax, ecx
	mov	DWORD PTR [rbx+16], esi
	btr	eax, 31
	cmp	eax, r9d
	je	SHORT $LN115@open_chunk@5
	lea	ecx, DWORD PTR [rsi+rdi]
	mov	DWORD PTR [rbx+16], ecx
	mov	eax, DWORD PTR [rbx+20]
	sub	eax, ecx
	test	eax, eax
	jg	SHORT $LL14@open_chunk@5
$LN4@open_chunk@5:

; 281  : 		}
; 282  : 	} else return 0;

	xor	eax, eax
$LN1@open_chunk@5:

; 283  : };

	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
$LN115@open_chunk@5:

; 271  : 	BOOL	bCompressed;
; 272  : 	u32	dwSize = find_chunk(ID,&bCompressed);

	and	ecx, -2147483648			; ffffffff80000000H

; 273  : 	if (dwSize!=0) {

	test	edi, edi
	je	SHORT $LN4@open_chunk@5

; 274  : 		if (bCompressed) {

	test	ecx, ecx
	je	$LN3@open_chunk@5

; 275  : 			BYTE*		dest;
; 276  : 			unsigned	dest_sz;
; 277  : 			_decompressLZ(&dest,&dest_sz,pointer(),dwSize);

	movsxd	rcx, esi
	mov	QWORD PTR [rsp+48], rbp
	mov	QWORD PTR fs+8, r12
	add	rcx, r8
	mov	QWORD PTR fs, r12
	lea	rax, QWORD PTR [rcx+rdi]
	mov	QWORD PTR fs+16, rcx
	mov	QWORD PTR fs+32, rcx
	mov	QWORD PTR fs+24, rax
	call	?Decode@@YAXXZ				; Decode
	mov	rbp, QWORD PTR fs+40
	mov	esi, DWORD PTR fs+56

; 278  : 			return xr_new<CTempReader>	(dest,		dest_sz,		tell()+dwSize);

	mov	ebx, DWORD PTR [rbx+16]
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 32					; 00000020H
	sub	esi, ebp
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	test	rax, rax
	je	SHORT $LN89@open_chunk@5
	lea	ecx, DWORD PTR [rdi+rbx]
	mov	QWORD PTR [rax+8], rbp
	mov	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR [rax+24], ecx
	lea	rcx, OFFSET FLAT:??_7CTempReader@@6B@
	mov	DWORD PTR [rax+20], esi
	mov	QWORD PTR [rax], rcx
	mov	DWORD PTR [rax+16], r12d
	jmp	$LN1@open_chunk@5
$LN89@open_chunk@5:
	mov	rbp, QWORD PTR [rsp+48]
	mov	rax, r12
	jmp	$LN1@open_chunk@5
$LN3@open_chunk@5:

; 279  : 		} else {
; 280  : 			return xr_new<IReader>		(pointer(),	dwSize,			tell()+dwSize);

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	movsxd	rbx, esi
	mov	edx, 32					; 00000020H
	add	rbx, r8
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	test	rax, rax
	je	SHORT $LN105@open_chunk@5
	lea	rcx, OFFSET FLAT:??_7IReader@@6B@
	mov	QWORD PTR [rax+8], rbx
	mov	DWORD PTR [rax+20], edi
	mov	QWORD PTR [rax], rcx
	lea	ecx, DWORD PTR [rsi+rdi]
	mov	DWORD PTR [rax+16], r12d
	mov	DWORD PTR [rax+24], ecx
	jmp	$LN1@open_chunk@5
$LN105@open_chunk@5:
	mov	rax, r12
	jmp	$LN1@open_chunk@5
?open_chunk@IReader@@QEAAPEAV1@I@Z ENDP			; IReader::open_chunk
PUBLIC	?w_compressed@IWriter@@QEAAXPEAXI@Z		; IWriter::w_compressed
pdata	SEGMENT
$pdata$?w_compressed@IWriter@@QEAAXPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+165
	DD	imagerel $unwind$?w_compressed@IWriter@@QEAAXPEAXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?w_compressed@IWriter@@QEAAXPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
dest$ = 56
ptr$ = 56
dest_sz$ = 64
count$ = 64
?w_compressed@IWriter@@QEAAXPEAXI@Z PROC		; IWriter::w_compressed

; 225  : {

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 226  : 	BYTE*		dest	= 0;
; 227  : 	unsigned	dest_sz	= 0;
; 228  : 	_compressLZ	(&dest,&dest_sz,ptr,count);

	mov	eax, r8d
	mov	rdi, rcx
	xor	ecx, ecx
	add	rax, rdx
	mov	QWORD PTR fs+16, rdx
	mov	QWORD PTR fs+32, rdx
	mov	DWORD PTR dest_sz$[rsp], ecx
	mov	QWORD PTR fs+8, rcx
	mov	QWORD PTR fs, rcx
	mov	QWORD PTR fs+24, rax
	call	?Encode@@YAXXZ				; Encode
	mov	rbx, QWORD PTR fs+40
	mov	r8d, DWORD PTR fs+56

; 229  : 	
; 230  : 	if (g_dummy_stuff)

	mov	rax, QWORD PTR ?g_dummy_stuff@@3P6AXPEBXAEBIPEAX@ZEA ; g_dummy_stuff
	mov	QWORD PTR dest$[rsp], rbx
	sub	r8d, ebx
	mov	DWORD PTR dest_sz$[rsp], r8d
	test	rax, rax
	je	SHORT $LN2@w_compress

; 231  : 		g_dummy_stuff	(dest,dest_sz,dest);

	lea	rdx, QWORD PTR dest_sz$[rsp]
	mov	r8, rbx
	mov	rcx, rbx
	call	rax
	mov	r8d, DWORD PTR dest_sz$[rsp]
$LN2@w_compress:

; 232  : 
; 233  : 	if (dest && dest_sz)

	test	rbx, rbx
	je	SHORT $LN13@w_compress
	test	r8d, r8d
	je	SHORT $LN1@w_compress

; 234  : 		w(dest,dest_sz);

	mov	rax, QWORD PTR [rdi]
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR [rax+24]
$LN1@w_compress:

; 235  : 	xr_free		(dest);

	lea	rcx, QWORD PTR dest$[rsp]
	call	??$xr_free@E@@YAXAEAPEAE@Z		; xr_free<unsigned char>
$LN13@w_compress:

; 236  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?w_compressed@IWriter@@QEAAXPEAXI@Z ENDP		; IWriter::w_compressed
PUBLIC	?w_chunk@IWriter@@QEAAXIPEAXI@Z			; IWriter::w_chunk
pdata	SEGMENT
$pdata$?w_chunk@IWriter@@QEAAXIPEAXI@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$?w_chunk@IWriter@@QEAAXIPEAXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?w_chunk@IWriter@@QEAAXIPEAXI@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
type$ = 56
data$ = 64
size$ = 72
?w_chunk@IWriter@@QEAAXIPEAXI@Z PROC			; IWriter::w_chunk

; 239  : {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	esi, r9d
	mov	rbp, r8
	mov	ebx, edx
	mov	rdi, rcx

; 240  : 	open_chunk	(type);

	call	?open_chunk@IWriter@@QEAAXI@Z		; IWriter::open_chunk

; 241  : 	if (type & CFS_CompressMark)	w_compressed(data,size);

	mov	r8d, esi
	mov	rdx, rbp
	mov	rcx, rdi
	test	ebx, ebx
	jns	SHORT $LN2@w_chunk
	call	?w_compressed@IWriter@@QEAAXPEAXI@Z	; IWriter::w_compressed
	jmp	SHORT $LN1@w_chunk
$LN2@w_chunk:

; 242  : 	else							w			(data,size);

	mov	rax, QWORD PTR [rdi]
	call	QWORD PTR [rax+24]
$LN1@w_chunk:

; 243  : 	close_chunk	();

	mov	rcx, rdi

; 244  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?close_chunk@IWriter@@QEAAXXZ		; IWriter::close_chunk
?w_chunk@IWriter@@QEAAXIPEAXI@Z ENDP			; IWriter::w_chunk
END
