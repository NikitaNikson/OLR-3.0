; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?smem_search@@YA_NPEBUsmem_value@@0@Z		; smem_search
PUBLIC	??$_Dist_type@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YAPEA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ; std::_Dist_type<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
PUBLIC	??$_Distance2@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_JUrandom_access_iterator_tag@0@@Z ; std::_Distance2<smem_value * __ptr64 * __ptr64,__int64>
PUBLIC	??$_Distance@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_J@Z ; std::_Distance<smem_value * __ptr64 * __ptr64,__int64>
PUBLIC	??$_Iter_cat@PEAPEAUsmem_value@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEAUsmem_value@@@Z ; std::_Iter_cat<smem_value * __ptr64 * __ptr64>
PUBLIC	??$_Advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_JUrandom_access_iterator_tag@0@@Z ; std::_Advance<smem_value * __ptr64 * __ptr64,__int64>
PUBLIC	??$advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_J@Z ; std::advance<smem_value * __ptr64 * __ptr64,__int64>
PUBLIC	??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z ; std::_Lower_bound<smem_value * __ptr64 * __ptr64,smem_value * __ptr64,__int64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>
PUBLIC	??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
PUBLIC	??$forward@PEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z ; std::forward<smem_value * __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@PEAUsmem_value@@@@PEAUsmem_value@@PEAU2@@std@@YAXAEAV?$xalloc@PEAUsmem_value@@@@PEAPEAUsmem_value@@$$QEAPEAU2@@Z ; std::_Cons_val<xalloc<smem_value * __ptr64>,smem_value * __ptr64,smem_value * __ptr64>
PUBLIC	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
PUBLIC	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
PUBLIC	??$_Uninitialized_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@@Z ; std::_Uninitialized_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64> >
PUBLIC	??$_Umove@PEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAPEAPEAUsmem_value@@PEAPEAU2@00@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Umove<smem_value * __ptr64 * __ptr64>
PUBLIC	?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve
PUBLIC	?_Grow_to@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBA_K_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Grow_to
PUBLIC	?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBAXPEAPEAUsmem_value@@0@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Orphan_range
PUBLIC	??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace_back<smem_value * __ptr64 & __ptr64>
PUBLIC	??$_Dist_type@PEAPEAUsmem_value@@@std@@YAPEA_JPEAPEAUsmem_value@@@Z ; std::_Dist_type<smem_value * __ptr64 * __ptr64>
PUBLIC	??$_Val_type@PEAPEAUsmem_value@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@@Z ; std::_Val_type<smem_value * __ptr64 * __ptr64>
PUBLIC	??$swap@PEAUsmem_value@@@std@@YAXAEAPEAUsmem_value@@0@Z ; std::swap<smem_value * __ptr64>
PUBLIC	??$iter_swap@PEAPEAUsmem_value@@PEAPEAU1@@std@@YAXPEAPEAUsmem_value@@0@Z ; std::iter_swap<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64>
PUBLIC	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>
PUBLIC	??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64>
PUBLIC	??G?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
PUBLIC	??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0AEA_JUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
PUBLIC	??$distance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0@Z ; std::distance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
PUBLIC	??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=
PUBLIC	??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_JUrandom_access_iterator_tag@0@@Z ; std::_Advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
PUBLIC	??$advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_J@Z ; std::advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
PUBLIC	??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z ; std::rotate<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
PUBLIC	??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace<smem_value * __ptr64 & __ptr64>
PUBLIC	??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::insert<smem_value * __ptr64 & __ptr64>
PUBLIC	?empty@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEBA_NXZ ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::empty
PUBLIC	?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear
PUBLIC	??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z ; xr_free<smem_value>
PUBLIC	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAPEAPEAUsmem_value@@XZ ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Unchecked
PUBLIC	??$_Unchecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAPEAPEAUsmem_value@@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >
PUBLIC	?_Rechecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV12@PEAPEAUsmem_value@@@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Rechecked
PUBLIC	??$_Rechecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@AEAV10@PEAPEAUsmem_value@@@Z ; std::_Rechecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >
PUBLIC	??$_Find@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z ; std::_Find<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>
PUBLIC	??$find@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z ; std::find<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>
PUBLIC	??$_Move@AEAPEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z ; std::_Move<smem_value * __ptr64 & __ptr64>
PUBLIC	??$_Remove@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z ; std::_Remove<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>
PUBLIC	??$remove@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z ; std::remove<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAAEAPEAUsmem_value@@XZ ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAA?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++
PUBLIC	?g_pSharedMemoryContainer@@3PEAVsmem_container@@EA ; g_pSharedMemoryContainer
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BD@JJAGEJAN@x?3?2$smem_dump$?4txt?$AA@	; `string'
PUBLIC	??_C@_0BK@KPOBLFJH@?$CF4d?5?3?5crc?$FL?$CF6x?$FN?0?5?$CFd?5bytes?6?$AA@ ; `string'
EXTRN	__imp_fprintf:PROC
	ALIGN	8

?g_pSharedMemoryContainer@@3PEAVsmem_container@@EA DQ 01H DUP (?) ; g_pSharedMemoryContainer
;	COMDAT ??_C@_0BK@KPOBLFJH@?$CF4d?5?3?5crc?$FL?$CF6x?$FN?0?5?$CFd?5bytes?6?$AA@
CONST	SEGMENT
??_C@_0BK@KPOBLFJH@?$CF4d?5?3?5crc?$FL?$CF6x?$FN?0?5?$CFd?5bytes?6?$AA@ DB '%'
	DB	'4d : crc[%6x], %d bytes', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JJAGEJAN@x?3?2$smem_dump$?4txt?$AA@
CONST	SEGMENT
??_C@_0BD@JJAGEJAN@x?3?2$smem_dump$?4txt?$AA@ DB 'x:\$smem_dump$.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsharedmem.h
;	COMDAT ?smem_search@@YA_NPEBUsmem_value@@0@Z
_TEXT	SEGMENT
A$ = 8
B$ = 16
?smem_search@@YA_NPEBUsmem_value@@0@Z PROC		; smem_search, COMDAT

; 27   : 	if (A->dwCRC < B->dwCRC)			return		true;

	mov	eax, DWORD PTR [rcx+4]
	mov	r8d, DWORD PTR [rdx+4]
	mov	r9, rcx
	cmp	eax, r8d
	jae	SHORT $LN5@smem_searc
	mov	al, 1

; 30   : };

	ret	0
$LN5@smem_searc:

; 28   : 	if (A->dwCRC > B->dwCRC)			return		false;

	jbe	SHORT $LN1@smem_searc
	xor	al, al

; 30   : };

	ret	0
$LN1@smem_searc:

; 29   : 	return	A->dwLength < B->dwLength;

	mov	ecx, DWORD PTR [rdx+8]
	xor	eax, eax
	cmp	DWORD PTR [r9+8], ecx
	setb	al

; 30   : };

	ret	0
?smem_search@@YA_NPEBUsmem_value@@0@Z ENDP		; smem_search
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@PEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z PROC ; std::forward<smem_value * __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@PEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z ENDP ; std::forward<smem_value * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAPEAUsmem_value@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@@Z
_TEXT	SEGMENT
??$_Val_type@PEAPEAUsmem_value@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@@Z PROC ; std::_Val_type<smem_value * __ptr64 * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAPEAUsmem_value@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@@Z ENDP ; std::_Val_type<smem_value * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Dist_type@PEAPEAUsmem_value@@@std@@YAPEA_JPEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
??$_Dist_type@PEAPEAUsmem_value@@@std@@YAPEA_JPEAPEAUsmem_value@@@Z PROC ; std::_Dist_type<smem_value * __ptr64 * __ptr64>, COMDAT

; 850  : 	return (0);

	xor	eax, eax

; 851  : 	}

	ret	0
??$_Dist_type@PEAPEAUsmem_value@@@std@@YAPEA_JPEAPEAUsmem_value@@@Z ENDP ; std::_Dist_type<smem_value * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >, COMDAT

; 477  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 478  : 	return (_Cat);

	mov	rax, rcx

; 479  : 	}

	ret	0
??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$_Advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<smem_value * __ptr64 * __ptr64,__int64>, COMDAT

; 841  : 	_Where += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 842  : 	}

	ret	0
??$_Advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<smem_value * __ptr64 * __ptr64,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Off$ = 24
??$_Distance2@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<smem_value * __ptr64 * __ptr64,__int64>, COMDAT

; 886  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 887  : 	if (_First != _Last)
; 888  : 		{	// check for null pointers
; 889  : 		_DEBUG_POINTER(_First);
; 890  : 		_DEBUG_POINTER(_Last);
; 891  : 		}
; 892  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 893  : 
; 894  : 	_Off += _Last - _First;

	sub	rdx, rcx
	sar	rdx, 3
	add	QWORD PTR [r8], rdx

; 895  : 	}

	ret	0
??$_Distance2@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<smem_value * __ptr64 * __ptr64,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PEAPEAUsmem_value@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
??$_Iter_cat@PEAPEAUsmem_value@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEAUsmem_value@@@Z PROC ; std::_Iter_cat<smem_value * __ptr64 * __ptr64>, COMDAT

; 477  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 478  : 	return (_Cat);

	mov	rax, rcx

; 479  : 	}

	ret	0
??$_Iter_cat@PEAPEAUsmem_value@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEAUsmem_value@@@Z ENDP ; std::_Iter_cat<smem_value * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBAXPEAPEAUsmem_value@@0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBAXPEAPEAUsmem_value@@0@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBAXPEAPEAUsmem_value@@0@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Orphan_range
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$_Move@AEAPEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$_Move@AEAPEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z PROC ; std::_Move<smem_value * __ptr64 & __ptr64>, COMDAT

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 96   : 	}

	ret	0
??$_Move@AEAPEAUsmem_value@@@std@@YA$$QEAPEAUsmem_value@@AEAPEAU1@@Z ENDP ; std::_Move<smem_value * __ptr64 & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Find@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Val$ = 24
??$_Find@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z PROC ; std::_Find<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>, COMDAT

; 40   : 	for (; _First != _Last; ++_First)

	cmp	rcx, rdx
	je	SHORT $LN11@Find
	mov	rax, QWORD PTR [r8]
$LL4@Find:

; 41   : 		if (*_First == _Val)

	cmp	QWORD PTR [rcx], rax
	je	SHORT $LN11@Find

; 40   : 	for (; _First != _Last; ++_First)

	add	rcx, 8
	cmp	rcx, rdx
	jne	SHORT $LL4@Find
$LN11@Find:

; 42   : 			break;
; 43   : 	return (_First);

	mov	rax, rcx

; 44   : 	}

	ret	0
??$_Find@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z ENDP ; std::_Find<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_J@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_J@Z PROC ; std::advance<smem_value * __ptr64 * __ptr64,__int64>, COMDAT

; 798  : 	_Advance(_Where, _Off, _Iter_cat(_Where));

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 799  : 	}

	ret	0
??$advance@PEAPEAUsmem_value@@_J@std@@YAXAEAPEAPEAUsmem_value@@_J@Z ENDP ; std::advance<smem_value * __ptr64 * __ptr64,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_J@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Off$ = 24
??$_Distance@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_J@Z PROC ; std::_Distance<smem_value * __ptr64 * __ptr64,__int64>, COMDAT

; 910  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	sub	rdx, rcx
	sar	rdx, 3
	add	QWORD PTR [r8], rdx

; 911  : 	}

	ret	0
??$_Distance@PEAPEAUsmem_value@@_J@std@@YAXPEAPEAUsmem_value@@0AEA_J@Z ENDP ; std::_Distance<smem_value * __ptr64 * __ptr64,__int64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=, COMDAT

; 358  : 		*(_Mybase *)this += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 359  : 		return (*this);

	mov	rax, rcx

; 360  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+, COMDAT

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR [rax+r8*8]
	mov	rax, rdx
	mov	QWORD PTR [rdx], rcx

; 366  : 		}

	ret	0
??H?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAPEAPEAUsmem_value@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAPEAPEAUsmem_value@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Unchecked, COMDAT

; 317  : 		return (_Unchecked_type(this->_Ptr));

	mov	rax, QWORD PTR [rcx]

; 318  : 		}

	ret	0
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAPEAPEAUsmem_value@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Unchecked
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rechecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV12@PEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV12@PEAPEAUsmem_value@@@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Rechecked, COMDAT

; 311  : 		this->_Ptr = _Right;

	mov	QWORD PTR [rcx], rdx

; 312  : 		return (*this);

	mov	rax, rcx

; 313  : 		}

	ret	0
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV12@PEAPEAUsmem_value@@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::_Rechecked
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Remove@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Val$ = 24
??$_Remove@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z PROC ; std::_Remove<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>, COMDAT

; 1813 : 	_FwdIt _Next = _First;

	mov	rax, rcx

; 1814 : 	for (++_First; _First != _Last; ++_First)

	add	rcx, 8
	cmp	rcx, rdx
	je	SHORT $LN11@Remove
	npad	4
$LL4@Remove:

; 1815 : 		if (!(*_First == _Val))

	mov	r9, QWORD PTR [rcx]
	cmp	r9, QWORD PTR [r8]
	je	SHORT $LN3@Remove

; 1816 : 			*_Next++ = _Move(*_First);

	mov	QWORD PTR [rax], r9
	add	rax, 8
$LN3@Remove:

; 1814 : 	for (++_First; _First != _Last; ++_First)

	add	rcx, 8
	cmp	rcx, rdx
	jne	SHORT $LL4@Remove
$LN11@Remove:

; 1817 : 	return (_Next);
; 1818 : 	}

	fatret	0
??$_Remove@PEAPEAUsmem_value@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@@Z ENDP ; std::_Remove<smem_value * __ptr64 * __ptr64,smem_value * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Rechecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@AEAV10@PEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
_Iter$ = 8
_Right$ = 16
??$_Rechecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@AEAV10@PEAPEAUsmem_value@@@Z PROC ; std::_Rechecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >, COMDAT

; 403  : 	return (_Iter._Rechecked(_Right));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 404  : 	}

	ret	0
??$_Rechecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@AEAV10@PEAPEAUsmem_value@@@Z ENDP ; std::_Rechecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsharedmem.h
pdata	SEGMENT
$pdata$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD imagerel $LN26
	DD	imagerel $LN26+22
	DD	imagerel $unwind$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD imagerel $LN26+22
	DD	imagerel $LN26+126
	DD	imagerel $chain$1$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD imagerel $LN26+126
	DD	imagerel $LN26+134
	DD	imagerel $chain$2$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+22
	DD	imagerel $unwind$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD 040921H
	DD	07409H
	DD	023405H
	DD	imagerel $LN26
	DD	imagerel $LN26+22
	DD	imagerel $unwind$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z DD 010401H
	DD	0204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
xdata	ENDS
;	COMDAT ??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Val$ = 32
??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z PROC ; std::_Lower_bound<smem_value * __ptr64 * __ptr64,smem_value * __ptr64,__int64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>, COMDAT

; 2759 : 	{	// find first element not before _Val, using _Pred

$LN26:
	sub	rsp, 8
	mov	r9, rdx
	mov	r10, rcx

; 2760 : 	_Diff _Count = 0;
; 2761 : 	_Distance(_First, _Last, _Count);

	sub	r9, rcx
	sar	r9, 3

; 2762 : 	for (; 0 < _Count; )

	test	r9, r9
	jle	SHORT $LN25@Lower_boun

; 2767 : 
; 2768 : 		if (_Pred(*_Mid, _Val))

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp], rdi
	mov	rdi, QWORD PTR [r8]
	mov	ebx, DWORD PTR [rdi+4]
	npad	11
$LL4@Lower_boun:

; 2763 : 		{	// divide and conquer, find half that contains answer
; 2764 : 		_Diff _Count2 = _Count / 2;

	mov	rax, r9
	cdq
	sub	rax, rdx
	sar	rax, 1
	mov	rdx, rax

; 2765 : 		_FwdIt _Mid = _First;
; 2766 : 		_STD advance(_Mid, _Count2);

	lea	r8, QWORD PTR [r10+rax*8]

; 2767 : 
; 2768 : 		if (_Pred(*_Mid, _Val))

	mov	r11, QWORD PTR [r8]
	mov	eax, DWORD PTR [r11+4]
	cmp	eax, ebx
	jb	SHORT $LN24@Lower_boun
	ja	SHORT $LN2@Lower_boun
	mov	ecx, DWORD PTR [rdi+8]
	cmp	DWORD PTR [r11+8], ecx
	setb	cl
	test	cl, cl
	jne	SHORT $LN24@Lower_boun
$LN2@Lower_boun:

; 2773 : 			}
; 2774 : 		else
; 2775 : 			_Count = _Count2;

	mov	r9, rdx
	jmp	SHORT $LN1@Lower_boun
$LN24@Lower_boun:

; 2769 : //		if (_DEBUG_LT_PRED(_Pred, *_Mid, _Val))
; 2770 : 			{	// try top half
; 2771 : 			_First = ++_Mid;
; 2772 : 			_Count -= _Count2 + 1;

	or	rax, -1
	lea	r10, QWORD PTR [r8+8]
	sub	rax, rdx
	add	r9, rax
$LN1@Lower_boun:

; 2762 : 	for (; 0 < _Count; )

	test	r9, r9
	jg	SHORT $LL4@Lower_boun
	mov	rdi, QWORD PTR [rsp]
	mov	rbx, QWORD PTR [rsp+16]
$LN25@Lower_boun:

; 2776 : 		}
; 2777 : 	return (_First);

	mov	rax, r10

; 2778 : 	}

	add	rsp, 8
	ret	0
??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z ENDP ; std::_Lower_bound<smem_value * __ptr64 * __ptr64,smem_value * __ptr64,__int64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Dist_type@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YAPEA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Dist_type@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YAPEA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z PROC ; std::_Dist_type<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >, COMDAT

; 850  : 	return (0);

	xor	eax, eax

; 851  : 	}

	ret	0
??$_Dist_type@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YAPEA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ENDP ; std::_Dist_type<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Unchecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAPEAPEAUsmem_value@@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z
_TEXT	SEGMENT
_Iter$ = 8
??$_Unchecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAPEAPEAUsmem_value@@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >, COMDAT

; 394  : 	return (_Iter._Unchecked());

	mov	rax, rcx

; 395  : 	}

	ret	0
??$_Unchecked@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@YAPEAPEAUsmem_value@@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z DD imagerel $LN17
	DD	imagerel $LN17+41
	DD	imagerel $unwind$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
xdata	ENDS
;	COMDAT ??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_First$ = 56
_Last$ = 64
_Val$ = 72
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z PROC ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>, COMDAT

; 2785 : 	{	// find first element not before _Val, using _Pred

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	r10, r8
	mov	rax, rdx
	mov	rbx, rcx

; 2786 : //	_DEBUG_ORDER_PRED(_First, _Last, _Pred);
; 2787 : 	return (_Rechecked(_First,
; 2788 : 		_Lower_bound(_Unchecked(_First), _Unchecked(_Last), _Val, _Pred,
; 2789 : 			_Dist_type(_First))));

	mov	rdx, r10
	mov	rcx, rax
	mov	r8, r9
	call	??$_Lower_bound@PEAPEAUsmem_value@@PEAU1@_JP6A_NPEBU1@0@Z@std@@YAPEAPEAUsmem_value@@PEAPEAU1@0AEBQEAU1@P6A_NPEBU1@2@ZPEA_J@Z ; std::_Lower_bound<smem_value * __ptr64 * __ptr64,smem_value * __ptr64,__int64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx

; 2790 : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@P6A_NPEBU3@0@Z@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@P6A_NPEBU2@2@Z@Z ENDP ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64,bool (__cdecl*)(smem_value const * __ptr64,smem_value const * __ptr64)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEBA_NXZ PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::empty, COMDAT

; 889  : 		return (this->_Myfirst == this->_Mylast);

	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 890  : 		}

	ret	0
?empty@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEBA_NXZ ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::empty
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@PEAUsmem_value@@@std@@YAXAEAPEAUsmem_value@@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@PEAUsmem_value@@@std@@YAXAEAPEAUsmem_value@@0@Z PROC ; std::swap<smem_value * __ptr64>, COMDAT

; 102  : 	_Ty _Tmp = _Move(_Left);
; 103  : 	_Left = _Move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax

; 104  : 	_Right = _Move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 105  : 	}

	ret	0
??$swap@PEAUsmem_value@@@std@@YAXAEAPEAUsmem_value@@0@Z ENDP ; std::swap<smem_value * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$iter_swap@PEAPEAUsmem_value@@PEAPEAU1@@std@@YAXPEAPEAUsmem_value@@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$iter_swap@PEAPEAUsmem_value@@PEAPEAU1@@std@@YAXPEAPEAUsmem_value@@0@Z PROC ; std::iter_swap<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64>, COMDAT

; 2134 : 	swap(*_Left, *_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rdx], r8

; 2135 : 	}

	ret	0
??$iter_swap@PEAPEAUsmem_value@@PEAPEAU1@@std@@YAXPEAPEAUsmem_value@@0@Z ENDP ; std::iter_swap<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??G?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-, COMDAT

; 191  : 		_Compat(_Right);
; 192  : 		return (this->_Ptr - _Right._Ptr);

	mov	rax, QWORD PTR [rcx]
	sub	rax, QWORD PTR [rdx]
	sar	rax, 3

; 193  : 		}

	ret	0
??G?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-, COMDAT

; 381  : 		return (*(_Mybase *)this - _Right);

	mov	rax, QWORD PTR [rcx]
	sub	rax, QWORD PTR [rdx]
	sar	rax, 3

; 382  : 		}

	ret	0
??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA_JAEBV?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>, COMDAT

; 841  : 	_Where += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 842  : 	}

	ret	0
??$_Advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0AEA_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Off$ = 24
??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0AEA_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>, COMDAT

; 886  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 887  : 	if (_First != _Last)
; 888  : 		{	// check for null pointers
; 889  : 		_DEBUG_POINTER(_First);
; 890  : 		_DEBUG_POINTER(_Last);
; 891  : 		}
; 892  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 893  : 
; 894  : 	_Off += _Last - _First;

	sub	rdx, rcx
	sar	rdx, 3
	add	QWORD PTR [r8], rdx

; 895  : 	}

	ret	0
??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0AEA_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD imagerel $LN33
	DD	imagerel $LN33+77
	DD	imagerel $unwind$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD imagerel $LN33+77
	DD	imagerel $LN33+179
	DD	imagerel $chain$0$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD imagerel $LN33+179
	DD	imagerel $LN33+186
	DD	imagerel $chain$1$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+77
	DD	imagerel $unwind$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD 020521H
	DD	027405H
	DD	imagerel $LN33
	DD	imagerel $LN33+77
	DD	imagerel $unwind$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z DD 030601H
	DD	033406H
	DD	06006H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z
_TEXT	SEGMENT
_First$ = 16
_Mid$ = 24
_Last$ = 32
??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z PROC ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>, COMDAT

; 3256 : 	{	// rotate [_First, _Last), random-access iterators

$LN33:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	mov	r10, rdx

; 3257 : 	_Diff _Shift = _Mid - _First;
; 3258 : 	_Diff _Count = _Last - _First;

	mov	r9, r8
	mov	rbx, rcx
	sub	r10, rcx
	sub	r9, rcx
	mov	rsi, r8
	sar	r10, 3
	sar	r9, 3
	mov	r11, r9

; 3259 : 
; 3260 : 	for (_Diff _Factor = _Shift; _Factor != 0; )

	mov	rcx, r10
	test	r10, r10
	je	SHORT $LN8@Rotate@2
	npad	5
$LL9@Rotate@2:

; 3261 : 		{	// find subcycle count as GCD of shift count and length
; 3262 : 		_Diff _Tmp = _Count % _Factor;

	mov	rax, r11

; 3263 : 		_Count = _Factor;

	mov	r11, rcx
	cdq
	idiv	rcx

; 3264 : 		_Factor = _Tmp;

	mov	rcx, rdx
	test	rdx, rdx
	jne	SHORT $LL9@Rotate@2
$LN8@Rotate@2:

; 3265 : 		}
; 3266 : 
; 3267 : 	if (_Count < _Last - _First)

	cmp	r11, r9
	jge	SHORT $LN4@Rotate@2

; 3268 : 		for (; 0 < _Count; --_Count)

	test	r11, r11
	jle	SHORT $LN4@Rotate@2
	mov	QWORD PTR [rsp+16], rdi
	lea	r9, QWORD PTR [r10*8]
	lea	r8, QWORD PTR [rbx+r11*8]
	npad	2
$LL6@Rotate@2:

; 3269 : 			{	// rotate each subcycle
; 3270 : 			_RanIt _Hole = _First + _Count;
; 3271 : 			_RanIt _Next = _Hole;
; 3272 : 			_RanIt _Next1 = _Next + _Shift == _Last ? _First : _Next + _Shift;

	lea	rdx, QWORD PTR [r8+r9]
	mov	rdi, r8
	cmp	rdx, rsi
	cmove	rdx, rbx
	npad	2
$LL3@Rotate@2:

; 3273 : 			for (; ; )
; 3274 : 				{	// percolate elements back around subcycle
; 3275 : 				iter_swap(_Next, _Next1);

	mov	rcx, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdx], rcx

; 3276 : 				_Next = _Next1;
; 3277 : 				_Next1 = _Shift < _Last - _Next1 ? _Next1 + _Shift
; 3278 : 					: _First + (_Shift - (_Last - _Next1));

	mov	rcx, rsi
	sub	rcx, rdx
	mov	rdi, rdx
	sar	rcx, 3
	cmp	r10, rcx
	jge	SHORT $LN14@Rotate@2
	add	rdx, r9
	jmp	SHORT $LN15@Rotate@2
$LN14@Rotate@2:
	mov	rax, r10
	sub	rax, rcx
	lea	rdx, QWORD PTR [rbx+rax*8]
$LN15@Rotate@2:

; 3279 : 				if (_Next1 == _Hole)

	cmp	rdx, r8
	jne	SHORT $LL3@Rotate@2

; 3268 : 		for (; 0 < _Count; --_Count)

	dec	r11
	sub	r8, 8
	test	r11, r11
	jg	SHORT $LL6@Rotate@2
	mov	rdi, QWORD PTR [rsp+16]
$LN4@Rotate@2:

; 3280 : 					break;
; 3281 : 				}
; 3282 : 			}
; 3283 : 	}

	mov	rbx, QWORD PTR [rsp+24]
	pop	rsi
	ret	0
??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ENDP ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_J@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_J@Z PROC ; std::advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>, COMDAT

; 798  : 	_Advance(_Where, _Off, _Iter_cat(_Where));

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 799  : 	}

	ret	0
??$advance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@_J@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@_J@Z ENDP ; std::advance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$distance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$distance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0@Z PROC ; std::distance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >, COMDAT

; 901  : 	typename iterator_traits<_InIt>::difference_type _Off = 0;
; 902  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	sub	rdx, rcx
	sar	rdx, 3

; 903  : 	return (_Off);

	mov	rax, rdx

; 904  : 	}

	ret	0
??$distance@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@0@Z ENDP ; std::distance<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+14
	DD	imagerel $unwind$??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Mid$ = 56
_Last$ = 64
??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z PROC ; std::_Rotate<smem_value * __ptr64 * __ptr64>, COMDAT

; 3288 : 	{	// rotate [_First, _Last), random-access iterators

$LN7:
	sub	rsp, 40					; 00000028H

; 3289 : 	_Rotate(_First, _Mid, _Last, _Dist_type(_First), _Val_type(_First));

	call	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>

; 3290 : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Rotate@PEAPEAUsmem_value@@@std@@YAXPEAPEAUsmem_value@@00Urandom_access_iterator_tag@0@@Z ENDP ; std::_Rotate<smem_value * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBA_K_K@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, r8
	jae	SHORT $LN4@Grow_to
	xor	r8d, r8d

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
$LN4@Grow_to:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	r8, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEBA_K_K@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Grow_to
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z DD imagerel $LN61
	DD	imagerel $LN61+100
	DD	imagerel $unwind$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z DD 021401H
	DD	030103214H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_First$ = 56
_Mid$ = 64
_Last$ = 72
??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z PROC ; std::rotate<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >, COMDAT

; 3294 : 	{	// rotate [_First, _Last)

$LN61:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	r10, r8
	mov	rax, rdx
	mov	rbx, rcx

; 3295 : 	_DEBUG_RANGE(_First, _Mid);
; 3296 : 	_DEBUG_RANGE(_Mid, _Last);
; 3297 : 	if (_First != _Mid && _Mid != _Last)

	cmp	rdx, r8
	je	SHORT $LN58@rotate
	cmp	r8, r9
	je	SHORT $LN58@rotate

; 3298 : 		{	// rotate and compute new first iterator
; 3299 : 		_Rotate(_Unchecked(_First), _Unchecked(_Mid), _Unchecked(_Last),
; 3300 : 			_Iter_cat(_First));

	mov	r8, r9
	mov	rdx, r10
	mov	rcx, rax
	call	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>

; 3301 : 		_STD advance(_First, _STD distance(_Mid, _Last));

	mov	r11, QWORD PTR _Last$[rsp]
	mov	rax, QWORD PTR _First$[rsp]
	sub	r11, QWORD PTR _Mid$[rsp]
	sar	r11, 3
	lea	rax, QWORD PTR [rax+r11*8]

; 3302 : 		}
; 3303 : 	return (_First);

	mov	QWORD PTR [rbx], rax
	mov	rax, rbx

; 3304 : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN58@rotate:

; 3302 : 		}
; 3303 : 	return (_First);

	mov	QWORD PTR [rcx], rdx
	mov	rax, rbx

; 3304 : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$rotate@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@00@Z ENDP ; std::rotate<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
??Z?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-=, COMDAT

; 370  : 		return (*this += -_Off);

	add	QWORD PTR [rcx], -8
	mov	rax, rcx

; 371  : 		}

	ret	0
??Z?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-, COMDAT

; 375  : 		_Myiter _Tmp = *this;
; 376  : 		return (_Tmp -= _Off);

	mov	rax, QWORD PTR [rcx]
	sub	rax, 8
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 377  : 		}

	ret	0
??G?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator-
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$find@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_First$ = 16
_Last$ = 24
_Val$ = 32
??$find@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z PROC ; std::find<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>, COMDAT

; 72   : 	_DEBUG_RANGE(_First, _Last);
; 73   : 	return (_Rechecked(_First,
; 74   : 		_Find(_Unchecked(_First), _Unchecked(_Last), _Val)));

	cmp	rdx, r8
	je	SHORT $LN25@find@2
	mov	rax, QWORD PTR [r9]
$LL14@find@2:
	cmp	QWORD PTR [rdx], rax
	je	SHORT $LN25@find@2
	add	rdx, 8
	cmp	rdx, r8
	jne	SHORT $LL14@find@2
$LN25@find@2:
	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 75   : 	}

	ret	0
??$find@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z ENDP ; std::find<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$remove@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_First$ = 16
_Last$ = 24
_Val$ = 32
??$remove@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z PROC ; std::remove<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>, COMDAT

; 1823 : 	{	// remove each matching _Val

	mov	QWORD PTR [rsp+16], rdx
	mov	r10, rcx

; 1824 : 	_First = _STD find(_First, _Last, _Val);

	cmp	rdx, r8
	je	SHORT $LN51@remove
	mov	rax, QWORD PTR [r9]
$LL18@remove:
	cmp	QWORD PTR [rdx], rax
	je	SHORT $LN51@remove
	add	rdx, 8
	cmp	rdx, r8
	jne	SHORT $LL18@remove
$LN51@remove:
	mov	QWORD PTR _First$[rsp], rdx

; 1825 : 	if (_First == _Last)

	cmp	rdx, r8
	jne	SHORT $LN2@remove

; 1826 : 		return (_First);	// empty sequence, all done

	mov	QWORD PTR [rcx], rdx

; 1827 : 	else
; 1828 : 		return (_Rechecked(_First,
; 1829 : 			_Remove(_Unchecked(_First), _Unchecked(_Last), _Val)));

	mov	rax, r10

; 1830 : 	}

	ret	0
$LN2@remove:

; 1827 : 	else
; 1828 : 		return (_Rechecked(_First,
; 1829 : 			_Remove(_Unchecked(_First), _Unchecked(_Last), _Val)));

	lea	rax, QWORD PTR [rdx+8]
	cmp	rax, r8
	je	SHORT $LN38@remove
$LL40@remove:
	mov	rcx, QWORD PTR [rax]
	cmp	rcx, QWORD PTR [r9]
	je	SHORT $LN39@remove
	mov	QWORD PTR [rdx], rcx
	add	rdx, 8
$LN39@remove:
	add	rax, 8
	cmp	rax, r8
	jne	SHORT $LL40@remove
$LN38@remove:
	mov	QWORD PTR [r10], rdx
	mov	rax, r10

; 1830 : 	}

	ret	0
??$remove@V?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@PEAUsmem_value@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@0@V10@0AEBQEAUsmem_value@@@Z ENDP ; std::remove<std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >,smem_value * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++, COMDAT

; 332  : 		++*(_Mybase *)this;

	add	QWORD PTR [rcx], 8

; 333  : 		return (*this);

	mov	rax, rcx

; 334  : 		}

	ret	0
??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAA?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++, COMDAT

; 338  : 		_Myiter _Tmp = *this;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 339  : 		++*this;

	add	rax, 8
	mov	QWORD PTR [rcx], rax

; 340  : 		return (_Tmp);

	mov	rax, rdx

; 341  : 		}

	ret	0
??E?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEAA?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAAEAPEAUsmem_value@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAAEAPEAUsmem_value@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator*, COMDAT

; 322  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 323  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@std@@QEBAAEAPEAUsmem_value@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<smem_value * __ptr64,xalloc<smem_value * __ptr64> > >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$xalloc@PEAUsmem_value@@@@PEAUsmem_value@@PEAU2@@std@@YAXAEAV?$xalloc@PEAUsmem_value@@@@PEAPEAUsmem_value@@$$QEAPEAU2@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@PEAUsmem_value@@@@PEAUsmem_value@@PEAU2@@std@@YAXAEAV?$xalloc@PEAUsmem_value@@@@PEAPEAUsmem_value@@$$QEAPEAU2@@Z PROC ; std::_Cons_val<xalloc<smem_value * __ptr64>,smem_value * __ptr64,smem_value * __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@11
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN9@Cons_val@11:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@PEAUsmem_value@@@@PEAUsmem_value@@PEAU2@@std@@YAXAEAV?$xalloc@PEAUsmem_value@@@@PEAPEAUsmem_value@@$$QEAPEAU2@@Z ENDP ; std::_Cons_val<xalloc<smem_value * __ptr64>,smem_value * __ptr64,smem_value * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+60
	DD	imagerel $unwind$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+52
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T183749 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T183749[rsp], -2
	npad	3
$LL6@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_mov

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	mov	rax, QWORD PTR [rcx]
	test	r8, r8
	je	SHORT $LN22@Uninit_mov
	mov	QWORD PTR [r8], rax
$LN22@Uninit_mov:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 8
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 8
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_mov
$LN4@Uninit_mov:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, r8

; 438  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_mov:
??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T183749 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>, COMDAT

; 446  : 	{	// move [_First, _Last) to raw _Dest, using _Al, scalar type

$LN3:
	sub	rsp, 40					; 00000028H

; 447  : 	return (_Uninit_move(_First, _Last, _Dest,
; 448  : 		_Al, (_Valty *)0, _Nonscalar_ptr_iterator_tag()));

	call	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>

; 449  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@@Z PROC ; std::_Uninitialized_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64> >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
??$_Uninitialized_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@@Z ENDP ; std::_Uninitialized_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAPEAPEAUsmem_value@@PEAPEAU2@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAPEAPEAUsmem_value@@PEAPEAU2@00@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Umove<smem_value * __ptr64 * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
??$_Umove@PEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAPEAPEAUsmem_value@@PEAPEAU2@00@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Umove<smem_value * __ptr64 * __ptr64>
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD imagerel $LN29+80
	DD	imagerel $LN29+146
	DD	imagerel $chain$1$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD imagerel $LN29+146
	DD	imagerel $LN29+164
	DD	imagerel $chain$2$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD 040e21H
	DD	07540eH
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z DD 040a01H
	DD	08640aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
xdata	ENDS
;	COMDAT ??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z PROC	; xr_free<smem_value>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN29:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rdi, rdi
	je	$LN1@xr_free@22
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN6@xr_free@22
	test	rdi, rdi
	je	SHORT $LN27@xr_free@22
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	mov	QWORD PTR [rsi], 0
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN6@xr_free@22:
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+56], rbp
	lea	rbp, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rbp+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rbp+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rbp+rbx*8]
	mov	QWORD PTR [rbp+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
$LN27@xr_free@22:
	mov	QWORD PTR [rsi], 0
$LN1@xr_free@22:
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z ENDP	; xr_free<smem_value>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN60
	DD	imagerel $LN60+28
	DD	imagerel $unwind$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN60+28
	DD	imagerel $LN60+73
	DD	imagerel $chain$0$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN60+73
	DD	imagerel $LN60+84
	DD	imagerel $chain$1$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 021H
	DD	imagerel $LN60
	DD	imagerel $LN60+28
	DD	imagerel $unwind$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 020521H
	DD	067405H
	DD	imagerel $LN60
	DD	imagerel $LN60+28
	DD	imagerel $unwind$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 040a01H
	DD	07340aH
	DD	06006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ PROC ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

$LN60:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx+8]
	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	cmp	rbx, rdx
	je	SHORT $LN21@clear_and_
	mov	rax, rdx
	mov	QWORD PTR [rsp+48], rdi
	mov	rcx, rbx
	sub	rax, rdx
	sar	rax, 3
	lea	rdi, QWORD PTR [rax*8]
	mov	r8, rdi
	call	QWORD PTR __imp_memmove
	lea	r11, QWORD PTR [rdi+rbx]
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rsi+8], r11
$LN21@clear_and_:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?clear_and_free@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ ENDP ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear_and_free
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN62
	DD	imagerel $LN62+28
	DD	imagerel $unwind$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN62+28
	DD	imagerel $LN62+73
	DD	imagerel $chain$0$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD imagerel $LN62+73
	DD	imagerel $LN62+84
	DD	imagerel $chain$1$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 021H
	DD	imagerel $LN62
	DD	imagerel $LN62+28
	DD	imagerel $unwind$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 020521H
	DD	067405H
	DD	imagerel $LN62
	DD	imagerel $LN62+28
	DD	imagerel $unwind$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ DD 040a01H
	DD	07340aH
	DD	06006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ PROC ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear, COMDAT

; 132  : 	void	clear				()									{ clear_and_free	();			}

$LN62:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rcx+8]
	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	cmp	rbx, rdx
	je	SHORT $LN23@clear@6
	mov	rax, rdx
	mov	QWORD PTR [rsp+48], rdi
	mov	rcx, rbx
	sub	rax, rdx
	sar	rax, 3
	lea	rdi, QWORD PTR [rax*8]
	mov	r8, rdi
	call	QWORD PTR __imp_memmove
	lea	r11, QWORD PTR [rdi+rbx]
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rsi+8], r11
$LN23@clear@6:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?clear@?$xr_vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@@QEAAXXZ ENDP ; xr_vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::clear
_TEXT	ENDS
PUBLIC	?stat_economy@smem_container@@QEAAIXZ		; smem_container::stat_economy
pdata	SEGMENT
$pdata$?stat_economy@smem_container@@QEAAIXZ DD imagerel $LN54
	DD	imagerel $LN54+117
	DD	imagerel $unwind$?stat_economy@smem_container@@QEAAIXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?stat_economy@smem_container@@QEAAIXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsharedmem.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?stat_economy@smem_container@@QEAAIXZ PROC		; smem_container::stat_economy

; 82   : {

$LN54:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 83   : 	cs.Enter		();

	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_EnterCriticalSection

; 84   : 	cdb::iterator	it		= container.begin	();

	mov	r11, QWORD PTR [rdi+8]

; 85   : 	cdb::iterator	end		= container.end		();

	mov	rdx, QWORD PTR [rdi+16]

; 86   : 	s64				counter	= 0;
; 87   : 	counter			-= sizeof(*this);
; 88   : 	counter			-= sizeof(cdb::allocator_type);

	mov	rbx, -41				; ffffffffffffffd7H

; 89   : 	const int		node_size = 20;
; 90   : 	for (; it!=end; it++)	{

	cmp	r11, rdx
	je	SHORT $LN1@stat_econo@2
	npad	6
$LL28@stat_econo@2:

; 91   : 		counter		-= 16;
; 92   : 		counter		-= node_size;
; 93   : 		counter		+= s64((s64((*it)->dwReference) - 1)*s64((*it)->dwLength));

	mov	r8, QWORD PTR [r11]
	add	r11, 8
	mov	r9d, DWORD PTR [r8]
	mov	ecx, DWORD PTR [r8+8]
	dec	r9
	imul	r9, rcx
	lea	rbx, QWORD PTR [rbx+r9-36]
	cmp	r11, rdx
	jne	SHORT $LL28@stat_econo@2
$LN1@stat_econo@2:

; 94   : 	}
; 95   : 	cs.Leave		();

	mov	rcx, QWORD PTR [rdi]
	call	QWORD PTR __imp_LeaveCriticalSection

; 96   : 
; 97   : 	return			u32(s64(counter)/s64(1024));

	mov	rax, rbx

; 98   : }

	mov	rbx, QWORD PTR [rsp+48]
	cdq
	and	edx, 1023				; 000003ffH
	add	rax, rdx
	sar	rax, 10
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?stat_economy@smem_container@@QEAAIXZ ENDP		; smem_container::stat_economy
_TEXT	ENDS
PUBLIC	?dump@smem_container@@QEAAXXZ			; smem_container::dump
pdata	SEGMENT
$pdata$?dump@smem_container@@QEAAXXZ DD imagerel $LN61
	DD	imagerel $LN61+162
	DD	imagerel $unwind$?dump@smem_container@@QEAAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?dump@smem_container@@QEAAXXZ DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 64
?dump@smem_container@@QEAAXXZ PROC			; smem_container::dump

; 70   : {

$LN61:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbp, rcx

; 71   : 	cs.Enter		();

	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_EnterCriticalSection

; 72   : 	cdb::iterator	it	= container.begin	();

	mov	rbx, QWORD PTR [rbp+8]

; 73   : 	cdb::iterator	end	= container.end		();

	mov	rdi, QWORD PTR [rbp+16]

; 74   : 	FILE* F			= fopen("x:\\$smem_dump$.txt","w");

	lea	rdx, OFFSET FLAT:??_C@_01NOFIACDB@w?$AA@
	lea	rcx, OFFSET FLAT:??_C@_0BD@JJAGEJAN@x?3?2$smem_dump$?4txt?$AA@
	call	QWORD PTR __imp_fopen
	mov	rsi, rax

; 75   : 	for (; it!=end; it++)

	cmp	rbx, rdi
	je	SHORT $LN1@dump@2
	npad	12
$LL28@dump@2:

; 76   : 		fprintf		(F,"%4d : crc[%6x], %d bytes\n",(*it)->dwReference,(*it)->dwCRC,(*it)->dwLength);

	mov	rdx, QWORD PTR [rbx]
	mov	ecx, DWORD PTR [rdx+8]
	mov	r9d, DWORD PTR [rdx+4]
	mov	r8d, DWORD PTR [rdx]
	mov	DWORD PTR [rsp+32], ecx
	lea	rdx, OFFSET FLAT:??_C@_0BK@KPOBLFJH@?$CF4d?5?3?5crc?$FL?$CF6x?$FN?0?5?$CFd?5bytes?6?$AA@
	mov	rcx, rsi
	call	QWORD PTR __imp_fprintf
	add	rbx, 8
	cmp	rbx, rdi
	jne	SHORT $LL28@dump@2
$LN1@dump@2:

; 77   : 	fclose			(F);

	mov	rcx, rsi
	call	QWORD PTR __imp_fclose

; 78   : 	cs.Leave		();

	mov	rcx, QWORD PTR [rbp]

; 79   : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?dump@smem_container@@QEAAXXZ ENDP			; smem_container::dump
_TEXT	ENDS
PUBLIC	?clean@smem_container@@QEAAXXZ			; smem_container::clean
pdata	SEGMENT
$pdata$?clean@smem_container@@QEAAXXZ DD imagerel $LN237
	DD	imagerel $LN237+262
	DD	imagerel $unwind$?clean@smem_container@@QEAAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?clean@smem_container@@QEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?clean@smem_container@@QEAAXXZ PROC			; smem_container::clean

; 59   : {

$LN237:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx

; 60   : 	cs.Enter		();

	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_EnterCriticalSection

; 61   : 	cdb::iterator	it	= container.begin	();

	mov	rbx, QWORD PTR [rsi+8]

; 62   : 	cdb::iterator	end	= container.end		();

	mov	rdi, QWORD PTR [rsi+16]

; 63   : 	for (; it!=end; it++)	if (0==(*it)->dwReference)	xr_free	(*it);

	cmp	rbx, rdi
	je	SHORT $LN3@clean
$LL30@clean:
	mov	rax, QWORD PTR [rbx]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN4@clean
	mov	rcx, rbx
	call	??$xr_free@Usmem_value@@@@YAXAEAPEAUsmem_value@@@Z ; xr_free<smem_value>
$LN4@clean:
	add	rbx, 8
	cmp	rbx, rdi
	jne	SHORT $LL30@clean
$LN3@clean:

; 64   : 	container.erase	(remove(container.begin(),container.end(),(smem_value*)0),container.end());

	mov	rdx, QWORD PTR [rsi+16]
	mov	rbx, QWORD PTR [rsi+8]
	cmp	rbx, rdx
	je	SHORT $LN124@clean
	npad	2
$LL93@clean:
	cmp	QWORD PTR [rbx], 0
	je	SHORT $LN231@clean
	add	rbx, 8
	cmp	rbx, rdx
	jne	SHORT $LL93@clean
	jmp	SHORT $LN235@clean
$LN231@clean:
	cmp	rbx, rdx
	je	SHORT $LN124@clean
	lea	rax, QWORD PTR [rbx+8]
	cmp	rax, rdx
	je	SHORT $LN235@clean
	npad	1
$LL115@clean:
	mov	rcx, QWORD PTR [rax]
	test	rcx, rcx
	je	SHORT $LN114@clean
	mov	QWORD PTR [rbx], rcx
	add	rbx, 8
$LN114@clean:
	add	rax, 8
	cmp	rax, rdx
	jne	SHORT $LL115@clean
$LN235@clean:
	cmp	rbx, rdx
	je	SHORT $LN124@clean
	mov	rax, QWORD PTR [rsi+16]
	mov	rcx, rbx
	sub	rax, rdx
	sar	rax, 3
	lea	rdi, QWORD PTR [rax*8]
	mov	r8, rdi
	call	QWORD PTR __imp_memmove
	lea	r11, QWORD PTR [rdi+rbx]
	mov	QWORD PTR [rsi+16], r11
$LN124@clean:

; 65   : 	if (container.empty())	container.clear	();

	mov	rax, QWORD PTR [rsi+16]
	cmp	QWORD PTR [rsi+8], rax
	jne	SHORT $LN187@clean
	mov	rbx, QWORD PTR [rsi+8]
	mov	rdx, rax
	cmp	rbx, rax
	je	SHORT $LN187@clean
	sub	rax, rax
	mov	rcx, rbx
	sar	rax, 3
	lea	rdi, QWORD PTR [rax*8]
	mov	r8, rdi
	call	QWORD PTR __imp_memmove
	lea	r11, QWORD PTR [rdi+rbx]
	mov	QWORD PTR [rsi+16], r11
$LN187@clean:

; 66   : 	cs.Leave		();

	mov	rcx, QWORD PTR [rsi]

; 67   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?clean@smem_container@@QEAAXXZ ENDP			; smem_container::clean
PUBLIC	??1smem_container@@QEAA@XZ			; smem_container::~smem_container
pdata	SEGMENT
$pdata$??1smem_container@@QEAA@XZ DD imagerel $LN18
	DD	imagerel $LN18+74
	DD	imagerel $unwind$??1smem_container@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1smem_container@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
$T246532 = 48
this$ = 48
??1smem_container@@QEAA@XZ PROC				; smem_container::~smem_container

; 101  : {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 102  : 	clean			();

	call	?clean@smem_container@@QEAAXXZ		; smem_container::clean

; 103  : }

	mov	rax, QWORD PTR [rbx+8]
	test	rax, rax
	je	SHORT $LN12@smem_conta
	lea	rcx, QWORD PTR $T246532[rsp]
	mov	QWORD PTR $T246532[rsp], rax
	call	??$xr_free@PEAUsmem_value@@@@YAXAEAPEAPEAUsmem_value@@@Z ; xr_free<smem_value * __ptr64>
$LN12@smem_conta:
	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	mov	QWORD PTR [rbx+24], rax
	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_DeleteCriticalSection
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
??1smem_container@@QEAA@XZ ENDP				; smem_container::~smem_container
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD imagerel $LN44
	DD	imagerel $LN44+198
	DD	imagerel $unwind$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z+107
	DD	00H
	DD	imagerel ?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z+123
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T292670 = 32
this$ = 64
$T292658 = 72
$T292651 = 72
_Ptr$97382 = 72
_Count$ = 72
?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN44:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T292670[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rdi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve@4

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve@4:

; 749  : 		else if (capacity() < _Count)

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3
	cmp	rax, rdx
	jae	SHORT $LN3@reserve@4

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	edx, edx
	shl	rdx, 3
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rsi, rax
	mov	QWORD PTR _Ptr$97382[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAPEAUsmem_value@@PEAPEAU1@V?$xalloc@PEAUsmem_value@@@@PEAU1@@std@@YAPEAPEAUsmem_value@@PEAPEAU1@00AEAV?$xalloc@PEAUsmem_value@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<smem_value * __ptr64 * __ptr64,smem_value * __ptr64 * __ptr64,xalloc<smem_value * __ptr64>,smem_value * __ptr64>
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	rax, QWORD PTR [rbx]
	mov	r12, QWORD PTR [rbx+8]
	sub	r12, rax
	sar	r12, 3

; 761  : 			if (this->_Myfirst != 0)

	test	rax, rax
	je	SHORT $LN39@reserve@4

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	QWORD PTR $T292658[rsp], rax
	lea	rcx, QWORD PTR $T292658[rsp]
	call	??$xr_free@PEAUsmem_value@@@@YAXAEAPEAPEAUsmem_value@@@Z ; xr_free<smem_value * __ptr64>
$LN39@reserve@4:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	lea	rax, QWORD PTR [rsi+rdi*8]
	mov	QWORD PTR [rbx+16], rax

; 770  : 			this->_Mylast = _Ptr + _Size;

	lea	rax, QWORD PTR [rsi+r12*8]
	mov	QWORD PTR [rbx+8], rax

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], rsi
$LN3@reserve@4:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN43@reserve@4:
?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T292670 = 32
this$ = 64
$T292658 = 72
$T292651 = 72
_Ptr$97382 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rax, QWORD PTR _Ptr$97382[rbp]
	mov	QWORD PTR $T292651[rbp], rax
	lea	rcx, QWORD PTR $T292651[rbp]
	call	??$xr_free@PEAUsmem_value@@@@YAXAEAPEAPEAUsmem_value@@@Z ; xr_free<smem_value * __ptr64>

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+137
	DD	imagerel $unwind$?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	rax, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	mov	r9, rcx
	sub	r8, rax

; 1292 : 		if (max_size() - _Count < _Size)

	mov	rcx, 2305843009213693950		; 1ffffffffffffffeH
	sar	r8, 3
	cmp	r8, rcx
	jbe	SHORT $LN4@Reserve@4

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve@4:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	mov	rdx, QWORD PTR [r9+16]
	inc	r8
	sub	rdx, rax
	sar	rdx, 3
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve@4

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rcx, rdx
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN21@Reserve@4
	xor	edx, edx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve@4:
	add	rdx, rcx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::reserve
$LN1@Reserve@4:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve@4:
?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z DD imagerel $LN23
	DD	imagerel $LN23+62
	DD	imagerel $unwind$??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace_back<smem_value * __ptr64 & __ptr64>, COMDAT

; 661  : 		void emplace_back(_Valty&& _Val)

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 662  : 		{	// insert element at end
; 663  : 		if (this->_Mylast == this->_Myend)

	mov	rax, QWORD PTR [rcx+16]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN1@emplace_ba

; 664  : 			_Reserve(1);

	call	?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
$LN1@emplace_ba:

; 665  : 		_Orphan_range(this->_Mylast, this->_Mylast);
; 666  : 		_Cons_val(this->_Alval,
; 667  : 			this->_Mylast,
; 668  : 			_STD forward<_Valty>(_Val));

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN22@emplace_ba
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx], rax
$LN22@emplace_ba:

; 669  : 		++this->_Mylast;

	add	QWORD PTR [rbx+8], 8

; 670  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$emplace_back@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAAXAEAPEAUsmem_value@@@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace_back<smem_value * __ptr64 & __ptr64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z DD imagerel $LN135
	DD	imagerel $LN135+139
	DD	imagerel $unwind$??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
_Val$ = 72
??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace<smem_value * __ptr64 & __ptr64>, COMDAT

; 679  : 		iterator emplace(const_iterator _Where, _Valty&& _Val)

$LN135:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 680  : 		{	// insert _Val at _Where
; 681  : 		size_type _Off = _VIPTR(_Where) - this->_Myfirst;
; 682  : 
; 683  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 684  : 		if (size() < _Off)
; 685  : 			_DEBUG_ERROR("vector emplace iterator outside range");
; 686  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 687  : 
; 688  : 		emplace_back(_STD forward<_Valty>(_Val));

	mov	rax, QWORD PTR [rcx+16]
	mov	rdi, r8
	mov	rbp, r9
	sub	rdi, QWORD PTR [rcx]
	mov	rsi, rdx
	mov	rbx, rcx
	sar	rdi, 3
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN5@emplace
	call	?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
$LN5@emplace:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN20@emplace
	mov	rax, QWORD PTR [rbp]
	mov	QWORD PTR [rcx], rax
$LN20@emplace:
	add	QWORD PTR [rbx+8], 8

; 689  : 		_STD rotate(begin() + _Off, end() - 1, end());

	mov	rax, QWORD PTR [rbx]
	mov	r8, QWORD PTR [rbx+8]
	lea	rdx, QWORD PTR [r8-8]
	lea	rcx, QWORD PTR [rax+rdi*8]
	cmp	rcx, rdx
	je	SHORT $LN119@emplace
	cmp	rdx, r8
	je	SHORT $LN119@emplace
	call	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>
$LN119@emplace:

; 690  : 		return (begin() + _Off);

	mov	rax, QWORD PTR [rbx]

; 691  : 		}

	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
	lea	rcx, QWORD PTR [rax+rdi*8]
	mov	rax, rsi
	mov	QWORD PTR [rsi], rcx
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$emplace@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::emplace<smem_value * __ptr64 & __ptr64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z DD imagerel $LN139
	DD	imagerel $LN139+139
	DD	imagerel $unwind$??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
_Val$ = 72
??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z PROC ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::insert<smem_value * __ptr64 & __ptr64>, COMDAT

; 673  : 		iterator insert(const_iterator _Where, _Valty&& _Val)

$LN139:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 674  : 		{	// insert _Val at _Where
; 675  : 		return (emplace(_Where, _STD forward<_Valty>(_Val)));

	mov	rax, QWORD PTR [rcx+16]
	mov	rdi, r8
	mov	rbp, r9
	sub	rdi, QWORD PTR [rcx]
	mov	rsi, rdx
	mov	rbx, rcx
	sar	rdi, 3
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN9@insert@2
	call	?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
$LN9@insert@2:
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN24@insert@2
	mov	rax, QWORD PTR [rbp]
	mov	QWORD PTR [rcx], rax
$LN24@insert@2:
	add	QWORD PTR [rbx+8], 8
	mov	rax, QWORD PTR [rbx]
	mov	r8, QWORD PTR [rbx+8]
	lea	rdx, QWORD PTR [r8-8]
	lea	rcx, QWORD PTR [rax+rdi*8]
	cmp	rcx, rdx
	je	SHORT $LN123@insert@2
	cmp	rdx, r8
	je	SHORT $LN123@insert@2
	call	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>
$LN123@insert@2:
	mov	rax, QWORD PTR [rbx]

; 676  : 		}

	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
	lea	rcx, QWORD PTR [rax+rdi*8]
	mov	rax, rsi
	mov	QWORD PTR [rsi], rcx
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$insert@AEAPEAUsmem_value@@@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@@1@AEAPEAUsmem_value@@@Z ENDP ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::insert<smem_value * __ptr64 & __ptr64>
_TEXT	ENDS
PUBLIC	?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z ; smem_container::dock
pdata	SEGMENT
$pdata$?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z DD imagerel $LN280
	DD	imagerel $LN280+365
	DD	imagerel $unwind$?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z DD 0c1c01H
	DD	0c641cH
	DD	0b541cH
	DD	0a341cH
	DD	0f018321cH
	DD	0d014e016H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsharedmem.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 80
dwCRC$ = 88
dwLength$ = 96
ptr$ = 104
?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z PROC	; smem_container::dock

; 9    : {

$LN280:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r15, rcx

; 10   : 	VERIFY						(dwCRC && dwLength && ptr);
; 11   : 
; 12   : 	cs.Enter					();

	mov	rcx, QWORD PTR [rcx]
	mov	r14, r9
	mov	edi, r8d
	mov	ebp, edx
	call	QWORD PTR __imp_EnterCriticalSection

; 13   : 	smem_value*		result		= 0;
; 14   : 
; 15   : 	// search a place to insert
; 16   : 	u8				storage		[4*sizeof(u32)];
; 17   : 	smem_value*		value		= (smem_value*)storage;
; 18   : 	value->dwReference			= 0;
; 19   : 	value->dwCRC				= dwCRC;
; 20   : 	value->dwLength				= dwLength;
; 21   : 	cdb::iterator	it			= std::lower_bound	(container.begin(),container.end(),value,smem_search);

	mov	rsi, QWORD PTR [r15+16]
	mov	r12, QWORD PTR [r15+8]
	mov	r10, rsi
	sub	r10, r12
	sar	r10, 3
	test	r10, r10
	jle	SHORT $LN47@dock@2
	npad	9
$LL48@dock@2:
	mov	rax, r10
	cdq
	sub	rax, rdx
	sar	rax, 1
	mov	rdx, rax
	lea	r8, QWORD PTR [r12+rax*8]
	mov	rcx, QWORD PTR [r8]
	mov	eax, DWORD PTR [rcx+4]
	cmp	eax, ebp
	jb	SHORT $LN278@dock@2
	ja	SHORT $LN46@dock@2
	cmp	DWORD PTR [rcx+8], edi
	setb	cl
	test	cl, cl
	jne	SHORT $LN278@dock@2
$LN46@dock@2:
	mov	r10, rdx
	jmp	SHORT $LN45@dock@2
$LN278@dock@2:
	or	rax, -1
	lea	r12, QWORD PTR [r8+8]
	sub	rax, rdx
	add	r10, rax
$LN45@dock@2:
	test	r10, r10
	jg	SHORT $LL48@dock@2
$LN47@dock@2:
	mov	rbx, r12

; 22   : 	cdb::iterator	saved_place	= it;
; 23   : 	if (container.end() != it)	{

	cmp	rsi, r12
	je	SHORT $LN279@dock@2

; 24   : 		// supposedly found
; 25   : 		for (;;	it++)	{

$LL89@dock@2:

; 27   : 			if ((*it)->dwCRC	!= dwCRC)		break;

	mov	rcx, QWORD PTR [rbx]
	cmp	DWORD PTR [rcx+4], ebp
	jne	SHORT $LN279@dock@2

; 28   : 			if ((*it)->dwLength != dwLength)	break;

	cmp	DWORD PTR [rcx+8], edi
	jne	SHORT $LN279@dock@2

; 29   : 			if (0==memcmp((*it)->value,ptr,dwLength))

	mov	r8, rdi
	add	rcx, 16
	mov	rdx, r14
	call	memcmp
	test	eax, eax
	je	SHORT $LN276@dock@2

; 26   : 			if (it==container.end())			break;

	add	rbx, 8
	cmp	rbx, rsi
	jne	SHORT $LL89@dock@2
	jmp	SHORT $LN279@dock@2
$LN276@dock@2:

; 30   : 			{
; 31   : 				// really found
; 32   : 				result			= *it;

	mov	rsi, QWORD PTR [rbx]

; 33   : 				break;
; 34   : 			}
; 35   : 		}
; 36   : 	}
; 37   : 
; 38   : 	// if not found - create new entry
; 39   : 	if (0==result)

	test	rsi, rsi
	jne	SHORT $LN253@dock@2
$LN279@dock@2:

; 40   : 	{
; 41   : 		result					= (smem_value*)	Memory.mem_alloc	(4*sizeof(u32) + dwLength
; 42   : #ifdef DEBUG_MEMORY_NAME
; 43   : 			, "storage: smem"
; 44   : #endif // DEBUG_MEMORY_NAME
; 45   : 			);

	lea	rdx, QWORD PTR [rdi+16]
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 46   : 		result->dwReference		= 0;
; 47   : 		result->dwCRC			= dwCRC;
; 48   : 		result->dwLength		= dwLength;
; 49   : 		CopyMemory			(result->value,ptr,dwLength);

	mov	r8, rdi
	mov	rdx, r14
	lea	rcx, QWORD PTR [rax+16]
	mov	rsi, rax
	mov	DWORD PTR [rax], 0
	mov	DWORD PTR [rax+4], ebp
	mov	DWORD PTR [rax+8], edi
	call	memcpy

; 50   : 		container.insert		(saved_place,result);

	sub	r12, QWORD PTR [r15+8]
	mov	rcx, QWORD PTR [r15+24]
	sar	r12, 3
	cmp	QWORD PTR [r15+16], rcx
	jne	SHORT $LN139@dock@2
	lea	rcx, QWORD PTR [r15+8]
	call	?_Reserve@?$vector@PEAUsmem_value@@V?$xalloc@PEAUsmem_value@@@@@std@@IEAAX_K@Z ; std::vector<smem_value * __ptr64,xalloc<smem_value * __ptr64> >::_Reserve
$LN139@dock@2:
	mov	rax, QWORD PTR [r15+16]
	test	rax, rax
	je	SHORT $LN154@dock@2
	mov	QWORD PTR [rax], rsi
$LN154@dock@2:
	add	QWORD PTR [r15+16], 8
	mov	rax, QWORD PTR [r15+8]
	mov	r8, QWORD PTR [r15+16]
	lea	rdx, QWORD PTR [r8-8]
	lea	rcx, QWORD PTR [rax+r12*8]
	cmp	rcx, rdx
	je	SHORT $LN253@dock@2
	cmp	rdx, r8
	je	SHORT $LN253@dock@2
	call	??$_Rotate@PEAPEAUsmem_value@@_JPEAU1@@std@@YAXPEAPEAUsmem_value@@00PEA_J0@Z ; std::_Rotate<smem_value * __ptr64 * __ptr64,__int64,smem_value * __ptr64>
$LN253@dock@2:

; 51   : 	}
; 52   : 
; 53   : 	// exit
; 54   : 	cs.Leave					();

	mov	rcx, QWORD PTR [r15]
	call	QWORD PTR __imp_LeaveCriticalSection

; 55   : 	return						result;
; 56   : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?dock@smem_container@@QEAAPEAUsmem_value@@IIPEAX@Z ENDP	; smem_container::dock
END
