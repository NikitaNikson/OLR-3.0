; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB OLDNAMES

g_bHasVersion DD 01H DUP (?)
_BSS	ENDS
g_bIsNT	DD	01H
PI_MUL_2 DD	040c90fdbr			; 6.28319
PUBLIC	IsNT
	ALIGN	4

_Tuple_alloc DB	01H DUP (?)
	ALIGN	4

ignore	DB	01H DUP (?)
	ALIGN	4

allocator_arg DB 01H DUP (?)
	ALIGN	4

piecewise_construct DB 01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$IsNT DD	imagerel $LN263
	DD	imagerel $LN263+142
	DD	imagerel $unwind$IsNT
xdata	SEGMENT
$unwind$IsNT DD	020701H
	DD	0190107H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\blackbox\isnt.cpp
_TEXT	SEGMENT
stOSVI$ = 32
IsNT	PROC

; 19   : {

$LN263:
	sub	rsp, 200				; 000000c8H

; 20   :     if ( TRUE == g_bHasVersion )

	cmp	DWORD PTR g_bHasVersion, 1
	jne	SHORT $LN4@IsNT

; 21   :     {
; 22   :         return ( TRUE == g_bIsNT ) ;

	xor	eax, eax
	cmp	DWORD PTR g_bIsNT, 1

; 48   :     return ( TRUE == g_bIsNT ) ;

	sete	al

; 49   : }

	add	rsp, 200				; 000000c8H
	ret	0
$LN4@IsNT:

; 23   :     }
; 24   : 
; 25   :     OSVERSIONINFO stOSVI ;
; 26   : 
; 27   :     FillMemory ( &stOSVI , sizeof ( OSVERSIONINFO ), NULL ) ;

	lea	rcx, QWORD PTR stOSVI$[rsp]
	xor	edx, edx
	mov	r8d, 148				; 00000094H
	call	QWORD PTR ?Memory@@3VxrMemory@@A+16

; 28   :     stOSVI.dwOSVersionInfoSize = sizeof ( OSVERSIONINFO ) ;
; 29   : 
; 30   :     BOOL bRet = GetVersionEx ( &stOSVI ) ;

	lea	rcx, QWORD PTR stOSVI$[rsp]
	mov	DWORD PTR stOSVI$[rsp], 148		; 00000094H
	call	QWORD PTR __imp_GetVersionExA

; 31   :     ASSERT ( TRUE == bRet ) ;
; 32   :     if ( FALSE == bRet )

	test	eax, eax
	jne	SHORT $LN3@IsNT

; 33   :     {
; 34   :         TRACE0 ( "GetVersionEx failed!\n" ) ;

	lea	rcx, OFFSET FLAT:??_C@_0BG@NMFPCNDP@GetVersionEx?5failed?$CB?6?$AA@
	call	?Log@@YAXPEBD@Z				; Log

; 35   :         return ( FALSE ) ;

	xor	eax, eax

; 49   : }

	add	rsp, 200				; 000000c8H
	ret	0
$LN3@IsNT:

; 36   :     }
; 37   : 
; 38   :     // Check the version and call the appropriate thing.
; 39   :     if ( VER_PLATFORM_WIN32_NT == stOSVI.dwPlatformId )

	xor	eax, eax
	cmp	DWORD PTR stOSVI$[rsp+16], 2

; 40   :     {
; 41   :         g_bIsNT = TRUE ;
; 42   :     }
; 43   :     else
; 44   :     {
; 45   :         g_bIsNT = FALSE ;
; 46   :     }
; 47   :     g_bHasVersion = TRUE ;

	mov	DWORD PTR g_bHasVersion, 1
	mov	ecx, eax
	sete	cl

; 48   :     return ( TRUE == g_bIsNT ) ;

	cmp	ecx, 1
	mov	DWORD PTR g_bIsNT, ecx
	sete	al

; 49   : }

	add	rsp, 200				; 000000c8H
	ret	0
IsNT	ENDP
_TEXT	ENDS
END
