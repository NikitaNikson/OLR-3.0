; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::begin
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::_String_iterator<char,std::char_traits<char>,xalloc<char> >
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::end
PUBLIC	?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAXAEBV12@@Z ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_Compat
PUBLIC	??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator==
PUBLIC	??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator!=
PUBLIC	??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEBDXZ ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator*
PUBLIC	??D?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEADXZ ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator*
PUBLIC	??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
PUBLIC	??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
PUBLIC	??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
PUBLIC	?_Inside@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_NPEBQEAD@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Inside
PUBLIC	??$xr_alloc@PEAD@@YAPEAPEADI@Z			; xr_alloc<char * __ptr64>
PUBLIC	?allocate@?$xalloc@PEAD@@QEBAPEAPEAD_KPEBX@Z	; xalloc<char * __ptr64>::allocate
PUBLIC	??$xr_free@PEAD@@YAXAEAPEAPEAD@Z		; xr_free<char * __ptr64>
PUBLIC	?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z	; xalloc<char * __ptr64>::deallocate
PUBLIC	??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<char * __ptr64> >
PUBLIC	??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@@Z ; std::_Destroy_range<xalloc<char * __ptr64> >
PUBLIC	?_Destroy@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAXPEAPEAD0@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Destroy
PUBLIC	??$_Ptr_cat@PEADPEAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAPEAD0@Z ; std::_Ptr_cat<char * __ptr64,char * __ptr64>
PUBLIC	??$_Val_type@PEAPEAD@std@@YAPEAPEADPEAPEAD@Z	; std::_Val_type<char * __ptr64 * __ptr64>
PUBLIC	??$_Destroy@PEAD@std@@YAXPEAPEAD@Z		; std::_Destroy<char * __ptr64>
PUBLIC	?destroy@?$xalloc@PEAD@@QEAAXPEAPEAD@Z		; xalloc<char * __ptr64>::destroy
PUBLIC	??$_Dest_val@V?$xalloc@PEAD@@PEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD@Z ; std::_Dest_val<xalloc<char * __ptr64>,char * __ptr64>
PUBLIC	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
PUBLIC	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
PUBLIC	??$_Uninitialized_move@PEAPEADPEAPEADV?$xalloc@PEAD@@@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@@Z ; std::_Uninitialized_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64> >
PUBLIC	??$_Umove@PEAPEAD@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAPEAPEADPEAPEAD00@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Umove<char * __ptr64 * __ptr64>
PUBLIC	?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve
PUBLIC	?size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::size
PUBLIC	?capacity@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::capacity
PUBLIC	?max_size@?$xalloc@PEAD@@QEBA_KXZ		; xalloc<char * __ptr64>::max_size
PUBLIC	?max_size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::max_size
PUBLIC	?_Grow_to@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_K_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Grow_to
PUBLIC	?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Xlen
PUBLIC	?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXPEAPEAD0@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Orphan_range
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char * __ptr64>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * __ptr64 const & __ptr64>
PUBLIC	??$_Construct@PEADAEBQEAD@std@@YAXPEAPEADAEBQEAD@Z ; std::_Construct<char * __ptr64,char * __ptr64 const & __ptr64>
PUBLIC	?construct@?$xalloc@PEAD@@QEAAXPEAPEADAEBQEAD@Z	; xalloc<char * __ptr64>::construct
PUBLIC	??$forward@PEAD@std@@YA$$QEAPEADAEAPEAD@Z	; std::forward<char * __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@PEAD@@PEADPEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD$$QEAPEAD@Z ; std::_Cons_val<xalloc<char * __ptr64>,char * __ptr64,char * __ptr64>
PUBLIC	?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::push_back
PUBLIC	?_Inside@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_NPEBVshared_str@@@Z ; std::vector<shared_str,xalloc<shared_str> >::_Inside
PUBLIC	??$xr_alloc@Vshared_str@@@@YAPEAVshared_str@@I@Z ; xr_alloc<shared_str>
PUBLIC	?allocate@?$xalloc@Vshared_str@@@@QEBAPEAVshared_str@@_KPEBX@Z ; xalloc<shared_str>::allocate
PUBLIC	??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z ; xr_free<shared_str>
PUBLIC	?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z ; xalloc<shared_str>::deallocate
PUBLIC	??$_Val_type@PEAVshared_str@@@std@@YAPEAVshared_str@@PEAV1@@Z ; std::_Val_type<shared_str * __ptr64>
PUBLIC	??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>
PUBLIC	??$_Uninitialized_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@@Z ; std::_Uninitialized_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str> >
PUBLIC	??$_Umove@PEAVshared_str@@@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAPEAVshared_str@@PEAV2@00@Z ; std::vector<shared_str,xalloc<shared_str> >::_Umove<shared_str * __ptr64>
PUBLIC	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::reserve
PUBLIC	?capacity@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ; std::vector<shared_str,xalloc<shared_str> >::capacity
PUBLIC	?max_size@?$xalloc@Vshared_str@@@@QEBA_KXZ	; xalloc<shared_str>::max_size
PUBLIC	?max_size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ; std::vector<shared_str,xalloc<shared_str> >::max_size
PUBLIC	?_Grow_to@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_K_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ ; std::vector<shared_str,xalloc<shared_str> >::_Xlen
PUBLIC	?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXPEAVshared_str@@0@Z ; std::vector<shared_str,xalloc<shared_str> >::_Orphan_range
PUBLIC	??$addressof@Vshared_str@@@std@@YAPEAVshared_str@@AEAV1@@Z ; std::addressof<shared_str>
PUBLIC	??$forward@AEBVshared_str@@@std@@YAAEBVshared_str@@AEBV1@@Z ; std::forward<shared_str const & __ptr64>
PUBLIC	??$_Construct@Vshared_str@@AEBV1@@std@@YAXPEAVshared_str@@AEBV1@@Z ; std::_Construct<shared_str,shared_str const & __ptr64>
PUBLIC	?construct@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@AEBV2@@Z ; xalloc<shared_str>::construct
PUBLIC	??$forward@Vshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z ; std::forward<shared_str>
PUBLIC	??$_Cons_val@V?$xalloc@Vshared_str@@@@Vshared_str@@V2@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@$$QEAV2@@Z ; std::_Cons_val<xalloc<shared_str>,shared_str,shared_str>
PUBLIC	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z ; std::vector<shared_str,xalloc<shared_str> >::push_back
PUBLIC	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ; std::vector<shared_str,xalloc<shared_str> >::begin
PUBLIC	?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ; std::vector<shared_str,xalloc<shared_str> >::end
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >
PUBLIC	?_Make_iter@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@@Z ; std::vector<shared_str,xalloc<shared_str> >::_Make_iter
PUBLIC	??_Gshared_str@@QEAAPEAXI@Z			; shared_str::`scalar deleting destructor'
PUBLIC	??$_Destroy@Vshared_str@@@std@@YAXPEAVshared_str@@@Z ; std::_Destroy<shared_str>
PUBLIC	?destroy@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@@Z ; xalloc<shared_str>::destroy
PUBLIC	??$_Dest_val@V?$xalloc@Vshared_str@@@@Vshared_str@@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@@Z ; std::_Dest_val<xalloc<shared_str>,shared_str>
PUBLIC	??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<shared_str> >
PUBLIC	??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@@Z ; std::_Destroy_range<xalloc<shared_str> >
PUBLIC	?_Destroy@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAXPEAVshared_str@@0@Z ; std::vector<shared_str,xalloc<shared_str> >::_Destroy
PUBLIC	??$_Ptr_cat@Vshared_str@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVshared_str@@0@Z ; std::_Ptr_cat<shared_str,shared_str>
PUBLIC	??$move@AEAVshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z ; std::move<shared_str & __ptr64>
PUBLIC	??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>
PUBLIC	??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00@Z ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>
PUBLIC	?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z ; std::vector<shared_str,xalloc<shared_str> >::erase
PUBLIC	?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ ; std::vector<shared_str,xalloc<shared_str> >::clear
PUBLIC	?clear_and_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_and_free
PUBLIC	?clear@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear
PUBLIC	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_NPEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Inside
PUBLIC	??$xr_alloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@I@Z ; xr_alloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	?allocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_KPEBX@Z ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::allocate
PUBLIC	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::deallocate
PUBLIC	??$_Val_type@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
PUBLIC	??$_Umove@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::capacity
PUBLIC	?max_size@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBA_KXZ ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::max_size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::max_size
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_K_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Grow_to
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Xlen
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Orphan_range
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>
PUBLIC	?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::construct
PUBLIC	??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::push_back
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >
PUBLIC	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Make_iter
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::destroy
PUBLIC	??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::_Dest_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
PUBLIC	??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=
PUBLIC	??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::erase
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
PUBLIC	?clear_and_free@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear_and_free
PUBLIC	?clear@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin
PUBLIC	?front@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::front
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size
PUBLIC	?size@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEBAIXZ ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=
PUBLIC	??H?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator!=
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,xalloc<char> >
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA?AV?$xalloc@D@@XZ ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::get_allocator
PUBLIC	??$?9DD@@YA_NAEBV?$xalloc@D@@0@Z		; operator!=<char,char>
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
PUBLIC	??$forward@V?$xalloc@D@@@std@@YA$$QEAV?$xalloc@D@@AEAV1@@Z ; std::forward<xalloc<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::reserve
PUBLIC	??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z ; std::operator+<char,std::char_traits<char>,xalloc<char> >
PUBLIC	?compare@?$char_traits@D@std@@SAHPEBD0_K@Z	; std::char_traits<char>::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
PUBLIC	??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::operator==<char,std::char_traits<char>,xalloc<char> >
PUBLIC	??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::operator!=<char,std::char_traits<char>,xalloc<char> >
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::length
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Inside
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=
PUBLIC	?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ; std::vector<shared_str,xalloc<shared_str> >::end
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >
PUBLIC	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ; std::vector<shared_str,xalloc<shared_str> >::begin
PUBLIC	?front@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBAAEBVshared_str@@XZ ; std::vector<shared_str,xalloc<shared_str> >::front
PUBLIC	?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ; std::vector<shared_str,xalloc<shared_str> >::size
PUBLIC	?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEBAIXZ ; xr_vector<shared_str,xalloc<shared_str> >::size
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAAEBVshared_str@@XZ ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+=
PUBLIC	??H?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator!=
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
EXTRN	__imp_stricmp:PROC
EXTRN	__imp_strchr:PROC
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator++, COMDAT

; 102  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 103  : 		if (this->_Getcont() == 0
; 104  : 			|| this->_Ptr == 0
; 105  : 			|| ((_Mystr *)this->_Getcont())->_Myptr()
; 106  : 				+ ((_Mystr *)this->_Getcont())->_Mysize <= this->_Ptr)
; 107  : 			{	// report error
; 108  : 			_DEBUG_ERROR("string iterator not incrementable");
; 109  : 			_SCL_SECURE_OUT_OF_RANGE;
; 110  : 			}
; 111  : 
; 112  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 113  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 114  : 		_SCL_SECURE_VALIDATE_RANGE(
; 115  : 			this->_Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 116  : 				+ ((_Mystr *)this->_Getcont())->_Mysize);
; 117  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 118  : 
; 119  : 		++this->_Ptr;

	inc	QWORD PTR [rcx]

; 120  : 		return (*this);

	mov	rax, rcx

; 121  : 		}

	ret	0
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAXAEBV12@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_Compat, COMDAT

; 264  : 		}

	ret	0
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAXAEBV12@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_Compat
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEBDXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEBDXZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator*, COMDAT

; 71   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 72   : 		if (this->_Getcont() == 0
; 73   : 			|| this->_Ptr == 0
; 74   : 			|| this->_Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 75   : 			|| ((_Mystr *)this->_Getcont())->_Myptr()
; 76   : 				+ ((_Mystr *)this->_Getcont())->_Mysize <= this->_Ptr)
; 77   : 			{	// report error
; 78   : 			_DEBUG_ERROR("string iterator not dereferencable");
; 79   : 			_SCL_SECURE_OUT_OF_RANGE;
; 80   : 			}
; 81   : 
; 82   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 83   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 84   : 		_SCL_SECURE_VALIDATE_RANGE(
; 85   : 			((_Mystr *)this->_Getcont())->_Myptr() <= this->_Ptr
; 86   : 			&& this->_Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 87   : 				+ ((_Mystr *)this->_Getcont())->_Mysize);
; 88   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 89   : 
; 90   : 		__analysis_assume(this->_Ptr != 0);
; 91   : 
; 92   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 93   : 		}

	ret	0
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEBDXZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator*
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?length@?$char_traits@D@std@@SA_KPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?length@?$char_traits@D@std@@SA_KPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@D@std@@SA_KPEBD@Z DD 020501H
	DD	017405H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

$LN3:
	mov	QWORD PTR [rsp+8], rdi
	mov	rdi, rcx

; 491  : 		return (_CSTD strlen(_First));

	xor	eax, eax
	or	rcx, -1
	repne scasb

; 492  : 		}

	mov	rdi, QWORD PTR [rsp+8]
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	ret	0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
EXTRN	memcmp:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?compare@?$char_traits@D@std@@SAHPEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?compare@?$char_traits@D@std@@SAHPEBD0_K@Z PROC		; std::char_traits<char>::compare, COMDAT

; 486  : 		return (_CSTD memcmp(_First1, _First2, _Count));
; 487  : 		}

	jmp	memcmp
?compare@?$char_traits@D@std@@SAHPEBD0_K@Z ENDP		; std::char_traits<char>::compare
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@PEAD@std@@YAXPEAPEAD@Z
_TEXT	SEGMENT
??$_Destroy@PEAD@std@@YAXPEAPEAD@Z PROC			; std::_Destroy<char * __ptr64>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	ret	0
??$_Destroy@PEAD@std@@YAXPEAPEAD@Z ENDP			; std::_Destroy<char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?destroy@?$xalloc@PEAD@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
?destroy@?$xalloc@PEAD@@QEAAXPEAPEAD@Z PROC		; xalloc<char * __ptr64>::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

	ret	0
?destroy@?$xalloc@PEAD@@QEAAXPEAPEAD@Z ENDP		; xalloc<char * __ptr64>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@PEAD@@PEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD@Z
_TEXT	SEGMENT
??$_Dest_val@V?$xalloc@PEAD@@PEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD@Z PROC ; std::_Dest_val<xalloc<char * __ptr64>,char * __ptr64>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

	ret	0
??$_Dest_val@V?$xalloc@PEAD@@PEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD@Z ENDP ; std::_Dest_val<xalloc<char * __ptr64>,char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AEBVshared_str@@@std@@YAAEBVshared_str@@AEBV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBVshared_str@@@std@@YAAEBVshared_str@@AEBV1@@Z PROC ; std::forward<shared_str const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBVshared_str@@@std@@YAAEBVshared_str@@AEBV1@@Z ENDP ; std::forward<shared_str const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * __ptr64 const & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * __ptr64 const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$move@AEAVshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAVshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z PROC ; std::move<shared_str & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAVshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z ENDP ; std::move<shared_str & __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAVshared_str@@@std@@YAPEAVshared_str@@PEAV1@@Z
_TEXT	SEGMENT
??$_Val_type@PEAVshared_str@@@std@@YAPEAVshared_str@@PEAV1@@Z PROC ; std::_Val_type<shared_str * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAVshared_str@@@std@@YAPEAVshared_str@@PEAV1@@Z ENDP ; std::_Val_type<shared_str * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@@Z
_TEXT	SEGMENT
??$_Val_type@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@@Z PROC ; std::_Val_type<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@@Z ENDP ; std::_Val_type<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Val_type@PEAPEAD@std@@YAPEAPEADPEAPEAD@Z
_TEXT	SEGMENT
??$_Val_type@PEAPEAD@std@@YAPEAPEADPEAPEAD@Z PROC	; std::_Val_type<char * __ptr64 * __ptr64>, COMDAT

; 790  : 	return (0);

	xor	eax, eax

; 791  : 	}

	ret	0
??$_Val_type@PEAPEAD@std@@YAPEAPEADPEAPEAD@Z ENDP	; std::_Val_type<char * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?9DD@@YA_NAEBV?$xalloc@D@@0@Z
_TEXT	SEGMENT
??$?9DD@@YA_NAEBV?$xalloc@D@@0@Z PROC			; operator!=<char,char>, COMDAT

; 101  : template<class _Ty, class _Other>	inline	bool operator!=(const xalloc<_Ty>&, const xalloc<_Other>&)		{	return (false);							}

	xor	al, al
	ret	0
??$?9DD@@YA_NAEBV?$xalloc@D@@0@Z ENDP			; operator!=<char,char>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@V?$xalloc@D@@@std@@YA$$QEAV?$xalloc@D@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$xalloc@D@@@std@@YA$$QEAV?$xalloc@D@@AEAV1@@Z PROC ; std::forward<xalloc<char> >, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@V?$xalloc@D@@@std@@YA$$QEAV?$xalloc@D@@AEAV1@@Z ENDP ; std::forward<xalloc<char> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vshared_str@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVshared_str@@0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@Vshared_str@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVshared_str@@0@Z PROC ; std::_Ptr_cat<shared_str,shared_str>, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@Vshared_str@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAVshared_str@@0@Z ENDP ; std::_Ptr_cat<shared_str,shared_str>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<char * __ptr64> >, COMDAT

; 105  : 	}

	ret	0
??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<char * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PEADPEAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAPEAD0@Z
_TEXT	SEGMENT
_Cat$ = 8
??$_Ptr_cat@PEADPEAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAPEAD0@Z PROC ; std::_Ptr_cat<char * __ptr64,char * __ptr64>, COMDAT

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

	movzx	eax, BYTE PTR _Cat$[rsp]

; 519  : 	}

	ret	0
??$_Ptr_cat@PEADPEAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PEAPEAD0@Z ENDP ; std::_Ptr_cat<char * __ptr64,char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@Vshared_str@@@@YAPEAVshared_str@@I@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@Vshared_str@@@@YAPEAVshared_str@@I@Z PROC	; xr_alloc<shared_str>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	edx, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
??$xr_alloc@Vshared_str@@@@YAPEAVshared_str@@I@Z ENDP	; xr_alloc<shared_str>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@@Z PROC ; std::_Destroy_range<xalloc<char * __ptr64> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

	ret	0
??$_Destroy_range@V?$xalloc@PEAD@@@std@@YAXPEAPEAD0AEAV?$xalloc@PEAD@@@Z ENDP ; std::_Destroy_range<xalloc<char * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@Vshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@Vshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z PROC ; std::forward<shared_str>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@Vshared_str@@@std@@YA$$QEAVshared_str@@AEAV1@@Z ENDP ; std::forward<shared_str>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@Vshared_str@@@std@@YAPEAVshared_str@@AEAV1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@Vshared_str@@@std@@YAPEAVshared_str@@AEAV1@@Z PROC ; std::addressof<shared_str>, COMDAT

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	rax, rcx

; 112  : 	}

	ret	0
??$addressof@Vshared_str@@@std@@YAPEAVshared_str@@AEAV1@@Z ENDP ; std::addressof<shared_str>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	rax, rcx

; 112  : 	}

	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@PEAD@std@@YA$$QEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAD@std@@YA$$QEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@PEAD@std@@YA$$QEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char * __ptr64>, COMDAT

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	rax, rcx

; 112  : 	}

	ret	0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@Vshared_str@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@Vshared_str@@@@QEBA_KXZ PROC		; xalloc<shared_str>::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	ret	0
?max_size@?$xalloc@Vshared_str@@@@QEBA_KXZ ENDP		; xalloc<shared_str>::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@Vshared_str@@@@QEBAPEAVshared_str@@_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@Vshared_str@@@@QEBAPEAVshared_str@@_KPEBX@Z PROC ; xalloc<shared_str>::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	edx, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
?allocate@?$xalloc@Vshared_str@@@@QEBAPEAVshared_str@@_KPEBX@Z ENDP ; xalloc<shared_str>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBA_KXZ PROC ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 461168601842738790			; 0666666666666666H
	ret	0
?max_size@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBA_KXZ ENDP ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@PEAD@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@PEAD@@QEBA_KXZ PROC			; xalloc<char * __ptr64>::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	ret	0
?max_size@?$xalloc@PEAD@@QEBA_KXZ ENDP			; xalloc<char * __ptr64>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAXPEAPEAD0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAXPEAPEAD0@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Destroy, COMDAT

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

	ret	0
?_Destroy@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAXPEAPEAD0@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Compat, COMDAT

; 253  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Compat
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Compat, COMDAT

; 253  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Compat
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@3:
?_Xlen@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 885  : 		}

	ret	0
?max_size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 778  : 		}

	ret	0
?capacity@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::capacity
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@4:
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 461168601842738790			; 0666666666666666H

; 885  : 		}

	ret	0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, 7378697629483820647		; 6666666666666667H
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 778  : 		}

	ret	0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::capacity
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ PROC	; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Xlen, COMDAT

; 1426 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1427 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen@5:
?_Xlen@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXXZ ENDP	; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Xlen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::max_size, COMDAT

; 884  : 		return (this->_Alval.max_size());

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 885  : 		}

	ret	0
?max_size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ PROC	; std::vector<char * __ptr64,xalloc<char * __ptr64> >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 880  : 		}

	ret	0
?size@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ENDP	; std::vector<char * __ptr64,xalloc<char * __ptr64> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::capacity, COMDAT

; 777  : 		return (this->_Myend - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 778  : 		}

	ret	0
?capacity@?$vector@PEADV?$xalloc@PEAD@@@std@@QEBA_KXZ ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::capacity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator==, COMDAT

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 204  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx*8]
	add	QWORD PTR [rcx], rax

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++, COMDAT

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

	add	QWORD PTR [rcx], 8

; 111  : 		return (*this);

	mov	rax, rcx

; 112  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator==, COMDAT

; 202  : 		_Compat(_Right);
; 203  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 204  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=, COMDAT

; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 		if (this->_Getcont() == 0
; 154  : 			|| this->_Ptr + _Off < ((_Myvec *)this->_Getcont())->_Myfirst
; 155  : 			|| ((_Myvec *)this->_Getcont())->_Mylast < this->_Ptr + _Off)
; 156  : 			{	// report error
; 157  : 			_DEBUG_ERROR("vector iterator + offset out of range");
; 158  : 			_SCL_SECURE_OUT_OF_RANGE;
; 159  : 			}
; 160  : 
; 161  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 162  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 163  : 		_SCL_SECURE_VALIDATE_RANGE(
; 164  : 			((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr + _Off
; 165  : 			&& this->_Ptr + _Off <= ((_Myvec *)this->_Getcont())->_Mylast);
; 166  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 167  : 
; 168  : 		_Ptr += _Off;

	lea	rax, QWORD PTR [rdx+rdx*4]
	shl	rax, 3
	add	QWORD PTR [rcx], rax

; 169  : 		return (*this);

	mov	rax, rcx

; 170  : 		}

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++, COMDAT

; 94   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 95   : 		if (this->_Getcont() == 0
; 96   : 			|| this->_Ptr == 0
; 97   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 98   : 			{	// report error
; 99   : 			_DEBUG_ERROR("vector iterator not incrementable");
; 100  : 			_SCL_SECURE_OUT_OF_RANGE;
; 101  : 			}
; 102  : 
; 103  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 104  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 105  : 		_SCL_SECURE_VALIDATE_RANGE(
; 106  : 			this->_Ptr != 0
; 107  : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 108  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 109  : 
; 110  : 		++this->_Ptr;

	add	QWORD PTR [rcx], 40			; 00000028H

; 111  : 		return (*this);

	mov	rax, rcx

; 112  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXPEAVshared_str@@0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXPEAVshared_str@@0@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBAXPEAVshared_str@@0@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Orphan_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_NPEBVshared_str@@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_NPEBVshared_str@@@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Inside, COMDAT

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	cmp	rdx, QWORD PTR [rcx+8]
	jae	SHORT $LN3@Inside@5
	cmp	QWORD PTR [rcx], rdx
	ja	SHORT $LN3@Inside@5
	mov	al, 1

; 1287 : 		}

	ret	0
$LN3@Inside@5:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	xor	al, al

; 1287 : 		}

	ret	0
?_Inside@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_NPEBVshared_str@@@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Inside
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 880  : 		}

	ret	0
?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA_KXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Orphan_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_NPEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_NPEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Inside, COMDAT

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	cmp	rdx, QWORD PTR [rcx+8]
	jae	SHORT $LN3@Inside@6
	cmp	QWORD PTR [rcx], rdx
	ja	SHORT $LN3@Inside@6
	mov	al, 1

; 1287 : 		}

	ret	0
$LN3@Inside@6:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	xor	al, al

; 1287 : 		}

	ret	0
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_NPEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Inside
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size, COMDAT

; 879  : 		return (this->_Mylast - this->_Myfirst);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 7378697629483820647		; 6666666666666667H
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx

; 880  : 		}

	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXPEAPEAD0@Z
_TEXT	SEGMENT
?_Orphan_range@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXPEAPEAD0@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Orphan_range, COMDAT

; 1454 : 		}

	ret	0
?_Orphan_range@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBAXPEAPEAD0@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Orphan_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_NPEBQEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_NPEBQEAD@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Inside, COMDAT

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	cmp	rdx, QWORD PTR [rcx+8]
	jae	SHORT $LN3@Inside@7
	cmp	QWORD PTR [rcx], rdx
	ja	SHORT $LN3@Inside@7
	mov	al, 1

; 1287 : 		}

	ret	0
$LN3@Inside@7:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

	xor	al, al

; 1287 : 		}

	ret	0
?_Inside@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_NPEBQEAD@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Inside
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator!=, COMDAT

; 208  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 209  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??H?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+, COMDAT

; 174  : 		_Myiter _Tmp = *this;
; 175  : 		return (_Tmp += _Off);

	mov	rax, QWORD PTR [rcx]
	add	rax, 8
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 176  : 		}

	ret	0
??H?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++, COMDAT

; 116  : 		_Myiter _Tmp = *this;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 117  : 		++*this;

	add	rax, 8
	mov	QWORD PTR [rcx], rax

; 118  : 		return (_Tmp);

	mov	rax, rdx

; 119  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAAEBVshared_str@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAAEBVshared_str@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEBAAEBVshared_str@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator!=, COMDAT

; 208  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 209  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??H?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+, COMDAT

; 174  : 		_Myiter _Tmp = *this;
; 175  : 		return (_Tmp += _Off);

	mov	rax, QWORD PTR [rcx]
	add	rax, 40					; 00000028H
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 176  : 		}

	ret	0
??H?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++, COMDAT

; 116  : 		_Myiter _Tmp = *this;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 117  : 		++*this;

	add	rax, 40					; 00000028H
	mov	QWORD PTR [rcx], rax

; 118  : 		return (_Tmp);

	mov	rax, rdx

; 119  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator*, COMDAT

; 64   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 65   : 		if (this->_Getcont() == 0
; 66   : 			|| this->_Ptr == 0
; 67   : 			|| this->_Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 68   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= this->_Ptr)
; 69   : 			{	// report error
; 70   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 71   : 			_SCL_SECURE_OUT_OF_RANGE;
; 72   : 			}
; 73   : 
; 74   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 75   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 76   : 		_SCL_SECURE_VALIDATE_RANGE(
; 77   : 			this->_Ptr != 0
; 78   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= this->_Ptr
; 79   : 			&& this->_Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 80   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 81   : 
; 82   : 		__analysis_assume(this->_Ptr != 0);
; 83   : 
; 84   : 		return (*this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 85   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator*
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEBAIXZ PROC ; xr_vector<shared_str,xalloc<shared_str> >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3
	ret	0
?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEBAIXZ ENDP ; xr_vector<shared_str,xalloc<shared_str> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?length@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::length, COMDAT

; 1506 : 		return (this->_Mysize);

	mov	rax, QWORD PTR [rcx+16]

; 1507 : 		}

	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::length
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?size@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEBAIXZ PROC ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size, COMDAT

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	rdx, QWORD PTR [rcx+8]
	mov	rax, 7378697629483820647		; 6666666666666667H
	sub	rdx, QWORD PTR [rcx]
	imul	rdx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rax, rdx
	ret	0
?size@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEBAIXZ ENDP ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::size
_TEXT	ENDS
PUBLIC	?_ChangeSymbol@@YAPEADPEADDD@Z			; _ChangeSymbol
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
_TEXT	SEGMENT
name$ = 8
src$ = 16
dest$ = 24
?_ChangeSymbol@@YAPEADPEADDD@Z PROC			; _ChangeSymbol

; 152  :     char						*sTmpName = name;
; 153  :     while(sTmpName[0] ){

	cmp	BYTE PTR [rcx], 0
	mov	r10, rcx
	je	SHORT $LN8@ChangeSymb
	npad	8
$LL3@ChangeSymb:

; 154  : 		if (sTmpName[0] == src) sTmpName[0] = dest;

	cmp	BYTE PTR [r10], dl
	movzx	r9d, BYTE PTR [r10]
	movzx	eax, r8b
	cmove	r9d, eax

; 155  : 		sTmpName ++;

	inc	r10
	mov	BYTE PTR [r10-1], r9b
	cmp	BYTE PTR [r10], 0
	jne	SHORT $LL3@ChangeSymb
$LN8@ChangeSymb:

; 156  : 	}
; 157  : 	return						name;

	mov	rax, rcx

; 158  : }

	ret	0
?_ChangeSymbol@@YAPEADPEADDD@Z ENDP			; _ChangeSymbol
_TEXT	ENDS
PUBLIC	?_ReplaceItem@@YAPEADPEBDH0PEADD@Z		; _ReplaceItem
pdata	SEGMENT
$pdata$?_ReplaceItem@@YAPEADPEBDH0PEADD@Z DD imagerel $LN20
	DD	imagerel $LN20+179
	DD	imagerel $unwind$?_ReplaceItem@@YAPEADPEBDH0PEADD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ReplaceItem@@YAPEADPEBDH0PEADD@Z DD 060f01H
	DD	03740fH
	DD	02640aH
	DD	013405H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 8
index$ = 16
new_item$ = 24
dst$ = 32
separator$ = 40
?_ReplaceItem@@YAPEADPEBDH0PEADD@Z PROC			; _ReplaceItem

; 130  : LPSTR _ReplaceItem ( LPCSTR src, int index, LPCSTR new_item, LPSTR dst, char separator ){

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	rsi, r9

; 131  : 	LPSTR n = dst;

	mov	r10, r9

; 132  :     int level = 0;

	xor	r9d, r9d
	mov	rbx, r8
	mov	edi, edx

; 133  :     bool bCopy = true;

	mov	r11b, 1

; 134  : 	for (LPCSTR p=src; *p!=0; p++){

	cmp	BYTE PTR [rcx], r9b
	je	SHORT $LN17@ReplaceIte
	movzx	r8d, BYTE PTR separator$[rsp]
	npad	5
$LL10@ReplaceIte:

; 135  :     	if (level==index){

	cmp	r9d, edi
	jne	SHORT $LN7@ReplaceIte

; 136  :         	if (bCopy){

	test	r11b, r11b
	je	SHORT $LN6@ReplaceIte

; 137  :             	for (LPCSTR itm = new_item; *itm!=0;) *n++ = *itm++;

	movzx	eax, BYTE PTR [rbx]
	test	al, al
	je	SHORT $LN4@ReplaceIte
	mov	rdx, rbx
	sub	rdx, r10
	npad	9
$LL5@ReplaceIte:
	mov	BYTE PTR [r10], al
	movzx	eax, BYTE PTR [rdx+r10+1]
	inc	r10
	test	al, al
	jne	SHORT $LL5@ReplaceIte
$LN4@ReplaceIte:

; 138  :                 bCopy=false;

	xor	r11b, r11b
$LN6@ReplaceIte:

; 139  :             }
; 140  : 	    	if (*p==separator) *n++ = separator;

	cmp	BYTE PTR [rcx], r8b
	jne	SHORT $LN9@ReplaceIte
	mov	BYTE PTR [r10], r8b

; 141  :         }else{

	jmp	SHORT $LN18@ReplaceIte
$LN7@ReplaceIte:

; 142  : 			*n++ = *p;

	movzx	eax, BYTE PTR [rcx]
	mov	BYTE PTR [r10], al
$LN18@ReplaceIte:
	inc	r10

; 143  :         }
; 144  :     	if (*p==separator) level++;

	cmp	BYTE PTR [rcx], r8b
	jne	SHORT $LN9@ReplaceIte
	inc	r9d
$LN9@ReplaceIte:

; 134  : 	for (LPCSTR p=src; *p!=0; p++){

	inc	rcx
	cmp	BYTE PTR [rcx], 0
	jne	SHORT $LL10@ReplaceIte

; 145  :     }
; 146  :     *n = '\0';

	mov	BYTE PTR [r10], 0

; 147  : 	return dst;

	mov	rax, rsi

; 148  : }

	mov	rbx, QWORD PTR [rsp+8]
	mov	rsi, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
	ret	0
$LN17@ReplaceIte:
	mov	rbx, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+24]
	mov	BYTE PTR [rsi], r9b
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+16]
	ret	0
?_ReplaceItem@@YAPEADPEBDH0PEADD@Z ENDP			; _ReplaceItem
_TEXT	ENDS
PUBLIC	?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z		; _ReplaceItems
pdata	SEGMENT
$pdata$?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z DD imagerel $LN19
	DD	imagerel $LN19+155
	DD	imagerel $unwind$?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z DD 040a01H
	DD	02740aH
	DD	016405H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 8
idx_start$ = 16
idx_end$ = 24
new_items$ = 32
dst$ = 40
separator$ = 48
?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z PROC		; _ReplaceItems

; 110  : LPSTR _ReplaceItems( LPCSTR src, int idx_start, int idx_end, LPCSTR new_items, LPSTR dst, char separator ){

$LN19:
	mov	QWORD PTR [rsp+8], rsi
	mov	QWORD PTR [rsp+16], rdi

; 111  : 	LPSTR n = dst;

	mov	r10, QWORD PTR dst$[rsp]
	mov	r11, rcx
	mov	esi, edx

; 112  :     int level = 0;

	xor	edx, edx
	mov	edi, r8d

; 113  :     bool bCopy = true;

	mov	cl, 1

; 114  : 	for (LPCSTR p=src; *p!=0; p++){

	cmp	BYTE PTR [r11], dl
	je	SHORT $LN17@ReplaceIte@2
	movzx	r8d, BYTE PTR separator$[rsp]
$LL10@ReplaceIte@2:

; 115  :     	if ((level>=idx_start)&&(level<idx_end)){

	cmp	edx, esi
	jl	SHORT $LN7@ReplaceIte@2
	cmp	edx, edi
	jge	SHORT $LN7@ReplaceIte@2

; 116  :         	if (bCopy){

	test	cl, cl
	je	SHORT $LN6@ReplaceIte@2

; 117  :             	for (LPCSTR itm = new_items; *itm!=0;) *n++ = *itm++;

	movzx	eax, BYTE PTR [r9]
	test	al, al
	je	SHORT $LN4@ReplaceIte@2
	mov	rcx, r9
	sub	rcx, r10
$LL5@ReplaceIte@2:
	mov	BYTE PTR [r10], al
	movzx	eax, BYTE PTR [rcx+r10+1]
	inc	r10
	test	al, al
	jne	SHORT $LL5@ReplaceIte@2
$LN4@ReplaceIte@2:

; 118  :                 bCopy=false;

	xor	cl, cl
$LN6@ReplaceIte@2:

; 119  :             }
; 120  : 	    	if (*p==separator) *n++ = separator;

	cmp	BYTE PTR [r11], r8b
	jne	SHORT $LN9@ReplaceIte@2
	mov	BYTE PTR [r10], r8b

; 121  :         }else{

	jmp	SHORT $LN18@ReplaceIte@2
$LN7@ReplaceIte@2:

; 122  : 			*n++ = *p;

	movzx	eax, BYTE PTR [r11]
	mov	BYTE PTR [r10], al
$LN18@ReplaceIte@2:
	inc	r10

; 123  :         }
; 124  :     	if (*p==separator) level++;

	cmp	BYTE PTR [r11], r8b
	jne	SHORT $LN9@ReplaceIte@2
	inc	edx
$LN9@ReplaceIte@2:

; 114  : 	for (LPCSTR p=src; *p!=0; p++){

	inc	r11
	cmp	BYTE PTR [r11], 0
	jne	SHORT $LL10@ReplaceIte@2

; 125  :     }
; 126  :     *n = '\0';

	mov	BYTE PTR [r10], 0

; 127  : 	return dst;

	mov	rax, QWORD PTR dst$[rsp]

; 128  : }

	mov	rsi, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+16]
	ret	0
$LN17@ReplaceIte@2:
	mov	rsi, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+16]
	mov	BYTE PTR [r10], dl
	mov	rax, r10
	ret	0
?_ReplaceItems@@YAPEADPEBDHH0PEADD@Z ENDP		; _ReplaceItems
_TEXT	ENDS
PUBLIC	?_ParseItem@@YAIPEBDPEAUxr_token@@@Z		; _ParseItem
pdata	SEGMENT
$pdata$?_ParseItem@@YAIPEBDPEAUxr_token@@@Z DD imagerel $LN10
	DD	imagerel $LN10+121
	DD	imagerel $unwind$?_ParseItem@@YAIPEBDPEAUxr_token@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ParseItem@@YAIPEBDPEAUxr_token@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
token_list$ = 56
?_ParseItem@@YAIPEBDPEAUxr_token@@@Z PROC		; _ParseItem

; 96   : {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 97   : 	for( int i=0; token_list[i].name; i++ )

	xor	edi, edi
	mov	rsi, rdx
	mov	rbp, rcx
	mov	ebx, edi
	cmp	QWORD PTR [rdx], rbx
	je	SHORT $LN2@ParseItem
	mov	rax, rdx
	npad	10
$LL4@ParseItem:

; 98   : 		if( !stricmp(src,token_list[i].name) )

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rbp
	call	QWORD PTR __imp_stricmp
	test	eax, eax
	je	SHORT $LN8@ParseItem

; 97   : 	for( int i=0; token_list[i].name; i++ )

	inc	rbx
	inc	edi
	mov	rax, rbx
	shl	rax, 4
	add	rax, rsi
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LL4@ParseItem
$LN2@ParseItem:

; 100  : 	return u32(-1);

	or	eax, -1					; ffffffffH
$LN5@ParseItem:

; 101  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN8@ParseItem:

; 99   : 			return token_list[i].id;

	movsxd	rax, edi
	add	rax, rax
	mov	eax, DWORD PTR [rsi+rax*8+8]
	jmp	SHORT $LN5@ParseItem
?_ParseItem@@YAIPEBDPEAUxr_token@@@Z ENDP		; _ParseItem
_TEXT	ENDS
PUBLIC	?_GetItems@@YAPEADPEBDHHPEADD@Z			; _GetItems
pdata	SEGMENT
$pdata$?_GetItems@@YAPEADPEBDHHPEADD@Z DD imagerel $LN15
	DD	imagerel $LN15+88
	DD	imagerel $unwind$?_GetItems@@YAPEADPEBDHHPEADD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_GetItems@@YAPEADPEBDHHPEADD@Z DD 020501H
	DD	013405H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 8
idx_start$ = 16
idx_end$ = 24
dst$ = 32
separator$ = 40
?_GetItems@@YAPEADPEBDHHPEADD@Z PROC			; _GetItems

; 82   : {

$LN15:
	mov	QWORD PTR [rsp+8], rbx

; 83   : 	LPSTR n = dst;
; 84   :     int level = 0;

	xor	r10d, r10d
	mov	ebx, edx
	mov	r11, r9

; 85   :  	for (LPCSTR p=src; *p!=0; p++){

	cmp	BYTE PTR [rcx], r10b
	je	SHORT $LN13@GetItems
	movzx	edx, BYTE PTR separator$[rsp]
$LL6@GetItems:

; 86   :     	if ((level>=idx_start)&&(level<idx_end))

	cmp	r10d, ebx
	jl	SHORT $LN3@GetItems
	cmp	r10d, r8d
	jge	SHORT $LN3@GetItems

; 87   : 			*n++ = *p;

	movzx	eax, BYTE PTR [rcx]
	inc	r11
	mov	BYTE PTR [r11-1], al
$LN3@GetItems:

; 88   :     	if (*p==separator) level++;

	cmp	BYTE PTR [rcx], dl
	jne	SHORT $LN2@GetItems
	inc	r10d
$LN2@GetItems:

; 89   :         if (level>=idx_end) break;

	cmp	r10d, r8d
	jge	SHORT $LN12@GetItems

; 85   :  	for (LPCSTR p=src; *p!=0; p++){

	inc	rcx
	cmp	BYTE PTR [rcx], 0
	jne	SHORT $LL6@GetItems
$LN12@GetItems:

; 90   :     }
; 91   :     *n = '\0';

	mov	BYTE PTR [r11], 0

; 92   : 	return dst;

	mov	rax, r9

; 93   : }

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN13@GetItems:
	mov	rbx, QWORD PTR [rsp+8]
	mov	BYTE PTR [r9], r10b
	mov	rax, r9
	ret	0
?_GetItems@@YAPEADPEBDHHPEADD@Z ENDP			; _GetItems
_TEXT	ENDS
PUBLIC	?_SetPos@@YAPEBDPEBDID@Z			; _SetPos
pdata	SEGMENT
$pdata$?_SetPos@@YAPEBDPEBDID@Z DD imagerel $LN10
	DD	imagerel $LN10+18
	DD	imagerel $unwind$?_SetPos@@YAPEBDPEBDID@Z
$pdata$0$?_SetPos@@YAPEBDPEBDID@Z DD imagerel $LN10+18
	DD	imagerel $LN10+76
	DD	imagerel $chain$0$?_SetPos@@YAPEBDPEBDID@Z
$pdata$1$?_SetPos@@YAPEBDPEBDID@Z DD imagerel $LN10+76
	DD	imagerel $LN10+90
	DD	imagerel $chain$1$?_SetPos@@YAPEBDPEBDID@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_SetPos@@YAPEBDPEBDID@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
$chain$0$?_SetPos@@YAPEBDPEBDID@Z DD 020521H
	DD	066405H
	DD	imagerel $LN10
	DD	imagerel $LN10+18
	DD	imagerel $unwind$?_SetPos@@YAPEBDPEBDID@Z
$chain$1$?_SetPos@@YAPEBDPEBDID@Z DD 021H
	DD	imagerel $LN10
	DD	imagerel $LN10+18
	DD	imagerel $unwind$?_SetPos@@YAPEBDPEBDID@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
pos$ = 56
separator$ = 64
?_SetPos@@YAPEBDPEBDID@Z PROC				; _SetPos

; 31   : {

$LN10:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 32   : 	LPCSTR	res			= src;
; 33   : 	u32		p			= 0;

	xor	ebx, ebx
	mov	edi, edx

; 34   : 	while( (p<pos) && (0!=(res=strchr(res,separator))) )

	test	edx, edx
	je	SHORT $LN7@SetPos
	mov	QWORD PTR [rsp+48], rsi
	movsx	esi, r8b
	npad	5
$LL2@SetPos:
	mov	edx, esi
	call	QWORD PTR __imp_strchr
	mov	rcx, rax
	test	rax, rax
	je	SHORT $LN9@SetPos

; 35   : 	{
; 36   : 		res		++;
; 37   : 		p		++;

	inc	ebx
	inc	rcx
	cmp	ebx, edi
	jb	SHORT $LL2@SetPos

; 38   : 	}
; 39   : 	return		res;

	mov	rax, rcx
$LN9@SetPos:
	mov	rsi, QWORD PTR [rsp+48]

; 40   : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@SetPos:

; 38   : 	}
; 39   : 	return		res;

	mov	rax, rcx

; 40   : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_SetPos@@YAPEBDPEBDID@Z ENDP				; _SetPos
_TEXT	ENDS
PUBLIC	?_TrimLeft@@YAPEADPEAD@Z			; _TrimLeft
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
str$ = 8
?_TrimLeft@@YAPEADPEAD@Z PROC				; _TrimLeft

; 6    : 	LPSTR p 	= str;
; 7    : 	while( *p && (u8(*p)<=u8(' ')) ) p++;

	movzx	edx, BYTE PTR [rcx]
	mov	rax, rcx
	test	dl, dl
	je	SHORT $LN4@TrimLeft
	npad	6
$LL6@TrimLeft:
	cmp	dl, 32					; 00000020H
	ja	SHORT $LN5@TrimLeft
	movzx	edx, BYTE PTR [rax+1]
	inc	rax
	test	dl, dl
	jne	SHORT $LL6@TrimLeft
$LN5@TrimLeft:

; 8    :     if (p!=str){

	cmp	rax, rcx
	je	SHORT $LN13@TrimLeft

; 9    :         for (LPSTR t=str; *p; t++,p++) *t=*p;

	movzx	r8d, BYTE PTR [rax]
	mov	rdx, rcx
	test	r8b, r8b
	je	SHORT $LN1@TrimLeft
	sub	rax, rcx
	npad	12
$LL3@TrimLeft:
	mov	BYTE PTR [rdx], r8b
	movzx	r8d, BYTE PTR [rax+rdx+1]
	inc	rdx
	test	r8b, r8b
	jne	SHORT $LL3@TrimLeft
$LN1@TrimLeft:

; 10   :         *t = 0;

	mov	BYTE PTR [rdx], 0
$LN13@TrimLeft:

; 11   :     }
; 12   : 	return str;

	mov	rax, rcx
$LN4@TrimLeft:

; 13   : }

	fatret	0
?_TrimLeft@@YAPEADPEAD@Z ENDP				; _TrimLeft
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 51   : 		{	// construct with pointer _Parg
; 52   : 		this->_Adopt(_Pstring);
; 53   : 		this->_Ptr = _Parg;

	mov	QWORD PTR [rcx], rdx

; 54   : 		}

	mov	rax, rcx
	ret	0
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBDPEBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ PROC ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++, COMDAT

; 353  : 		++*(_Mybase *)this;

	inc	QWORD PTR [rcx]

; 354  : 		return (*this);

	mov	rax, rcx

; 355  : 		}

	ret	0
??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@XZ ENDP ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator==, COMDAT

; 213  : 		_Compat(_Right);
; 214  : 		return (this->_Ptr == _Right._Ptr);

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	sete	al

; 215  : 		}

	ret	0
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEADXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator*, COMDAT

; 343  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]

; 344  : 		}

	ret	0
??D?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAAEADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator*
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z DD imagerel $LN18
	DD	imagerel $LN18+116
	DD	imagerel $unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z
_TEXT	SEGMENT
this$ = 48
_N0$ = 56
_Ptr$ = 64
_Count$ = 72
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare, COMDAT

; 1887 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1888 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1889 : 		if (_Count != 0)
; 1890 : 			_DEBUG_POINTER(_Ptr);
; 1891 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1892 : 
; 1893 : 		if (this->_Mysize < _Off)
; 1894 : 			_Xran();	// _Off off end
; 1895 : 		if (this->_Mysize - _Off < _N0)

	mov	rax, QWORD PTR [rcx+16]
	mov	rbx, rdx
	mov	rdi, r9
	cmp	rax, rdx
	mov	r9, r8
	cmovb	rbx, rax

; 1896 : 			_N0 = this->_Mysize - _Off;	// trim _N0 to size
; 1897 : 
; 1898 : 		size_type _Ans = _Traits::compare(_Myptr() + _Off, _Ptr,
; 1899 : 			_N0 < _Count ? _N0 : _Count);

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN14@compare
	mov	rcx, QWORD PTR [rcx]
$LN14@compare:
	mov	r8, rdi
	cmp	rbx, rdi
	mov	rdx, r9
	cmovb	r8, rbx
	call	memcmp
	movsxd	rcx, eax

; 1900 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 1901 : 			: _N0 == _Count ? 0 : +1);

	test	eax, eax
	je	SHORT $LN7@compare
	mov	eax, ecx

; 1902 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@compare:

; 1900 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 1901 : 			: _N0 == _Count ? 0 : +1);

	cmp	rbx, rdi
	jae	SHORT $LN5@compare
	or	eax, -1

; 1902 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@compare:

; 1900 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 1901 : 			: _N0 == _Count ? 0 : +1);

	xor	eax, eax
	cmp	rbx, rdi

; 1902 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	setne	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAH_K0PEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z DD imagerel $LN23
	DD	imagerel $LN23+126
	DD	imagerel $unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare, COMDAT

; 1874 : 		{	// compare [0, _Mysize) with [_Ptr, <null>)

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r9, rcx

; 1875 : 		_DEBUG_POINTER(_Ptr);
; 1876 : 		return (compare(0, this->_Mysize, _Ptr, _Traits::length(_Ptr)));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	mov	rdi, QWORD PTR [r9+16]
	not	rcx
	dec	rcx
	cmp	rdi, rdi
	cmp	QWORD PTR [r9+24], 16
	mov	rbx, rcx
	jb	SHORT $LN18@compare@2
	mov	r9, QWORD PTR [r9]
$LN18@compare@2:
	mov	r8, rcx
	cmp	rdi, rcx
	mov	rcx, r9
	cmovb	r8, rdi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	je	SHORT $LN11@compare@2
	mov	eax, ecx

; 1877 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 1875 : 		_DEBUG_POINTER(_Ptr);
; 1876 : 		return (compare(0, this->_Mysize, _Ptr, _Traits::length(_Ptr)));

$LN11@compare@2:
	cmp	rdi, rbx
	jae	SHORT $LN9@compare@2
	or	eax, -1

; 1877 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 1875 : 		_DEBUG_POINTER(_Ptr);
; 1876 : 		return (compare(0, this->_Mysize, _Ptr, _Traits::length(_Ptr)));

$LN9@compare@2:
	xor	eax, eax
	cmp	rdi, rbx

; 1877 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	setne	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Construct@PEADAEBQEAD@std@@YAXPEAPEADAEBQEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@PEADAEBQEAD@std@@YAXPEAPEADAEBQEAD@Z PROC	; std::_Construct<char * __ptr64,char * __ptr64 const & __ptr64>, COMDAT

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN3@Construct:

; 49   : 	}

	fatret	0
??$_Construct@PEADAEBQEAD@std@@YAXPEAPEADAEBQEAD@Z ENDP	; std::_Construct<char * __ptr64,char * __ptr64 const & __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
pdata	SEGMENT
$pdata$??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z PROC ; std::operator==<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 176  : 	{	// test for NTCS vs. string equality

$LN3:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 177  : 	return (_Right.compare(_Left) == 0);

	mov	rdx, rcx
	mov	rcx, rax
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
	test	eax, eax
	sete	al

; 178  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$?8DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ENDP ; std::operator==<char,std::char_traits<char>,xalloc<char> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA?AV?$xalloc@D@@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 8
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA?AV?$xalloc@D@@XZ PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::get_allocator, COMDAT

; 1906 : 		return (this->_Alval);

	mov	rax, rcx

; 1907 : 		}

	ret	0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA?AV?$xalloc@D@@XZ ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::get_allocator
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?construct@?$xalloc@PEAD@@QEAAXPEAPEADAEBQEAD@Z
_TEXT	SEGMENT
p$ = 8
_Val$ = 16
?construct@?$xalloc@PEAD@@QEAAXPEAPEADAEBQEAD@Z PROC	; xalloc<char * __ptr64>::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

	test	rcx, rcx
	je	SHORT $LN5@construct@3
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN5@construct@3:
	fatret	0
?construct@?$xalloc@PEAD@@QEAAXPEAPEADAEBQEAD@Z ENDP	; xalloc<char * __ptr64>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@PEAD@@PEADPEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD$$QEAPEAD@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@PEAD@@PEADPEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD$$QEAPEAD@Z PROC ; std::_Cons_val<xalloc<char * __ptr64>,char * __ptr64,char * __ptr64>, COMDAT

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN9@Cons_val:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@PEAD@@PEADPEAD@std@@YAXAEAV?$xalloc@PEAD@@PEAPEAD$$QEAPEAD@Z ENDP ; std::_Cons_val<xalloc<char * __ptr64>,char * __ptr64,char * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
pdata	SEGMENT
$pdata$??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+28
	DD	imagerel $unwind$??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z PROC ; std::operator!=<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 206  : 	{	// test for NTCS vs. string inequality

$LN5:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 207  : 	return (!(_Left == _Right));

	mov	rdx, rcx
	mov	rcx, rax
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
	test	eax, eax
	setne	al

; 208  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$?9DU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ENDP ; std::operator!=<char,std::char_traits<char>,xalloc<char> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Inside, COMDAT

; 1972 : 		{	// test if _Ptr points inside string

	mov	r9, rdx

; 1973 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

	test	rdx, rdx
	je	SHORT $LN2@Inside@9
	mov	rax, QWORD PTR [rcx+24]
	cmp	rax, 16
	jb	SHORT $LN8@Inside@9
	mov	r8, QWORD PTR [rcx]
	jmp	SHORT $LN9@Inside@9
$LN8@Inside@9:
	mov	r8, rcx
$LN9@Inside@9:
	cmp	rdx, r8
	jb	SHORT $LN2@Inside@9
	cmp	rax, 16
	jb	SHORT $LN12@Inside@9
	mov	rdx, QWORD PTR [rcx]
	jmp	SHORT $LN13@Inside@9
$LN12@Inside@9:
	mov	rdx, rcx
$LN13@Inside@9:
	mov	rax, QWORD PTR [rcx+16]
	lea	rcx, QWORD PTR [rdx+rax]
	cmp	rcx, r9
	jbe	SHORT $LN2@Inside@9

; 1975 : 		else
; 1976 : 			return (true);

	mov	al, 1

; 1977 : 		}

	ret	0
$LN2@Inside@9:

; 1974 : 			return (false);	// don't ask

	xor	al, al

; 1977 : 		}

	ret	0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Inside
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_K_K@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, r8
	jae	SHORT $LN4@Grow_to@8
	xor	r8d, r8d

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
$LN4@Grow_to@8:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	r8, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEBA_K_K@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Grow_to
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_K_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]
	mov	r9, rdx
	mov	rax, 7378697629483820647		; 6666666666666667H
	sub	r8, QWORD PTR [rcx]
	imul	r8
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 461168601842738790			; 0666666666666666H
	mov	rcx, rdx
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN4@Grow_to@9
	xor	edx, edx

; 1279 : 		if (_Capacity < _Count)

	cmp	rdx, r9
	cmovb	rdx, r9

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, rdx

; 1282 : 		}

	ret	0
$LN4@Grow_to@9:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	rdx, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	rdx, r9
	cmovb	rdx, r9

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, rdx

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEBA_K_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Grow_to
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_K_K@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Grow_to, COMDAT

; 1275 : 		size_type _Capacity = capacity();

	mov	r8, QWORD PTR [rcx+16]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	mov	rcx, r8
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, r8
	jae	SHORT $LN4@Grow_to@10
	xor	r8d, r8d

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
$LN4@Grow_to@10:

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	add	r8, rcx

; 1279 : 		if (_Capacity < _Count)

	cmp	r8, rdx
	cmovb	r8, rdx

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

	mov	rax, r8

; 1282 : 		}

	ret	0
?_Grow_to@?$vector@PEADV?$xalloc@PEAD@@@std@@IEBA_K_K@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Grow_to
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_const_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >, COMDAT

; 45   : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 46   : 		this->_Adopt(_Pvector);
; 47   : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::end, COMDAT

; 797  : 		return (const_iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 798  : 		}

	ret	0
?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::begin, COMDAT

; 787  : 		return (const_iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 788  : 		}

	ret	0
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end, COMDAT

; 797  : 		return (const_iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 798  : 		}

	ret	0
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin, COMDAT

; 787  : 		return (const_iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 788  : 		}

	ret	0
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin
_TEXT	ENDS
PUBLIC	?_GetItemCount@@YAHPEBDD@Z			; _GetItemCount
pdata	SEGMENT
$pdata$?_GetItemCount@@YAHPEBDD@Z DD imagerel $LN17
	DD	imagerel $LN17+32
	DD	imagerel $unwind$?_GetItemCount@@YAHPEBDD@Z
$pdata$0$?_GetItemCount@@YAHPEBDD@Z DD imagerel $LN17+32
	DD	imagerel $LN17+119
	DD	imagerel $chain$0$?_GetItemCount@@YAHPEBDD@Z
$pdata$1$?_GetItemCount@@YAHPEBDD@Z DD imagerel $LN17+119
	DD	imagerel $LN17+137
	DD	imagerel $chain$1$?_GetItemCount@@YAHPEBDD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_GetItemCount@@YAHPEBDD@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
$chain$0$?_GetItemCount@@YAHPEBDD@Z DD 020521H
	DD	065405H
	DD	imagerel $LN17
	DD	imagerel $LN17+32
	DD	imagerel $unwind$?_GetItemCount@@YAHPEBDD@Z
$chain$1$?_GetItemCount@@YAHPEBDD@Z DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+32
	DD	imagerel $unwind$?_GetItemCount@@YAHPEBDD@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
separator$ = 56
?_GetItemCount@@YAHPEBDD@Z PROC				; _GetItemCount

; 54   : {

$LN17:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 55   : 	u32		cnt			= 0;

	xor	ebx, ebx
	movzx	esi, dl
	mov	rdi, rcx

; 56   : 	if (src&&src[0]){

	test	rcx, rcx
	je	SHORT $LN13@GetItemCou
	cmp	BYTE PTR [rcx], bl
	je	SHORT $LN13@GetItemCou

; 57   : 		LPCSTR	res			= src;
; 58   : 		LPCSTR	last_res	= res;
; 59   : 		while( 0!=(res=strchr(res,separator)) )

	mov	QWORD PTR [rsp+48], rbp
	movsx	ebp, dl
	mov	edx, ebp
	call	QWORD PTR __imp_strchr
	test	rax, rax
	je	SHORT $LN15@GetItemCou
	npad	11
$LL4@GetItemCou:

; 60   : 		{
; 61   : 			res		++;
; 62   : 			last_res=res;
; 63   : 			cnt		++;

	inc	ebx
	lea	rdi, QWORD PTR [rax+1]

; 64   : 			if (res[0]==separator) break;

	cmp	BYTE PTR [rax+1], sil
	je	SHORT $LN15@GetItemCou

; 57   : 		LPCSTR	res			= src;
; 58   : 		LPCSTR	last_res	= res;
; 59   : 		while( 0!=(res=strchr(res,separator)) )

	lea	rcx, QWORD PTR [rax+1]
	mov	edx, ebp
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LL4@GetItemCou
$LN15@GetItemCou:
	mov	rbp, QWORD PTR [rsp+48]

; 65   : 		}
; 66   : 		if (xr_strlen(last_res)) cnt++;

	or	rcx, -1
	xor	eax, eax
	repne scasb

; 67   : 	}
; 68   : 	return		cnt;

	lea	eax, DWORD PTR [rbx+1]
	not	rcx
	dec	rcx
	test	ecx, ecx
	jne	SHORT $LN1@GetItemCou
$LN13@GetItemCou:
	mov	eax, ebx
$LN1@GetItemCou:

; 69   : }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_GetItemCount@@YAHPEBDD@Z ENDP				; _GetItemCount
_TEXT	ENDS
PUBLIC	?_CopyVal@@YAPEBDPEBDPEADD@Z			; _CopyVal
pdata	SEGMENT
$pdata$?_CopyVal@@YAPEBDPEBDPEADD@Z DD imagerel $LN7
	DD	imagerel $LN7+100
	DD	imagerel $unwind$?_CopyVal@@YAPEBDPEBDPEADD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_CopyVal@@YAPEBDPEBDPEADD@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
dst$ = 56
separator$ = 64
?_CopyVal@@YAPEBDPEBDPEADD@Z PROC			; _CopyVal

; 43   : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx

; 44   : 	LPCSTR	p;
; 45   : 	size_t	n;
; 46   : 	p			= strchr	( src, separator );

	movsx	edx, r8b
	mov	rbx, rcx
	call	QWORD PTR __imp_strchr
	mov	rdi, rax

; 47   : 	n			= (p>0) ? (p-src) : xr_strlen(src);

	test	rax, rax
	je	SHORT $LN3@CopyVal
	sub	rdi, rbx
	jmp	SHORT $LN4@CopyVal
$LN3@CopyVal:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	rdi, QWORD PTR [rcx-1]
	mov	edi, edi
$LN4@CopyVal:

; 48   : 	strncpy		( dst, src, n );

	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, rsi
	call	QWORD PTR __imp_strncpy

; 49   : 	dst[n]		= 0;
; 50   : 	return		dst;
; 51   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	BYTE PTR [rdi+rsi], 0
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_CopyVal@@YAPEBDPEBDPEADD@Z ENDP			; _CopyVal
_TEXT	ENDS
PUBLIC	?_TrimRight@@YAPEADPEAD@Z			; _TrimRight
pdata	SEGMENT
$pdata$?_TrimRight@@YAPEADPEAD@Z DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$?_TrimRight@@YAPEADPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_TrimRight@@YAPEADPEAD@Z DD 020501H
	DD	017405H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
str$ = 8
?_TrimRight@@YAPEADPEAD@Z PROC				; _TrimRight

; 16   : {

$LN11:
	mov	QWORD PTR [rsp+8], rdi
	mov	rdx, rcx

; 17   : 	LPSTR p 	= str+xr_strlen(str);

	xor	eax, eax
	or	rcx, -1
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	mov	eax, eax
	add	rax, rdx

; 18   : 	while( (p!=str) && (u8(*p)<=u8(' ')) ) p--;

	cmp	rax, rdx
	je	SHORT $LN9@TrimRight
$LL2@TrimRight:
	cmp	BYTE PTR [rax], 32			; 00000020H
	ja	SHORT $LN9@TrimRight
	dec	rax
	cmp	rax, rdx
	jne	SHORT $LL2@TrimRight
$LN9@TrimRight:

; 19   :     *(++p) 		= 0;
; 20   : 	return str;
; 21   : }

	mov	rdi, QWORD PTR [rsp+8]
	mov	BYTE PTR [rax+1], 0
	mov	rax, rdx
	ret	0
?_TrimRight@@YAPEADPEAD@Z ENDP				; _TrimRight
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::_String_iterator<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 325  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 326  : 		}

	mov	rax, rcx
	ret	0
??0?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::_String_iterator<char,std::char_traits<char>,xalloc<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++, COMDAT

; 359  : 		_Myiter _Tmp = *this;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 360  : 		++*this;

	inc	rax
	mov	QWORD PTR [rcx], rax

; 361  : 		return (_Tmp);

	mov	rax, rdx

; 362  : 		}

	ret	0
??E?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,xalloc<char> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator!=, COMDAT

; 219  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rdx
	setne	al

; 220  : 		}

	ret	0
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,xalloc<char> >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::end, COMDAT

; 1361 : 		return (_STRING_ITERATOR(_Myptr() + this->_Mysize));

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN5@end
	mov	rax, QWORD PTR [rcx+16]
	mov	r8, QWORD PTR [rcx]
	lea	rcx, QWORD PTR [r8+rax]
	mov	rax, rdx
	mov	QWORD PTR [rdx], rcx

; 1362 : 		}

	ret	0

; 1361 : 		return (_STRING_ITERATOR(_Myptr() + this->_Mysize));

$LN5@end:
	mov	rax, QWORD PTR [rcx+16]
	mov	r8, rcx
	lea	rcx, QWORD PTR [rcx+rax]
	mov	rax, rdx
	mov	QWORD PTR [rdx], rcx

; 1362 : 		}

	ret	0
?end@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::end
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+60
	DD	imagerel $unwind$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+23
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z+16
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z+52
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T189804 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN32:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T189804[rsp], -2
	npad	3
$LL6@Uninit_mov@5:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN4@Uninit_mov@5

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	mov	rax, QWORD PTR [rcx]
	test	r8, r8
	je	SHORT $LN22@Uninit_mov@5
	mov	QWORD PTR [r8], rax
$LN22@Uninit_mov@5:

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;
; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	r8, 8
	mov	QWORD PTR _Dest$[rsp], r8
	add	rcx, 8
	mov	QWORD PTR _First$[rsp], rcx
	jmp	SHORT $LL6@Uninit_mov@5
$LN4@Uninit_mov@5:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, r8

; 438  : 	}

	add	rsp, 56					; 00000038H
	ret	0
$LN31@Uninit_mov@5:
??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T189804 = 32
_First$ = 64
_Last$ = 72
_Dest$ = 80
?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>, COMDAT

; 446  : 	{	// move [_First, _Last) to raw _Dest, using _Al, scalar type

$LN3:
	sub	rsp, 40					; 00000028H

; 447  : 	return (_Uninit_move(_First, _Last, _Dest,
; 448  : 		_Al, (_Valty *)0, _Nonscalar_ptr_iterator_tag()));

	call	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>

; 449  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PEAPEADPEAPEADV?$xalloc@PEAD@@@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAPEADPEAPEADV?$xalloc@PEAD@@@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@@Z PROC ; std::_Uninitialized_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64> >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
??$_Uninitialized_move@PEAPEADPEAPEADV?$xalloc@PEAD@@@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@@Z ENDP ; std::_Uninitialized_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD imagerel $LN29+80
	DD	imagerel $LN29+146
	DD	imagerel $chain$1$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD imagerel $LN29+146
	DD	imagerel $LN29+164
	DD	imagerel $chain$2$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD 040e21H
	DD	07540eH
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z DD 040a01H
	DD	08640aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
xdata	ENDS
;	COMDAT ??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z PROC	; xr_free<shared_str>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN29:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rdi, rdi
	je	$LN1@xr_free@3
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN6@xr_free@3
	test	rdi, rdi
	je	SHORT $LN27@xr_free@3
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	mov	QWORD PTR [rsi], 0
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN6@xr_free@3:
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+56], rbp
	lea	rbp, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rbp+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rbp+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rbp+rbx*8]
	mov	QWORD PTR [rbp+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
$LN27@xr_free@3:
	mov	QWORD PTR [rsi], 0
$LN1@xr_free@3:
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z ENDP	; xr_free<shared_str>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN29+80
	DD	imagerel $LN29+146
	DD	imagerel $chain$1$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN29+146
	DD	imagerel $LN29+164
	DD	imagerel $chain$2$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 040e21H
	DD	07540eH
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 040a01H
	DD	08640aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
xdata	ENDS
;	COMDAT ??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z PROC ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN29:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rdi, rdi
	je	$LN1@xr_free@4
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN6@xr_free@4
	test	rdi, rdi
	je	SHORT $LN27@xr_free@4
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	mov	QWORD PTR [rsi], 0
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN6@xr_free@4:
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+56], rbp
	lea	rbp, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rbp+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rbp+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rbp+rbx*8]
	mov	QWORD PTR [rbp+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
$LN27@xr_free@4:
	mov	QWORD PTR [rsi], 0
$LN1@xr_free@4:
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ENDP ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD imagerel $LN29+80
	DD	imagerel $LN29+146
	DD	imagerel $chain$1$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD imagerel $LN29+146
	DD	imagerel $LN29+164
	DD	imagerel $chain$2$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD 040e21H
	DD	07540eH
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+80
	DD	imagerel $unwind$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_free@PEAD@@YAXAEAPEAPEAD@Z DD 040a01H
	DD	08640aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
xdata	ENDS
;	COMDAT ??$xr_free@PEAD@@YAXAEAPEAPEAD@Z
_TEXT	SEGMENT
P$ = 48
??$xr_free@PEAD@@YAXAEAPEAPEAD@Z PROC			; xr_free<char * __ptr64>, COMDAT

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

$LN29:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rdi, rdi
	je	$LN1@xr_free@5
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN6@xr_free@5
	test	rdi, rdi
	je	SHORT $LN27@xr_free@5
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	mov	QWORD PTR [rsi], 0
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN6@xr_free@5:
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+56], rbp
	lea	rbp, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rbp+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rbp+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rbp+rbx*8]
	mov	QWORD PTR [rbp+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
$LN27@xr_free@5:
	mov	QWORD PTR [rsi], 0
$LN1@xr_free@5:
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$xr_free@PEAD@@YAXAEAPEAPEAD@Z ENDP			; xr_free<char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAPEAD@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAPEAPEADPEAPEAD00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAPEAD@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAPEAPEADPEAPEAD00@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Umove<char * __ptr64 * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
??$_Umove@PEAPEAD@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAPEAPEADPEAPEAD00@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Umove<char * __ptr64 * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@std@@QEAA@PEAVshared_str@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >::_Vector_iterator<std::_Vector_val<shared_str,xalloc<shared_str> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >, COMDAT

; 304  : 		{	// construct with pointer _Parg

	mov	QWORD PTR [rcx], rdx

; 305  : 		}

	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Where$ = 16
?_Make_iter@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Make_iter, COMDAT

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 803  : 		}

	ret	0
?_Make_iter@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Where$ = 16
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Make_iter, COMDAT

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx

; 803  : 		}

	ret	0
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Make_iter
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z DD 010901H
	DD	04209H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z PROC ; xalloc<shared_str>::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	lea	rcx, QWORD PTR p$[rsp]
	call	??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z ; xr_free<shared_str>
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@Vshared_str@@@@QEBAXPEAVshared_str@@_K@Z ENDP ; xalloc<shared_str>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::end, COMDAT

; 792  : 		return (iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 793  : 		}

	ret	0
?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::begin
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z DD 010901H
	DD	04209H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z PROC ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	lea	rcx, QWORD PTR p$[rsp]
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z ENDP ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end, COMDAT

; 792  : 		return (iterator(this->_Mylast, this));

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 793  : 		}

	ret	0
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin, COMDAT

; 782  : 		return (iterator(this->_Myfirst, this));

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 783  : 		}

	ret	0
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::begin
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z DD 010901H
	DD	04209H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z
_TEXT	SEGMENT
p$ = 48
?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z PROC	; xalloc<char * __ptr64>::deallocate, COMDAT

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	lea	rcx, QWORD PTR p$[rsp]
	call	??$xr_free@PEAD@@YAXAEAPEAPEAD@Z	; xr_free<char * __ptr64>
	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$xalloc@PEAD@@QEBAXPEAPEAD_K@Z ENDP	; xalloc<char * __ptr64>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?front@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBAAEBVshared_str@@XZ
_TEXT	SEGMENT
this$ = 8
?front@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBAAEBVshared_str@@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::front, COMDAT

; 962  : 		return (*begin());

	mov	rax, QWORD PTR [rcx]

; 963  : 		}

	ret	0
?front@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEBAAEBVshared_str@@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::front
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?front@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?front@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::front, COMDAT

; 962  : 		return (*begin());

	mov	rax, QWORD PTR [rcx]

; 963  : 		}

	ret	0
?front@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::front
_TEXT	ENDS
PUBLIC	?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimLeft
pdata	SEGMENT
$pdata$?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN23
	DD	imagerel $LN23+81
	DD	imagerel $unwind$?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
str$ = 48
?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z PROC ; _TrimLeft

; 362  : {

$LN23:
	push	rbx
	sub	rsp, 32					; 00000020H

; 363  : 	LPCSTR b		= str.c_str();

	mov	rax, QWORD PTR [rcx+24]
	mov	rbx, rcx
	cmp	rax, 16
	jb	SHORT $LN16@TrimLeft@2
	mov	rcx, QWORD PTR [rcx]

; 364  : 	LPCSTR p 		= str.c_str();

	mov	r8, QWORD PTR [rbx]
	jmp	SHORT $LN17@TrimLeft@2
$LN16@TrimLeft@2:
	mov	r8, rbx
$LN17@TrimLeft@2:

; 365  : 	while( *p && (u8(*p)<=u8(' ')) ) p++;

	movzx	eax, BYTE PTR [r8]
	test	al, al
	je	SHORT $LN21@TrimLeft@2
$LL3@TrimLeft@2:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN21@TrimLeft@2
	movzx	eax, BYTE PTR [r8+1]
	inc	r8
	test	al, al
	jne	SHORT $LL3@TrimLeft@2
$LN21@TrimLeft@2:

; 366  :     if (p!=b)

	cmp	r8, rcx
	je	SHORT $LN20@TrimLeft@2

; 367  :     	str.erase	(0,p-b);

	sub	r8, rcx
	xor	edx, edx
	mov	rcx, rbx
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::erase
$LN20@TrimLeft@2:

; 368  : 	return str;

	mov	rax, rbx

; 369  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_TrimLeft@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ENDP ; _TrimLeft
_TEXT	ENDS
PUBLIC	?_Trim@@YAPEADPEAD@Z				; _Trim
pdata	SEGMENT
$pdata$?_Trim@@YAPEADPEAD@Z DD imagerel $LN25
	DD	imagerel $LN25+122
	DD	imagerel $unwind$?_Trim@@YAPEADPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_Trim@@YAPEADPEAD@Z DD 020501H
	DD	017405H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
str$ = 8
?_Trim@@YAPEADPEAD@Z PROC				; _Trim

; 24   : {

$LN25:
	mov	QWORD PTR [rsp+8], rdi

; 25   : 	_TrimLeft( str );

	movzx	edx, BYTE PTR [rcx]
	mov	r8, rcx
	mov	rax, rcx
	test	dl, dl
	je	SHORT $LN6@Trim
$LL8@Trim:
	cmp	dl, 32					; 00000020H
	ja	SHORT $LN7@Trim
	movzx	edx, BYTE PTR [rax+1]
	inc	rax
	test	dl, dl
	jne	SHORT $LL8@Trim
$LN7@Trim:
	cmp	rax, rcx
	je	SHORT $LN6@Trim
	movzx	edx, BYTE PTR [rax]
	test	dl, dl
	je	SHORT $LN3@Trim
	sub	rax, r8
$LL5@Trim:
	mov	BYTE PTR [rcx], dl
	movzx	edx, BYTE PTR [rax+rcx+1]
	inc	rcx
	test	dl, dl
	jne	SHORT $LL5@Trim
$LN3@Trim:
	mov	BYTE PTR [rcx], 0
$LN6@Trim:

; 26   : 	_TrimRight( str );

	xor	eax, eax
	or	rcx, -1
	mov	rdi, r8
	repne scasb
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	mov	eax, eax
	add	rax, r8
	cmp	rax, r8
	je	SHORT $LN23@Trim
	npad	2
$LL12@Trim:
	cmp	BYTE PTR [rax], 32			; 00000020H
	ja	SHORT $LN23@Trim
	dec	rax
	cmp	rax, r8
	jne	SHORT $LL12@Trim
$LN23@Trim:

; 27   : 	return str;
; 28   : }

	mov	rdi, QWORD PTR [rsp+8]
	mov	BYTE PTR [rax+1], 0
	mov	rax, r8
	ret	0
?_Trim@@YAPEADPEAD@Z ENDP				; _Trim
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::begin, COMDAT

; 1351 : 		return (_STRING_ITERATOR(_Myptr()));

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN5@begin
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 1352 : 		}

	ret	0

; 1351 : 		return (_STRING_ITERATOR(_Myptr()));

$LN5@begin:
	mov	QWORD PTR [rdx], rcx
	mov	rax, rdx

; 1352 : 		}

	ret	0
?begin@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$xalloc@D@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gshared_str@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 8
??_Gshared_str@@QEAAPEAXI@Z PROC			; shared_str::`scalar deleting destructor', COMDAT
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN12@scalar@14
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	DWORD PTR [rax], r8d
	mov	rdx, rax
	cmove	rdx, r8
	mov	QWORD PTR [rcx], rdx
$LN12@scalar@14:
	mov	rax, rcx
	ret	0
??_Gshared_str@@QEAAPEAXI@Z ENDP			; shared_str::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z DD imagerel $LN33
	DD	imagerel $LN33+67
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
$T217265 = 48
this$ = 48
??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::`scalar deleting destructor', COMDAT
$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	cmp	QWORD PTR [rcx+24], 16
	mov	rbx, rcx
	jb	SHORT $LN16@scalar@15
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR $T217265[rsp], rax
	test	rax, rax
	je	SHORT $LN16@scalar@15
	lea	rcx, QWORD PTR $T217265[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN16@scalar@15:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	rax, rbx
	mov	BYTE PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@Vshared_str@@@std@@YAXPEAVshared_str@@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Destroy@Vshared_str@@@std@@YAXPEAVshared_str@@@Z PROC ; std::_Destroy<shared_str>, COMDAT

; 63   : 	_Ptr->~_Ty();

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN8@Destroy@5
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	DWORD PTR [rax], r8d
	mov	rdx, rax
	cmove	rdx, r8
	mov	QWORD PTR [rcx], rdx
$LN8@Destroy@5:

; 64   : 	}

	fatret	0
??$_Destroy@Vshared_str@@@std@@YAXPEAVshared_str@@@Z ENDP ; std::_Destroy<shared_str>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD imagerel $LN35
	DD	imagerel $LN35+64
	DD	imagerel $unwind$??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
_TEXT	SEGMENT
$T217409 = 48
_Ptr$ = 48
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 62   : 	{	// destroy object at _Ptr

$LN35:
	push	rbx
	sub	rsp, 32					; 00000020H

; 63   : 	_Ptr->~_Ty();

	cmp	QWORD PTR [rcx+24], 16
	mov	rbx, rcx
	jb	SHORT $LN18@Destroy@6
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR $T217409[rsp], rax
	test	rax, rax
	je	SHORT $LN18@Destroy@6
	lea	rcx, QWORD PTR $T217409[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN18@Destroy@6:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	BYTE PTR [rbx], 0

; 64   : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?destroy@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@@Z
_TEXT	SEGMENT
p$ = 8
?destroy@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@@Z PROC ; xalloc<shared_str>::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN10@destroy@3
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	DWORD PTR [rax], r8d
	mov	rdx, rax
	cmove	rdx, r8
	mov	QWORD PTR [rcx], rdx
$LN10@destroy@3:
	fatret	0
?destroy@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@@Z ENDP ; xalloc<shared_str>::destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD imagerel $LN37
	DD	imagerel $LN37+64
	DD	imagerel $unwind$?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z
_TEXT	SEGMENT
$T217600 = 48
p$ = 48
?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z PROC ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::destroy, COMDAT

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy(p);			}

$LN37:
	push	rbx
	sub	rsp, 32					; 00000020H
	cmp	QWORD PTR [rcx+24], 16
	mov	rbx, rcx
	jb	SHORT $LN20@destroy@4
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR $T217600[rsp], rax
	test	rax, rax
	je	SHORT $LN20@destroy@4
	lea	rcx, QWORD PTR $T217600[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN20@destroy@4:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	BYTE PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?destroy@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ENDP ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@Vshared_str@@@@Vshared_str@@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@@Z
_TEXT	SEGMENT
_Pdest$ = 8
??$_Dest_val@V?$xalloc@Vshared_str@@@@Vshared_str@@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@@Z PROC ; std::_Dest_val<xalloc<shared_str>,shared_str>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN12@Dest_val@3
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	DWORD PTR [rax], r8d
	mov	rdx, rax
	cmove	rdx, r8
	mov	QWORD PTR [rcx], rdx
$LN12@Dest_val@3:

; 288  : 	}

	fatret	0
??$_Dest_val@V?$xalloc@Vshared_str@@@@Vshared_str@@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@@Z ENDP ; std::_Dest_val<xalloc<shared_str>,shared_str>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD imagerel $LN39
	DD	imagerel $LN39+64
	DD	imagerel $unwind$??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z
_TEXT	SEGMENT
$T217842 = 48
_Pdest$ = 48
??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z PROC ; std::_Dest_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 286  : 	{	// destroy using allocator

$LN39:
	push	rbx
	sub	rsp, 32					; 00000020H

; 287  : 	_Alval.destroy(_Pdest);

	cmp	QWORD PTR [rcx+24], 16
	mov	rbx, rcx
	jb	SHORT $LN22@Dest_val@4
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR $T217842[rsp], rax
	test	rax, rax
	je	SHORT $LN22@Dest_val@4
	lea	rcx, QWORD PTR $T217842[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN22@Dest_val@4:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	BYTE PTR [rbx], 0

; 288  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ENDP ; std::_Dest_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@Vshared_str@@AEBV1@@std@@YAXPEAVshared_str@@AEBV1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@Vshared_str@@AEBV1@@std@@YAXPEAVshared_str@@AEBV1@@Z PROC ; std::_Construct<shared_str,shared_str const & __ptr64>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

	mov	r8, rcx

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct@12
	xor	r9d, r9d
	mov	QWORD PTR [rcx], r9
	mov	rdx, QWORD PTR [rdx]
	test	rdx, rdx
	je	SHORT $LN11@Construct@12
	inc	DWORD PTR [rdx]
$LN11@Construct@12:
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN14@Construct@12
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN14@Construct@12:
	mov	QWORD PTR [r8], rdx
$LN3@Construct@12:

; 49   : 	}

	fatret	0
??$_Construct@Vshared_str@@AEBV1@@std@@YAXPEAVshared_str@@AEBV1@@Z ENDP ; std::_Construct<shared_str,shared_str const & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<shared_str> >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

	mov	r8, rcx

; 96   : 	for (; _First != _Last; ++_First)

	cmp	rcx, rdx
	je	SHORT $LN1@Destroy_ra@3
	xor	r9d, r9d
	npad	5
$LL3@Destroy_ra@3:

; 97   : 		_Dest_val(_Al, _First);

	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN17@Destroy_ra@3
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN17@Destroy_ra@3:

; 96   : 	for (; _First != _Last; ++_First)

	add	r8, 8
	cmp	r8, rdx
	jne	SHORT $LL3@Destroy_ra@3
$LN1@Destroy_ra@3:

; 98   : 	}

	fatret	0
??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<shared_str> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

	mov	r10, rcx

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN19@Move@4
	xor	r11d, r11d
	npad	5
$LL3@Move@4:

; 2514 : 		*_Dest = _STD move(*_First);

	mov	r9, QWORD PTR [r10]
	test	r9, r9
	je	SHORT $LN10@Move@4
	inc	DWORD PTR [r9]
$LN10@Move@4:
	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN13@Move@4
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	cmp	DWORD PTR [rax], r11d
	mov	rcx, rax
	cmove	rcx, r11
	mov	QWORD PTR [r8], rcx
$LN13@Move@4:
	add	r10, 8
	mov	QWORD PTR [r8], r9
	add	r8, 8
	cmp	r10, rdx
	jne	SHORT $LL3@Move@4
$LN19@Move@4:

; 2515 : 	return (_Dest);

	mov	rax, r8

; 2516 : 	}

	ret	0
??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN75
	DD	imagerel $LN75+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN75+15
	DD	imagerel $LN75+101
	DD	imagerel $chain$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN75+101
	DD	imagerel $LN75+103
	DD	imagerel $chain$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 021H
	DD	imagerel $LN75
	DD	imagerel $LN75+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 020521H
	DD	076405H
	DD	imagerel $LN75
	DD	imagerel $LN75+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 040f01H
	DD	08340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T218482 = 48
_First$ = 48
_Last$ = 56
??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >, COMDAT

; 95   : 	{	// destroy [_First, _Last), arbitrary type

$LN75:

; 96   : 	for (; _First != _Last; ++_First)

	cmp	rcx, rdx
	je	SHORT $LN74@Destroy_ra@4
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+56], rsi

; 95   : 	{	// destroy [_First, _Last), arbitrary type

	mov	rdi, rdx
	mov	rbx, rcx

; 96   : 	for (; _First != _Last; ++_First)

	xor	esi, esi
	npad	4
$LL3@Destroy_ra@4:

; 97   : 		_Dest_val(_Al, _First);

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN27@Destroy_ra@4
	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR $T218482[rsp], rax
	test	rax, rax
	je	SHORT $LN27@Destroy_ra@4
	lea	rcx, QWORD PTR $T218482[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN27@Destroy_ra@4:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], rsi
	mov	BYTE PTR [rbx], sil
	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL3@Destroy_ra@4
	mov	rsi, QWORD PTR [rsp+56]

; 98   : 	}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN74@Destroy_ra@4:
	fatret	0
??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?construct@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@AEBV2@@Z
_TEXT	SEGMENT
p$ = 8
_Val$ = 16
?construct@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@AEBV2@@Z PROC ; xalloc<shared_str>::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

	mov	r8, rcx
	test	rcx, rcx
	je	SHORT $LN5@construct@14
	xor	r9d, r9d
	mov	QWORD PTR [rcx], r9
	mov	rdx, QWORD PTR [rdx]
	test	rdx, rdx
	je	SHORT $LN13@construct@14
	inc	DWORD PTR [rdx]
$LN13@construct@14:
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN16@construct@14
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN16@construct@14:
	mov	QWORD PTR [r8], rdx
$LN5@construct@14:
	fatret	0
?construct@?$xalloc@Vshared_str@@@@QEAAXPEAVshared_str@@AEBV2@@Z ENDP ; xalloc<shared_str>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@@Z PROC ; std::_Destroy_range<xalloc<shared_str> >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

	mov	r8, rcx

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	cmp	rcx, rdx
	je	SHORT $LN5@Destroy_ra@5
	xor	r9d, r9d
	npad	5
$LL7@Destroy_ra@5:
	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN21@Destroy_ra@5
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN21@Destroy_ra@5:
	add	r8, 8
	cmp	r8, rdx
	jne	SHORT $LL7@Destroy_ra@5
$LN5@Destroy_ra@5:

; 89   : 	}

	fatret	0
??$_Destroy_range@V?$xalloc@Vshared_str@@@@@std@@YAXPEAVshared_str@@0AEAV?$xalloc@Vshared_str@@@@@Z ENDP ; std::_Destroy_range<xalloc<shared_str> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00@Z PROC ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

	mov	r10, rdx
	mov	r9, rcx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN23@Move@5
	sub	r9, r8
	xor	r11d, r11d
$LL7@Move@5:
	mov	rax, QWORD PTR [r9+r8]
	test	rax, rax
	je	SHORT $LN14@Move@5
	inc	DWORD PTR [rax]
$LN14@Move@5:
	mov	rcx, QWORD PTR [r8]
	test	rcx, rcx
	je	SHORT $LN17@Move@5
	dec	DWORD PTR [rcx]
	mov	rcx, QWORD PTR [r8]
	cmp	DWORD PTR [rcx], r11d
	mov	rdx, rcx
	cmove	rdx, r11
	mov	QWORD PTR [r8], rdx
$LN17@Move@5:
	mov	QWORD PTR [r8], rax
	add	r8, 8
	lea	rcx, QWORD PTR [r9+r8]
	cmp	rcx, r10
	jne	SHORT $LL7@Move@5
$LN23@Move@5:
	mov	rax, r8

; 2536 : 	}

	ret	0
??$_Move@PEAVshared_str@@PEAV1@@std@@YAPEAVshared_str@@PEAV1@00@Z ENDP ; std::_Move<shared_str * __ptr64,shared_str * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD imagerel $LN79
	DD	imagerel $LN79+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD imagerel $LN79+15
	DD	imagerel $LN79+101
	DD	imagerel $chain$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD imagerel $LN79+101
	DD	imagerel $LN79+103
	DD	imagerel $chain$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD 021H
	DD	imagerel $LN79
	DD	imagerel $LN79+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD 020521H
	DD	076405H
	DD	imagerel $LN79
	DD	imagerel $LN79+15
	DD	imagerel $unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z DD 040f01H
	DD	08340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
_TEXT	SEGMENT
$T219548 = 48
_First$ = 48
_Last$ = 56
??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z PROC ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >, COMDAT

; 87   : 	{	// destroy [_First, _Last)

$LN79:

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	cmp	rcx, rdx
	je	SHORT $LN78@Destroy_ra@6
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+56], rsi

; 87   : 	{	// destroy [_First, _Last)

	mov	rdi, rdx
	mov	rbx, rcx

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	xor	esi, esi
	npad	4
$LL7@Destroy_ra@6:
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN31@Destroy_ra@6
	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR $T219548[rsp], rax
	test	rax, rax
	je	SHORT $LN31@Destroy_ra@6
	lea	rcx, QWORD PTR $T219548[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN31@Destroy_ra@6:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], rsi
	mov	BYTE PTR [rbx], sil
	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL7@Destroy_ra@6
	mov	rsi, QWORD PTR [rsp+56]

; 89   : 	}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN78@Destroy_ra@6:
	fatret	0
??$_Destroy_range@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ENDP ; std::_Destroy_range<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@Vshared_str@@@@Vshared_str@@V2@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@$$QEAV2@@Z
_TEXT	SEGMENT
_Pdest$ = 8
_Src$ = 16
??$_Cons_val@V?$xalloc@Vshared_str@@@@Vshared_str@@V2@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@$$QEAV2@@Z PROC ; std::_Cons_val<xalloc<shared_str>,shared_str,shared_str>, COMDAT

; 279  : 	{	// construct using allocator

	mov	r8, rcx

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@24
	xor	r9d, r9d
	mov	QWORD PTR [rcx], r9
	mov	rdx, QWORD PTR [rdx]
	test	rdx, rdx
	je	SHORT $LN17@Cons_val@24
	inc	DWORD PTR [rdx]
$LN17@Cons_val@24:
	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN20@Cons_val@24
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN20@Cons_val@24:
	mov	QWORD PTR [r8], rdx
$LN9@Cons_val@24:

; 281  : 	}

	fatret	0
??$_Cons_val@V?$xalloc@Vshared_str@@@@Vshared_str@@V2@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@$$QEAV2@@Z ENDP ; std::_Cons_val<xalloc<shared_str>,shared_str,shared_str>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAXPEAVshared_str@@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
?_Destroy@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAXPEAVshared_str@@0@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Destroy, COMDAT

; 1269 : 		{	// destroy [_First, _Last) using allocator

	mov	r8, rcx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

	cmp	rcx, rdx
	je	SHORT $LN7@Destroy@7
	xor	r9d, r9d
	npad	5
$LL9@Destroy@7:
	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN23@Destroy@7
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [r8], rcx
$LN23@Destroy@7:
	add	r8, 8
	cmp	r8, rdx
	jne	SHORT $LL9@Destroy@7
$LN7@Destroy@7:

; 1271 : 		}

	fatret	0
?_Destroy@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAXPEAVshared_str@@0@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD imagerel $LN116
	DD	imagerel $LN116+25
	DD	imagerel $unwind$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD imagerel $LN116+25
	DD	imagerel $LN116+159
	DD	imagerel $chain$0$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD imagerel $LN116+159
	DD	imagerel $LN116+172
	DD	imagerel $chain$1$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+25
	DD	imagerel $unwind$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD 020521H
	DD	026405H
	DD	imagerel $LN116
	DD	imagerel $LN116+25
	DD	imagerel $unwind$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z DD 030601H
	DD	033406H
	DD	07006H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
_First_arg$ = 32
_Last_arg$ = 40
?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::erase, COMDAT

; 1190 : 		{	// erase [_First, _Last)

$LN116:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	mov	rbx, rdx
	mov	rdi, rcx

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

	cmp	r8, r9
	je	$LN114@erase@10

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

	mov	r11, QWORD PTR [rcx+8]
	mov	QWORD PTR [rsp+16], rsi
	xor	esi, esi
	mov	r10, r8
	cmp	r9, r11
	je	SHORT $LN30@erase@10
$LL32@erase@10:
	mov	rdx, QWORD PTR [r9]
	test	rdx, rdx
	je	SHORT $LN39@erase@10
	inc	DWORD PTR [rdx]
$LN39@erase@10:
	mov	rax, QWORD PTR [r10]
	test	rax, rax
	je	SHORT $LN42@erase@10
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r10]
	cmp	DWORD PTR [rax], esi
	mov	rcx, rax
	cmove	rcx, rsi
	mov	QWORD PTR [r10], rcx
$LN42@erase@10:
	add	r9, 8
	mov	QWORD PTR [r10], rdx
	add	r10, 8
	cmp	r9, r11
	jne	SHORT $LL32@erase@10
$LN30@erase@10:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

	mov	r9, QWORD PTR [rdi+8]
	mov	rdx, r10
	cmp	r10, r9
	je	SHORT $LN52@erase@10
$LL54@erase@10:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN68@erase@10
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	cmp	DWORD PTR [rax], esi
	mov	rcx, rax
	cmove	rcx, rsi
	mov	QWORD PTR [rdx], rcx
$LN68@erase@10:
	add	rdx, 8
	cmp	rdx, r9
	jne	SHORT $LL54@erase@10
$LN52@erase@10:

; 1211 : 			this->_Mylast = _Ptr;

	mov	rsi, QWORD PTR [rsp+16]
	mov	QWORD PTR [rdi+8], r10

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	QWORD PTR [rbx], r8
	mov	rax, rbx

; 1214 : 		}

	mov	rbx, QWORD PTR [rsp+24]
	pop	rdi
	ret	0
$LN114@erase@10:

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	rax, rbx

; 1214 : 		}

	mov	rbx, QWORD PTR [rsp+24]
	mov	QWORD PTR [rdx], r8
	pop	rdi
	ret	0
?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@@2@0@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD imagerel $LN81
	DD	imagerel $LN81+15
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD imagerel $LN81+15
	DD	imagerel $LN81+101
	DD	imagerel $chain$0$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD imagerel $LN81+101
	DD	imagerel $LN81+103
	DD	imagerel $chain$1$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD 021H
	DD	imagerel $LN81
	DD	imagerel $LN81+15
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD 020521H
	DD	076405H
	DD	imagerel $LN81
	DD	imagerel $LN81+15
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z DD 040f01H
	DD	08340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z
_TEXT	SEGMENT
$T221439 = 48
_First$ = 48
_Last$ = 56
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy, COMDAT

; 1269 : 		{	// destroy [_First, _Last) using allocator

$LN81:

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

	cmp	rcx, rdx
	je	SHORT $LN80@Destroy@8
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+56], rsi

; 1269 : 		{	// destroy [_First, _Last) using allocator

	mov	rdi, rdx
	mov	rbx, rcx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);

	xor	esi, esi
	npad	4
$LL9@Destroy@8:
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN33@Destroy@8
	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR $T221439[rsp], rax
	test	rax, rax
	je	SHORT $LN33@Destroy@8
	lea	rcx, QWORD PTR $T221439[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN33@Destroy@8:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], rsi
	mov	BYTE PTR [rbx], sil
	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL9@Destroy@8
	mov	rsi, QWORD PTR [rsp+56]

; 1271 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN80@Destroy@8:
	fatret	0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD imagerel $LN132
	DD	imagerel $LN132+19
	DD	imagerel $unwind$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD imagerel $LN132+19
	DD	imagerel $LN132+143
	DD	imagerel $chain$0$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD imagerel $LN132+143
	DD	imagerel $LN132+148
	DD	imagerel $chain$1$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD 021H
	DD	imagerel $LN132
	DD	imagerel $LN132+19
	DD	imagerel $unwind$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD 020421H
	DD	03404H
	DD	imagerel $LN132
	DD	imagerel $LN132+19
	DD	imagerel $unwind$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ DD 010401H
	DD	0204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::clear, COMDAT

; 1217 : 		{	// erase all

$LN132:
	sub	rsp, 8

; 1218 : 		erase(begin(), end());

	mov	rdx, QWORD PTR [rcx]
	mov	r10, QWORD PTR [rcx+8]
	mov	r11, rcx
	cmp	rdx, r10
	je	SHORT $LN19@clear@7
	mov	QWORD PTR [rsp], rbx
	xor	ebx, ebx
	cmp	r10, r10
	je	SHORT $LN48@clear@7
	mov	r9, r10
	sub	r9, rdx
$LL50@clear@7:
	mov	r8, QWORD PTR [r9+rdx]
	test	r8, r8
	je	SHORT $LN57@clear@7
	inc	DWORD PTR [r8]
$LN57@clear@7:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN60@clear@7
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	cmp	DWORD PTR [rax], ebx
	mov	rcx, rax
	cmove	rcx, rbx
	mov	QWORD PTR [rdx], rcx
$LN60@clear@7:
	mov	QWORD PTR [rdx], r8
	add	rdx, 8
	lea	rax, QWORD PTR [r9+rdx]
	cmp	rax, r10
	jne	SHORT $LL50@clear@7
$LN48@clear@7:
	mov	r9, QWORD PTR [r11+8]
	mov	r8, rdx
	cmp	rdx, r9
	je	SHORT $LN70@clear@7
$LL72@clear@7:
	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN86@clear@7
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	cmp	DWORD PTR [rax], ebx
	mov	rcx, rax
	cmove	rcx, rbx
	mov	QWORD PTR [r8], rcx
$LN86@clear@7:
	add	r8, 8
	cmp	r8, r9
	jne	SHORT $LL72@clear@7
$LN70@clear@7:
	mov	rbx, QWORD PTR [rsp]
	mov	QWORD PTR [r11+8], rdx
$LN19@clear@7:

; 1219 : 		}

	add	rsp, 8
	ret	0
?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::clear
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_and_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ PROC ; xr_vector<shared_str,xalloc<shared_str> >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	jmp	?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ ; std::vector<shared_str,xalloc<shared_str> >::clear
?clear_and_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ ENDP ; xr_vector<shared_str,xalloc<shared_str> >::clear_and_free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ PROC ; xr_vector<shared_str,xalloc<shared_str> >::clear, COMDAT

; 132  : 	void	clear				()									{ clear_and_free	();			}

	jmp	?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ ; std::vector<shared_str,xalloc<shared_str> >::clear
?clear@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QEAAXXZ ENDP ; xr_vector<shared_str,xalloc<shared_str> >::clear
_TEXT	ENDS
PUBLIC	?_ChangeSymbol@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@DD@Z ; _ChangeSymbol
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
_TEXT	SEGMENT
name$ = 8
src$ = 16
dest$ = 24
?_ChangeSymbol@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@DD@Z PROC ; _ChangeSymbol

; 162  : 	for (xr_string::iterator it=name.begin(); it!=name.end(); it++) 

	cmp	QWORD PTR [rcx+24], 16
	movzx	r10d, dl
	mov	r9, rcx
	jb	SHORT $LN11@ChangeSymb@2
	mov	rax, QWORD PTR [rcx]
	jmp	SHORT $LL23@ChangeSymb@2
$LN11@ChangeSymb@2:
	mov	rax, rcx
$LL23@ChangeSymb@2:
	cmp	QWORD PTR [r9+24], 16
	jb	SHORT $LN29@ChangeSymb@2
	mov	rdx, QWORD PTR [r9]
	jmp	SHORT $LN30@ChangeSymb@2
$LN29@ChangeSymb@2:
	mov	rdx, r9
$LN30@ChangeSymb@2:
	add	rdx, QWORD PTR [r9+16]
	cmp	rax, rdx
	je	SHORT $LN58@ChangeSymb@2

; 163  :     	if (*it==src) *it=xr_string::value_type(dest);

	movzx	edx, BYTE PTR [rax]
	cmp	BYTE PTR [rax], r10b
	movzx	ecx, r8b
	cmove	edx, ecx
	inc	rax
	mov	BYTE PTR [rax-1], dl
	jmp	SHORT $LL23@ChangeSymb@2
$LN58@ChangeSymb@2:

; 164  :     return  name;

	mov	rax, r9

; 165  : }

	ret	0
?_ChangeSymbol@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@DD@Z ENDP ; _ChangeSymbol
_TEXT	ENDS
PUBLIC	?_GetItem@@YAPEADPEBDHPEADD0_N@Z		; _GetItem
pdata	SEGMENT
$pdata$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD imagerel $LN21
	DD	imagerel $LN21+6
	DD	imagerel $unwind$?_GetItem@@YAPEADPEBDHPEADD0_N@Z
$pdata$4$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD imagerel $LN21+6
	DD	imagerel $LN21+222
	DD	imagerel $chain$4$?_GetItem@@YAPEADPEBDHPEADD0_N@Z
$pdata$5$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD imagerel $LN21+222
	DD	imagerel $LN21+239
	DD	imagerel $chain$5$?_GetItem@@YAPEADPEBDHPEADD0_N@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD 020601H
	DD	060025206H
$chain$4$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD 0a1b21H
	DD	04d41bH
	DD	05c414H
	DD	0a740fH
	DD	09540aH
	DD	083405H
	DD	imagerel $LN21
	DD	imagerel $LN21+6
	DD	imagerel $unwind$?_GetItem@@YAPEADPEBDHPEADD0_N@Z
$chain$5$?_GetItem@@YAPEADPEBDHPEADD0_N@Z DD 021H
	DD	imagerel $LN21
	DD	imagerel $LN21+6
	DD	imagerel $unwind$?_GetItem@@YAPEADPEBDHPEADD0_N@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 64
index$ = 72
dst$ = 80
separator$ = 88
def$ = 96
trim$ = 104
?_GetItem@@YAPEADPEBDHPEADD0_N@Z PROC			; _GetItem

; 72   : {

$LN21:
	push	rsi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rbp
	mov	QWORD PTR [rsp+80], rdi
	mov	QWORD PTR [rsp+40], r12

; 73   : 	LPCSTR	ptr;
; 74   : 	ptr			= _SetPos	( src, index, separator );

	xor	edi, edi
	mov	QWORD PTR [rsp+32], r13
	movzx	r13d, r9b
	mov	rsi, r8
	mov	ebp, edx
	mov	rbx, rcx
	test	edx, edx
	je	SHORT $LN7@GetItem
	movsx	r12d, r9b
	npad	11
$LL8@GetItem:
	mov	edx, r12d
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN3@GetItem
	inc	edi
	inc	rbx
	cmp	edi, ebp
	jb	SHORT $LL8@GetItem
$LN7@GetItem:

; 75   : 	if( ptr )	_CopyVal	( ptr, dst, separator );

	test	rbx, rbx
	je	SHORT $LN3@GetItem
	movsx	edx, r13b
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN13@GetItem
	sub	rdi, rbx
	jmp	SHORT $LN14@GetItem
$LN13@GetItem:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	rdi, QWORD PTR [rcx-1]
	mov	edi, edi
$LN14@GetItem:
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, rsi
	call	QWORD PTR __imp_strncpy
	mov	BYTE PTR [rdi+rsi], 0
	jmp	SHORT $LN2@GetItem
$LN3@GetItem:

; 76   : 		else	strcpy		( dst, def );

	mov	rcx, QWORD PTR def$[rsp]
	mov	rdx, rsi
	sub	rdx, rcx
	npad	2
$LL6@GetItem:
	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR [rdx+rcx-1], al
	test	al, al
	jne	SHORT $LL6@GetItem
$LN2@GetItem:

; 77   : 	if (trim)	_Trim		( dst );

	cmp	BYTE PTR trim$[rsp], 0
	mov	r13, QWORD PTR [rsp+32]
	mov	r12, QWORD PTR [rsp+40]
	mov	rdi, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
	je	SHORT $LN20@GetItem
	mov	rcx, rsi
	call	?_Trim@@YAPEADPEAD@Z			; _Trim
$LN20@GetItem:

; 78   : 	return		dst;

	mov	rax, rsi

; 79   : }

	add	rsp, 48					; 00000030H
	pop	rsi
	ret	0
?_GetItem@@YAPEADPEBDHPEADD0_N@Z ENDP			; _GetItem
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN35
	DD	imagerel $LN35+82
	DD	imagerel $unwind$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+35
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+71
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 041519H
	DD	07008520cH
	DD	030066007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T255732 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN35:
	mov	QWORD PTR [rsp+24], r8
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T255732[rsp], -2
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

	mov	QWORD PTR _Next$[rsp], r8
$LL6@Uninit_mov@8:

; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rbx, rsi
	je	SHORT $LN4@Uninit_mov@8

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Cons_val@V?$xalloc@Vshared_str@@@@Vshared_str@@V2@@std@@YAXAEAV?$xalloc@Vshared_str@@@@PEAVshared_str@@$$QEAV2@@Z ; std::_Cons_val<xalloc<shared_str>,shared_str,shared_str>

; 428  : 
; 429  : 	_TRY_BEGIN
; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	rdi, 8
	mov	QWORD PTR _Dest$[rsp], rdi
	add	rbx, 8
	mov	QWORD PTR _First$[rsp], rbx
	jmp	SHORT $LL6@Uninit_mov@8
$LN4@Uninit_mov@8:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, rdi

; 438  : 	}

	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN34@Uninit_mov@8:
??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T255732 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)

	mov	rdx, QWORD PTR _Next$[rbp]
	mov	r8, QWORD PTR _Dest$[rbp]
	cmp	rdx, r8
	je	SHORT $LN1@catch$0@5
	npad	6
$LL3@catch$0@5:

; 434  : 		_Dest_val(_Al, _Next);

	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN25@catch$0@5
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	mov	rcx, rax
	xor	r9d, r9d
	cmp	DWORD PTR [rax], r9d
	cmove	rcx, r9
	mov	QWORD PTR [rdx], rcx
$LN25@catch$0@5:

; 433  : 	for (; _Next != _Dest; ++_Next)

	add	rdx, 8
	cmp	rdx, r8
	jne	SHORT $LL3@catch$0@5
$LN1@catch$0@5:

; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>'::`1'::catch$0
; Function compile flags: /Ogtpy
text$x	ENDS
;	COMDAT ??$_Uninitialized_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@@Z PROC ; std::_Uninitialized_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str> >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>
??$_Uninitialized_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@@Z ENDP ; std::_Uninitialized_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAVshared_str@@@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAPEAVshared_str@@PEAV2@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAVshared_str@@@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAPEAVshared_str@@PEAV2@00@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Umove<shared_str * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>
??$_Umove@PEAVshared_str@@@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAPEAVshared_str@@PEAV2@00@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Umove<shared_str * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD imagerel $LN100
	DD	imagerel $LN100+254
	DD	imagerel $unwind$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z+111
	DD	00H
	DD	imagerel ?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z+127
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T256406 = 32
this$ = 64
$T256390 = 72
$T255858 = 72
_Ptr$97872 = 72
_Count$ = 72
?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN100:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T256406[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rsi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3
	cmp	rax, rdx
	jae	$LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	edx, edx
	shl	rdx, 3
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rdi, rax
	mov	QWORD PTR _Ptr$97872[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAVshared_str@@PEAV1@V?$xalloc@Vshared_str@@@@V1@@std@@YAPEAVshared_str@@PEAV1@00AEAV?$xalloc@Vshared_str@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<shared_str * __ptr64,shared_str * __ptr64,xalloc<shared_str>,shared_str>
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	r8, QWORD PTR [rbx+8]
	mov	rdx, QWORD PTR [rbx]
	mov	r12, r8
	sub	r12, rdx
	sar	r12, 3

; 761  : 			if (this->_Myfirst != 0)

	test	rdx, rdx
	je	SHORT $LN93@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

	cmp	rdx, r8
	je	SHORT $LN43@reserve
	xor	r9d, r9d
	npad	3
$LL45@reserve:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN59@reserve
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	mov	rcx, rax
	cmp	DWORD PTR [rax], r9d
	cmove	rcx, r9
	mov	QWORD PTR [rdx], rcx
$LN59@reserve:
	add	rdx, 8
	cmp	rdx, r8
	jne	SHORT $LL45@reserve
$LN43@reserve:

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR $T256390[rsp], rax
	lea	rcx, QWORD PTR $T256390[rsp]
	call	??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z ; xr_free<shared_str>
$LN93@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	lea	rax, QWORD PTR [rdi+rsi*8]
	mov	QWORD PTR [rbx+16], rax

; 770  : 			this->_Mylast = _Ptr + _Size;

	lea	rax, QWORD PTR [rdi+r12*8]
	mov	QWORD PTR [rbx+8], rax

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], rdi
$LN3@reserve:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN99@reserve:
?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T256406 = 32
this$ = 64
$T256390 = 72
$T255858 = 72
_Ptr$97872 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<shared_str,xalloc<shared_str> >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rax, QWORD PTR _Ptr$97872[rbp]
	mov	QWORD PTR $T255858[rbp], rax
	lea	rcx, QWORD PTR $T255858[rbp]
	call	??$xr_free@Vshared_str@@@@YAXAEAPEAVshared_str@@@Z ; xr_free<shared_str>

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<shared_str,xalloc<shared_str> >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+124
	DD	imagerel $unwind$?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	r10, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]

; 1292 : 		if (max_size() - _Count < _Size)

	mov	r9, 2305843009213693951			; 1fffffffffffffffH
	sub	r8, r10
	mov	rax, r9
	sar	r8, 3
	sub	rax, rdx
	cmp	rax, r8
	jae	SHORT $LN4@Reserve

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	add	r8, rdx
	mov	rdx, QWORD PTR [rcx+16]
	sub	rdx, r10
	sar	rdx, 3
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rax, rdx
	shr	rax, 1
	sub	r9, rax
	cmp	r9, rdx
	jae	SHORT $LN21@Reserve
	xor	edx, edx
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve:
	add	rdx, rax
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::reserve
$LN1@Reserve:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve:
?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrstring.h
pdata	SEGMENT
$pdata$?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z DD imagerel $LN75
	DD	imagerel $LN75+173
	DD	imagerel $unwind$?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z PROC ; std::vector<shared_str,xalloc<shared_str> >::push_back, COMDAT

; 631  : 		{	// insert element at end

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 632  : 		if (_Inside(_STD addressof(_Val)))

	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	rdx, rax
	jae	SHORT $LN4@push_back
	mov	rcx, QWORD PTR [rcx]
	cmp	rcx, rdx
	ja	SHORT $LN4@push_back

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	sub	rdi, rcx
	sar	rdi, 3

; 635  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN3@push_back

; 636  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, rbx
	call	?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
$LN3@push_back:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

	mov	rdx, QWORD PTR [rbx+8]
	mov	r8, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN54@push_back
	xor	r9d, r9d
	mov	QWORD PTR [rdx], r9
	mov	r8, QWORD PTR [r8+rdi*8]

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

	jmp	SHORT $LN74@push_back
$LN4@push_back:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN1@push_back

; 646  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, rbx
	call	?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
$LN1@push_back:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN54@push_back
	xor	r9d, r9d
	mov	QWORD PTR [rdx], r9
	mov	r8, QWORD PTR [rdi]
$LN74@push_back:
	test	r8, r8
	je	SHORT $LN62@push_back
	inc	DWORD PTR [r8]
$LN62@push_back:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN65@push_back
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	cmp	DWORD PTR [rax], r9d
	mov	rcx, rax
	cmove	rcx, r9
	mov	QWORD PTR [rdx], rcx
$LN65@push_back:
	mov	QWORD PTR [rdx], r8
$LN54@push_back:

; 651  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 8

; 652  : 			}
; 653  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAX$$QEAVshared_str@@@Z ENDP ; std::vector<shared_str,xalloc<shared_str> >::push_back
_TEXT	ENDS
PUBLIC	?_ParseItem@@YAIPEADHPEAUxr_token@@@Z		; _ParseItem
pdata	SEGMENT
$pdata$?_ParseItem@@YAIPEADHPEAUxr_token@@@Z DD imagerel $LN54
	DD	imagerel $LN54+437
	DD	imagerel $unwind$?_ParseItem@@YAIPEADHPEAUxr_token@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ParseItem@@YAIPEADHPEAUxr_token@@@Z DD 0b1d01H
	DD	019741dH
	DD	018641dH
	DD	017541dH
	DD	016341dH
	DD	014011dH
	DD	0c016H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
dst$ = 32
src$ = 176
ind$ = 184
token_list$ = 192
?_ParseItem@@YAIPEADHPEAUxr_token@@@Z PROC		; _ParseItem

; 104  : {

$LN54:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 160				; 000000a0H

; 105  : 	char dst[128];
; 106  : 	_GetItem(src, ind, dst);

	xor	esi, esi
	mov	r12, r8
	mov	ebp, edx
	mov	rbx, rcx
	mov	edi, esi
	test	edx, edx
	je	SHORT $LN9@ParseItem@2
	npad	3
$LL10@ParseItem@2:
	mov	edx, 44					; 0000002cH
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN5@ParseItem@2
	inc	edi
	inc	rbx
	cmp	edi, ebp
	jb	SHORT $LL10@ParseItem@2
$LN9@ParseItem@2:
	test	rbx, rbx
	je	SHORT $LN5@ParseItem@2
	mov	edx, 44					; 0000002cH
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN15@ParseItem@2
	sub	rdi, rbx
	jmp	SHORT $LN16@ParseItem@2
$LN15@ParseItem@2:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	rdi, QWORD PTR [rcx-1]
	mov	edi, edi
$LN16@ParseItem@2:
	lea	rcx, QWORD PTR dst$[rsp]
	mov	r8, rdi
	mov	rdx, rbx
	call	QWORD PTR __imp_strncpy
	mov	BYTE PTR dst$[rsp+rdi], sil
	jmp	SHORT $LN4@ParseItem@2
$LN5@ParseItem@2:
	mov	rcx, rsi
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	npad	13
$LL8@ParseItem@2:
	movzx	eax, BYTE PTR [rcx+rdx]
	inc	rcx
	mov	BYTE PTR dst$[rsp+rcx-1], al
	test	al, al
	jne	SHORT $LL8@ParseItem@2
$LN4@ParseItem@2:
	movzx	ecx, BYTE PTR dst$[rsp]
	lea	rax, QWORD PTR dst$[rsp]
	test	cl, cl
	je	SHORT $LN24@ParseItem@2
	npad	3
$LL26@ParseItem@2:
	cmp	cl, 32					; 00000020H
	ja	SHORT $LN25@ParseItem@2
	movzx	ecx, BYTE PTR [rax+1]
	inc	rax
	test	cl, cl
	jne	SHORT $LL26@ParseItem@2
$LN25@ParseItem@2:
	lea	rcx, QWORD PTR dst$[rsp]
	cmp	rax, rcx
	je	SHORT $LN24@ParseItem@2
	movzx	ecx, BYTE PTR [rax]
	lea	rdx, QWORD PTR dst$[rsp]
	test	cl, cl
	je	SHORT $LN21@ParseItem@2
	lea	rdi, QWORD PTR dst$[rsp]
	sub	rax, rdi
	npad	2
$LL23@ParseItem@2:
	mov	BYTE PTR [rdx], cl
	movzx	ecx, BYTE PTR [rax+rdx+1]
	inc	rdx
	test	cl, cl
	jne	SHORT $LL23@ParseItem@2
$LN21@ParseItem@2:
	mov	BYTE PTR [rdx], sil
$LN24@ParseItem@2:
	xor	eax, eax
	or	rcx, -1
	lea	rdi, QWORD PTR dst$[rsp]
	repne scasb
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	mov	eax, eax
	lea	rcx, QWORD PTR dst$[rsp+rax]
	lea	rax, QWORD PTR dst$[rsp]
	cmp	rcx, rax
	je	SHORT $LN53@ParseItem@2
$LL30@ParseItem@2:
	cmp	BYTE PTR [rcx], 32			; 00000020H
	ja	SHORT $LN53@ParseItem@2
	lea	rax, QWORD PTR dst$[rsp]
	dec	rcx
	cmp	rcx, rax
	jne	SHORT $LL30@ParseItem@2
$LN53@ParseItem@2:
	mov	BYTE PTR [rcx+1], sil

; 107  : 	return _ParseItem(dst, token_list);

	mov	rdi, rsi
	cmp	QWORD PTR [r12], rsi
	je	SHORT $LN36@ParseItem@2
	mov	rax, r12
	npad	8
$LL38@ParseItem@2:
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR dst$[rsp]
	call	QWORD PTR __imp_stricmp
	test	eax, eax
	je	SHORT $LN47@ParseItem@2
	inc	rdi
	inc	esi
	mov	rax, rdi
	shl	rax, 4
	add	rax, r12
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LL38@ParseItem@2
$LN36@ParseItem@2:
	or	eax, -1					; ffffffffH
$LN39@ParseItem@2:

; 108  : }

	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rdi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r12
	ret	0
$LN47@ParseItem@2:

; 107  : 	return _ParseItem(dst, token_list);

	movsxd	rax, esi
	add	rax, rax
	mov	eax, DWORD PTR [r12+rax*8+8]
	jmp	SHORT $LN39@ParseItem@2
?_ParseItem@@YAIPEADHPEAUxr_token@@@Z ENDP		; _ParseItem
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
;	COMDAT ??$xr_alloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@I@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@I@Z PROC ; xr_alloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
??$xr_alloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@I@Z ENDP ; xr_alloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@PEAD@@YAPEAPEADI@Z
_TEXT	SEGMENT
count$ = 8
??$xr_alloc@PEAD@@YAPEAPEADI@Z PROC			; xr_alloc<char * __ptr64>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	edx, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
??$xr_alloc@PEAD@@YAPEAPEADI@Z ENDP			; xr_alloc<char * __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_KPEBX@Z PROC ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	eax, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
?allocate@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_KPEBX@Z ENDP ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@PEAD@@QEBAPEAPEAD_KPEBX@Z
_TEXT	SEGMENT
n$ = 8
?allocate@?$xalloc@PEAD@@QEBAPEAPEAD_KPEBX@Z PROC	; xalloc<char * __ptr64>::allocate, COMDAT

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	edx, ecx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	shl	rdx, 3
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
?allocate@?$xalloc@PEAD@@QEBAPEAPEAD_KPEBX@Z ENDP	; xalloc<char * __ptr64>::allocate
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD imagerel $LN44
	DD	imagerel $LN44+198
	DD	imagerel $unwind$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z+107
	DD	00H
	DD	imagerel ?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z+123
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T286052 = 32
this$ = 64
$T286040 = 72
$T286033 = 72
_Ptr$97754 = 72
_Count$ = 72
?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN44:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T286052[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rdi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve@3

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve@3:

; 749  : 		else if (capacity() < _Count)

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3
	cmp	rax, rdx
	jae	SHORT $LN3@reserve@3

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	edx, edx
	shl	rdx, 3
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rsi, rax
	mov	QWORD PTR _Ptr$97754[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAPEADPEAPEADV?$xalloc@PEAD@@PEAD@std@@YAPEAPEADPEAPEAD00AEAV?$xalloc@PEAD@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<char * __ptr64 * __ptr64,char * __ptr64 * __ptr64,xalloc<char * __ptr64>,char * __ptr64>
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	rax, QWORD PTR [rbx]
	mov	r12, QWORD PTR [rbx+8]
	sub	r12, rax
	sar	r12, 3

; 761  : 			if (this->_Myfirst != 0)

	test	rax, rax
	je	SHORT $LN39@reserve@3

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	QWORD PTR $T286040[rsp], rax
	lea	rcx, QWORD PTR $T286040[rsp]
	call	??$xr_free@PEAD@@YAXAEAPEAPEAD@Z	; xr_free<char * __ptr64>
$LN39@reserve@3:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	lea	rax, QWORD PTR [rsi+rdi*8]
	mov	QWORD PTR [rbx+16], rax

; 770  : 			this->_Mylast = _Ptr + _Size;

	lea	rax, QWORD PTR [rsi+r12*8]
	mov	QWORD PTR [rbx+8], rax

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], rsi
$LN3@reserve@3:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN43@reserve@3:
?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T286052 = 32
this$ = 64
$T286040 = 72
$T286033 = 72
_Ptr$97754 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rax, QWORD PTR _Ptr$97754[rbp]
	mov	QWORD PTR $T286033[rbp], rax
	lea	rcx, QWORD PTR $T286033[rbp]
	call	??$xr_free@PEAD@@YAXAEAPEAPEAD@Z	; xr_free<char * __ptr64>

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+137
	DD	imagerel $unwind$?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	rax, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rcx+8]
	mov	r9, rcx
	sub	r8, rax

; 1292 : 		if (max_size() - _Count < _Size)

	mov	rcx, 2305843009213693950		; 1ffffffffffffffeH
	sar	r8, 3
	cmp	r8, rcx
	jbe	SHORT $LN4@Reserve@3

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve@3:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	mov	rdx, QWORD PTR [r9+16]
	inc	r8
	sub	rdx, rax
	sar	rdx, 3
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve@3

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rcx, rdx
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN21@Reserve@3
	xor	edx, edx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve@3:
	add	rdx, rcx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::reserve
$LN1@Reserve@3:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve@3:
?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z DD imagerel $LN52
	DD	imagerel $LN52+134
	DD	imagerel $unwind$?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z PROC ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::push_back, COMDAT

; 631  : 		{	// insert element at end

$LN52:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 632  : 		if (_Inside(_STD addressof(_Val)))

	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	rdx, rax
	jae	SHORT $LN4@push_back@3
	mov	rcx, QWORD PTR [rcx]
	cmp	rcx, rdx
	ja	SHORT $LN4@push_back@3

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	sub	rdi, rcx
	sar	rdi, 3

; 635  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN3@push_back@3

; 636  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
$LN3@push_back@3:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

	mov	rdx, QWORD PTR [rbx+8]
	test	rdx, rdx
	je	SHORT $LN45@push_back@3
	mov	rax, QWORD PTR [rbx]
	mov	rcx, QWORD PTR [rax+rdi*8]
	mov	QWORD PTR [rdx], rcx

; 651  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 8

; 652  : 			}
; 653  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@push_back@3:

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else
; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

	cmp	rax, QWORD PTR [rbx+16]
	jne	SHORT $LN1@push_back@3

; 646  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
$LN1@push_back@3:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN45@push_back@3
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rcx], rax
$LN45@push_back@3:

; 651  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 8

; 652  : 			}
; 653  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@PEADV?$xalloc@PEAD@@@std@@QEAAX$$QEAPEAD@Z ENDP ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::push_back
_TEXT	ENDS
PUBLIC	?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z ; _SequenceToList
pdata	SEGMENT
$pdata$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD imagerel $LN134
	DD	imagerel $LN134+66
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z
$pdata$1$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD imagerel $LN134+66
	DD	imagerel $LN134+734
	DD	imagerel $chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z
$pdata$2$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD imagerel $LN134+734
	DD	imagerel $LN134+752
	DD	imagerel $chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD 081e01H
	DD	085011eH
	DD	0e00df00fH
	DD	0c009d00bH
	DD	050067007H
$chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD 041021H
	DD	0846410H
	DD	08c3408H
	DD	imagerel $LN134
	DD	imagerel $LN134+66
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z
$chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z DD 021H
	DD	imagerel $LN134
	DD	imagerel $LN134+66
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
T$ = 32
lst$ = 1120
in$ = 1128
separator$ = 1136
$T286297 = 1144
?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z PROC ; _SequenceToList

; 315  : {

$LN134:
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-808]
	sub	rsp, 1064				; 00000428H
	mov	rdi, rdx
	mov	r12, rcx

; 316  : 	int t_cnt=_GetItemCount(in,separator);

	movzx	edx, r8b
	mov	rcx, rdi
	movzx	r14d, r8b
	call	?_GetItemCount@@YAHPEBDD@Z		; _GetItemCount

; 317  : 	string1024 T;
; 318  : 	for (int i=0; i<t_cnt; i++){

	xor	r13d, r13d
	mov	r15d, eax
	test	eax, eax
	jle	$LN2@SequenceTo
	mov	QWORD PTR [rsp+1120], rbx
	mov	QWORD PTR [rsp+1056], rsi
$LL4@SequenceTo:

; 319  : 		_GetItem(in,i,T,separator,0);

	mov	rbx, rdi
	xor	edi, edi
	test	r13d, r13d
	je	SHORT $LN13@SequenceTo
	movsx	esi, r14b
$LL14@SequenceTo:
	mov	edx, esi
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN9@SequenceTo
	inc	edi
	inc	rbx
	cmp	edi, r13d
	jb	SHORT $LL14@SequenceTo
$LN13@SequenceTo:
	test	rbx, rbx
	je	SHORT $LN9@SequenceTo
	movsx	edx, r14b
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN19@SequenceTo
	sub	rdi, rbx
	jmp	SHORT $LN20@SequenceTo
$LN19@SequenceTo:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	rdi, QWORD PTR [rcx-1]
	mov	edi, edi
$LN20@SequenceTo:
	lea	rcx, QWORD PTR T$[rsp]
	mov	r8, rdi
	mov	rdx, rbx
	call	QWORD PTR __imp_strncpy
	mov	BYTE PTR T$[rsp+rdi], 0
	jmp	SHORT $LN8@SequenceTo
$LN9@SequenceTo:
	xor	ecx, ecx
	npad	8
$LL12@SequenceTo:
	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR T$[rsp+rcx-1], al
	test	al, al
	jne	SHORT $LL12@SequenceTo
$LN8@SequenceTo:
	movzx	ecx, BYTE PTR T$[rsp]
	lea	rax, QWORD PTR T$[rsp]
	test	cl, cl
	je	SHORT $LN28@SequenceTo
	npad	4
$LL30@SequenceTo:
	cmp	cl, 32					; 00000020H
	ja	SHORT $LN29@SequenceTo
	movzx	ecx, BYTE PTR [rax+1]
	inc	rax
	test	cl, cl
	jne	SHORT $LL30@SequenceTo
$LN29@SequenceTo:
	lea	rcx, QWORD PTR T$[rsp]
	cmp	rax, rcx
	je	SHORT $LN28@SequenceTo
	movzx	edx, BYTE PTR [rax]
	lea	rcx, QWORD PTR T$[rsp]
	test	dl, dl
	je	SHORT $LN25@SequenceTo
	lea	rdi, QWORD PTR T$[rsp]
	sub	rax, rdi
	npad	2
$LL27@SequenceTo:
	mov	BYTE PTR [rcx], dl
	movzx	edx, BYTE PTR [rax+rcx+1]
	inc	rcx
	test	dl, dl
	jne	SHORT $LL27@SequenceTo
$LN25@SequenceTo:
	mov	BYTE PTR [rcx], 0
$LN28@SequenceTo:
	xor	eax, eax
	or	rcx, -1
	lea	rdi, QWORD PTR T$[rsp]
	repne scasb
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	mov	eax, eax
	lea	rcx, QWORD PTR T$[rsp+rax]
	lea	rax, QWORD PTR T$[rsp]
	cmp	rcx, rax
	je	SHORT $LN132@SequenceTo
$LL34@SequenceTo:
	cmp	BYTE PTR [rcx], 32			; 00000020H
	ja	SHORT $LN132@SequenceTo
	lea	rax, QWORD PTR T$[rsp]
	dec	rcx
	cmp	rcx, rax
	jne	SHORT $LL34@SequenceTo
$LN132@SequenceTo:
	mov	BYTE PTR [rcx+1], 0

; 320  :         _Trim(T);

	movzx	ecx, BYTE PTR T$[rsp]
	lea	rax, QWORD PTR T$[rsp]
	test	cl, cl
	je	SHORT $LN44@SequenceTo
	npad	6
$LL46@SequenceTo:
	cmp	cl, 32					; 00000020H
	ja	SHORT $LN45@SequenceTo
	movzx	ecx, BYTE PTR [rax+1]
	inc	rax
	test	cl, cl
	jne	SHORT $LL46@SequenceTo
$LN45@SequenceTo:
	lea	rcx, QWORD PTR T$[rsp]
	cmp	rax, rcx
	je	SHORT $LN44@SequenceTo
	movzx	edx, BYTE PTR [rax]
	lea	rcx, QWORD PTR T$[rsp]
	test	dl, dl
	je	SHORT $LN41@SequenceTo
	lea	rdi, QWORD PTR T$[rsp]
	sub	rax, rdi
	npad	2
$LL43@SequenceTo:
	mov	BYTE PTR [rcx], dl
	movzx	edx, BYTE PTR [rax+rcx+1]
	inc	rcx
	test	dl, dl
	jne	SHORT $LL43@SequenceTo
$LN41@SequenceTo:
	mov	BYTE PTR [rcx], 0
$LN44@SequenceTo:
	xor	eax, eax
	or	rcx, -1
	lea	rdi, QWORD PTR T$[rsp]
	repne scasb
	not	rcx
	lea	rax, QWORD PTR [rcx-1]
	mov	eax, eax
	lea	rcx, QWORD PTR T$[rsp+rax]
	lea	rax, QWORD PTR T$[rsp]
	cmp	rcx, rax
	je	SHORT $LN133@SequenceTo
$LL50@SequenceTo:
	cmp	BYTE PTR [rcx], 32			; 00000020H
	ja	SHORT $LN133@SequenceTo
	lea	rax, QWORD PTR T$[rsp]
	dec	rcx
	cmp	rcx, rax
	jne	SHORT $LL50@SequenceTo
$LN133@SequenceTo:
	mov	BYTE PTR [rcx+1], 0

; 321  :         if (xr_strlen(T)) lst.push_back(xr_strdup(T));

	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR T$[rsp]
	repne scasb
	not	rcx
	dec	rcx
	test	ecx, ecx
	je	$LN3@SequenceTo
	lea	eax, DWORD PTR [rcx+1]
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, eax
	mov	edi, eax
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	lea	rdx, QWORD PTR T$[rsp]
	mov	r8d, edi
	mov	rcx, rax
	mov	rbx, rax
	call	memcpy
	mov	rdx, QWORD PTR [r12+8]
	lea	rax, QWORD PTR $T286297[rbp-256]
	mov	QWORD PTR $T286297[rbp-256], rbx
	cmp	rax, rdx
	jae	SHORT $LN67@SequenceTo
	mov	rcx, QWORD PTR [r12]
	lea	rax, QWORD PTR $T286297[rbp-256]
	cmp	rcx, rax
	ja	SHORT $LN67@SequenceTo
	lea	rdi, QWORD PTR $T286297[rbp-256]
	sub	rdi, rcx
	sar	rdi, 3
	cmp	rdx, QWORD PTR [r12+16]
	jne	SHORT $LN66@SequenceTo
	mov	rcx, r12
	call	?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
$LN66@SequenceTo:
	mov	rdx, QWORD PTR [r12+8]
	test	rdx, rdx
	je	SHORT $LN108@SequenceTo
	mov	rax, QWORD PTR [r12]
	mov	rcx, QWORD PTR [rax+rdi*8]
	mov	QWORD PTR [rdx], rcx
	jmp	SHORT $LN108@SequenceTo
$LN67@SequenceTo:
	cmp	rdx, QWORD PTR [r12+16]
	jne	SHORT $LN64@SequenceTo
	mov	rcx, r12
	call	?_Reserve@?$vector@PEADV?$xalloc@PEAD@@@std@@IEAAX_K@Z ; std::vector<char * __ptr64,xalloc<char * __ptr64> >::_Reserve
$LN64@SequenceTo:
	mov	rax, QWORD PTR [r12+8]
	test	rax, rax
	je	SHORT $LN108@SequenceTo
	mov	QWORD PTR [rax], rbx
$LN108@SequenceTo:
	add	QWORD PTR [r12+8], 8
$LN3@SequenceTo:

; 317  : 	string1024 T;
; 318  : 	for (int i=0; i<t_cnt; i++){

	mov	rdi, QWORD PTR in$[rbp-256]
	inc	r13d
	cmp	r13d, r15d
	jl	$LL4@SequenceTo
	mov	rsi, QWORD PTR [rsp+1056]
	mov	rbx, QWORD PTR [rsp+1120]
$LN2@SequenceTo:

; 322  : 	}
; 323  : }

	add	rsp, 1064				; 00000428H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
?_SequenceToList@@YAXAEAV?$xr_vector@PEADV?$xalloc@PEAD@@@@PEBDD@Z ENDP ; _SequenceToList
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z DD imagerel $LN34
	DD	imagerel $LN34+45
	DD	imagerel $unwind$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Val$ = 56
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z PROC ; std::_Construct<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

$LN34:
	sub	rsp, 40					; 00000028H

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	test	rcx, rcx
	je	SHORT $LN3@Construct@16
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN3@Construct@16:

; 49   : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV12@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > const & __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel $LN72
	DD	imagerel $LN72+160
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z
_TEXT	SEGMENT
$T312087 = 48
this$ = 48
_Right$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign, COMDAT

; 713  : 		{	// assign by moving _Right

$LN72:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 714  : 		if (this == &_Right)

	cmp	rcx, rdx
	je	SHORT $LN71@assign@2

; 715  : 			;
; 716  : 		else if (get_allocator() != _Right.get_allocator()
; 717  : 			&& this->_BUF_SIZE <= _Right._Myres)
; 718  : 			*this = _Right;
; 719  : 		else
; 720  : 			{	// not same, clear this and steal from _Right
; 721  : 			_Tidy(true);

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN33@assign@2
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR $T312087[rsp], rax
	test	rax, rax
	je	SHORT $LN33@assign@2
	lea	rcx, QWORD PTR $T312087[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN33@assign@2:
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	BYTE PTR [rbx], 0

; 722  : 			if (_Right._Myres < this->_BUF_SIZE)

	cmp	QWORD PTR [rdi+24], 16
	jae	SHORT $LN2@assign@2

; 723  : 				_Traits::move(this->_Bx._Buf, _Right._Bx._Buf,
; 724  : 					_Right._Mysize + 1);

	mov	r8, QWORD PTR [rdi+16]
	mov	rdx, rdi
	mov	rcx, rbx
	inc	r8
	call	QWORD PTR __imp_memmove

; 725  : 			else

	jmp	SHORT $LN1@assign@2
$LN2@assign@2:

; 726  : 				{	// copy pointer
; 727  : 				this->_Bx._Ptr = _Right._Bx._Ptr;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rbx], rax

; 728  : 				_Right._Bx._Ptr = 0;

	mov	QWORD PTR [rdi], 0
$LN1@assign@2:

; 729  : 				}
; 730  : 			this->_Mysize = _Right._Mysize;

	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rbx+16], rax

; 731  : 			this->_Myres = _Right._Myres;

	mov	rax, QWORD PTR [rdi+24]
	mov	QWORD PTR [rbx+24], rax

; 732  : 
; 733  : 			_Right._Tidy();

	mov	QWORD PTR [rdi+24], 15
	mov	QWORD PTR [rdi+16], 0
	mov	BYTE PTR [rdi], 0
$LN71@assign@2:

; 734  : 			}
; 735  : 		return (*this);

	mov	rax, rbx

; 736  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+69
	DD	imagerel $unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcap$ = 56
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::reserve, COMDAT

; 1539 : 		{	// determine new minimum length of allocated storage

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1540 : 		if (this->_Mysize <= _Newcap && this->_Myres != _Newcap)

	mov	rdi, QWORD PTR [rcx+16]
	mov	rbx, rcx
	cmp	rdi, rdx
	ja	SHORT $LN11@reserve@10
	cmp	QWORD PTR [rcx+24], rdx
	je	SHORT $LN11@reserve@10

; 1541 : 			{	// change reservation
; 1542 : 			size_type _Size = this->_Mysize;
; 1543 : 			if (_Grow(_Newcap, true))

	mov	r8b, 1
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Grow
	test	al, al
	je	SHORT $LN11@reserve@10

; 1544 : 				_Eos(_Size);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN9@reserve@10
	mov	rbx, QWORD PTR [rbx]
$LN9@reserve@10:
	mov	BYTE PTR [rbx+rdi], 0
$LN11@reserve@10:

; 1545 : 			}
; 1546 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::reserve
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN28
	DD	imagerel $LN28+42
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 702  : 		{	// construct by moving _Right

$LN28:
	push	rbx
	sub	rsp, 32					; 00000020H

; 703  : 		_Tidy();

	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	mov	rbx, rcx
	mov	BYTE PTR [rcx], 0

; 704  : 		assign(_STD forward<_Myt>(_Right));

	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 705  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z DD imagerel $LN36
	DD	imagerel $LN36+45
	DD	imagerel $unwind$?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
xdata	ENDS
;	COMDAT ?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z
_TEXT	SEGMENT
p$ = 48
_Val$ = 56
?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z PROC ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::construct, COMDAT

; 84   : 							void					construct		(pointer p, const T& _Val)				{	std::_Construct(p, _Val);	}

$LN36:
	sub	rsp, 40					; 00000028H
	test	rcx, rcx
	je	SHORT $LN5@construct@18
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN5@construct@18:
	add	rsp, 40					; 00000028H
	ret	0
?construct@?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@QEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV23@@Z ENDP ; xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::construct
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z DD imagerel $LN40
	DD	imagerel $LN40+45
	DD	imagerel $unwind$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z
_TEXT	SEGMENT
_Pdest$ = 48
_Src$ = 56
??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z PROC ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 279  : 	{	// construct using allocator

$LN40:
	sub	rsp, 40					; 00000028H

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@33
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN9@Cons_val@33:

; 281  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV20@@Z ENDP ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN91
	DD	imagerel $LN91+298
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign, COMDAT

; 910  : 		{	// assign [_Ptr, _Ptr + _Count)

$LN91:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 911  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 912  : 		if (_Count != 0)
; 913  : 			_DEBUG_POINTER(_Ptr);
; 914  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 915  : 
; 916  : 		if (_Inside(_Ptr))

	test	rdx, rdx
	je	SHORT $LN2@assign@3
	mov	r8, QWORD PTR [rcx+24]
	cmp	r8, 16
	jb	SHORT $LN12@assign@3
	mov	rax, QWORD PTR [rcx]
	jmp	SHORT $LN13@assign@3
$LN12@assign@3:
	mov	rax, rcx
$LN13@assign@3:
	cmp	rdx, rax
	jb	SHORT $LN2@assign@3
	cmp	r8, 16
	jb	SHORT $LN17@assign@3
	mov	rcx, QWORD PTR [rcx]
$LN17@assign@3:
	add	rcx, QWORD PTR [rbx+16]
	cmp	rcx, rdx
	jbe	SHORT $LN2@assign@3

; 917  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

	cmp	r8, 16
	jb	SHORT $LN20@assign@3
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN21@assign@3
$LN20@assign@3:
	mov	rax, rbx
$LN21@assign@3:
	sub	rsi, rax
	mov	r9, rdi
	mov	rdx, rbx
	mov	r8, rsi
	mov	rcx, rbx

; 925  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN2@assign@3:

; 918  : 
; 919  : 		if (_Grow(_Count))

	cmp	rdi, -2
	jbe	SHORT $LN27@assign@3
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN27@assign@3:
	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, rdi
	jae	SHORT $LN26@assign@3
	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	test	rdi, rdi
	je	SHORT $LN85@assign@3
$LN90@assign@3:

; 920  : 			{	// make room and assign new stuff
; 921  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN75@assign@3
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN76@assign@3

; 918  : 
; 919  : 		if (_Grow(_Count))

$LN26@assign@3:
	test	rdi, rdi
	jne	SHORT $LN90@assign@3
	mov	QWORD PTR [rbx+16], rdi
	cmp	rax, 16
	jb	SHORT $LN68@assign@3
	mov	rax, QWORD PTR [rbx]
	mov	BYTE PTR [rax], dil

; 923  : 			}
; 924  : 		return (*this);

	mov	rax, rbx

; 925  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 918  : 
; 919  : 		if (_Grow(_Count))

$LN68@assign@3:
	mov	rax, rbx
	mov	BYTE PTR [rbx], 0

; 925  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 920  : 			{	// make room and assign new stuff
; 921  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

$LN75@assign@3:
	mov	rcx, rbx
$LN76@assign@3:
	mov	r8, rdi
	mov	rdx, rsi
	call	memcpy

; 922  : 			_Eos(_Count);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN83@assign@3
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN84@assign@3
$LN83@assign@3:
	mov	rax, rbx
$LN84@assign@3:
	mov	BYTE PTR [rax+rdi], 0
$LN85@assign@3:

; 925  : 		}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN88@assign@3:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN88
	DD	imagerel $LN88+281
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 0a6501H
	DD	067465H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0c0113215H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append, COMDAT

; 798  : 		{	// append _Right [_Roff, _Roff + _Count)

$LN88:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r12
	sub	rsp, 32					; 00000020H

; 799  : 		if (_Right.size() < _Roff)

	mov	rax, QWORD PTR [rdx+16]
	mov	rbp, r9
	mov	r12, r8
	mov	rsi, rdx
	mov	rbx, rcx
	cmp	rax, r8
	jae	SHORT $LN4@append

; 800  : 			_Xran();	// _Roff off end

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN4@append:

; 801  : 		size_type _Num = _Right.size() - _Roff;

	sub	rax, r8

; 802  : 		if (_Num < _Count)
; 803  : 			_Count = _Num;	// trim _Count to size
; 804  : 		if (npos - this->_Mysize <= _Count)

	mov	r8, QWORD PTR [rcx+16]
	cmp	rax, r9
	cmovb	rbp, rax
	or	rax, -1
	sub	rax, r8
	cmp	rax, rbp
	ja	SHORT $LN2@append

; 805  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@append:
	mov	QWORD PTR [rsp+48], rdi

; 806  : 
; 807  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	test	rbp, rbp
	je	$LN82@append
	lea	rdi, QWORD PTR [r8+rbp]
	cmp	rdi, -2
	jbe	SHORT $LN21@append
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN21@append:
	mov	rax, QWORD PTR [rcx+24]
	cmp	rax, rdi
	jae	SHORT $LN20@append
	mov	rdx, rdi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	test	rdi, rdi
	je	SHORT $LN82@append
$LN87@append:

; 808  : 			{	// make room and append new stuff
; 809  : 			_Traits::copy(_Myptr() + this->_Mysize,
; 810  : 				_Right._Myptr() + _Roff, _Count);

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN68@append
	mov	rsi, QWORD PTR [rsi]
$LN68@append:
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN72@append
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN73@append

; 806  : 
; 807  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

$LN20@append:
	test	rdi, rdi
	jne	SHORT $LN87@append
	mov	QWORD PTR [rcx+16], rdi
	cmp	rax, 16
	jb	SHORT $LN62@append
	mov	rax, QWORD PTR [rcx]
	mov	BYTE PTR [rax], dil
	jmp	SHORT $LN82@append
$LN62@append:
	mov	rax, rcx
	mov	BYTE PTR [rcx], 0
	jmp	SHORT $LN82@append

; 808  : 			{	// make room and append new stuff
; 809  : 			_Traits::copy(_Myptr() + this->_Mysize,
; 810  : 				_Right._Myptr() + _Roff, _Count);

$LN72@append:
	mov	rcx, rbx
$LN73@append:
	add	rcx, QWORD PTR [rbx+16]
	lea	rdx, QWORD PTR [rsi+r12]
	mov	r8, rbp
	call	memcpy

; 811  : 			_Eos(_Num);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN80@append
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN81@append
$LN80@append:
	mov	rax, rbx
$LN81@append:
	mov	BYTE PTR [rax+rdi], 0
$LN82@append:

; 812  : 			}
; 813  : 		return (*this);
; 814  : 		}

	mov	rdi, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
$LN85@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+40
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign, COMDAT

; 928  : 		{	// assign [_Ptr, <null>)

$LN5:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r9, rcx

; 929  : 		_DEBUG_POINTER(_Ptr);
; 930  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, r9

; 931  : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append, COMDAT

; 793  : 		return (append(_Right, 0, npos));

	or	r9, -1
	xor	r8d, r8d

; 794  : 		}

	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=, COMDAT

; 778  : 		return (append(_Right));

	or	r9, -1
	xor	r8d, r8d

; 779  : 		}

	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+40
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=, COMDAT

; 767  : 		{	// assign [_Ptr, <null>)

$LN7:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r9, rcx

; 768  : 		return (assign(_Ptr));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, r9

; 769  : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z DD imagerel $LN30
	DD	imagerel $LN30+72
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 592  : 		{	// construct from [_Ptr, <null>)

$LN30:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 593  : 		_Tidy();

	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	mov	rbx, rcx
	mov	BYTE PTR [rcx], 0

; 594  : 		assign(_Ptr);

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 595  : 		}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::basic_string<char,std::char_traits<char>,xalloc<char> >
_TEXT	ENDS
PUBLIC	?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z ; _CopyVal
pdata	SEGMENT
$pdata$?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z DD imagerel $LN25
	DD	imagerel $LN25+165
	DD	imagerel $unwind$?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
dst$ = 56
separator$ = 64
?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z PROC ; _CopyVal

; 391  : {

$LN25:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx

; 392  : 	LPCSTR		p;
; 393  : 	ptrdiff_t	n;
; 394  : 	p			= strchr	( src, separator );

	movsx	edx, r8b
	mov	rbp, rcx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax

; 395  : 	n			= (p>0) ? (p-src) : xr_strlen(src);

	test	rax, rax
	je	SHORT $LN3@CopyVal@2
	sub	rbx, rbp
	jmp	SHORT $LN4@CopyVal@2
$LN3@CopyVal@2:
	or	rcx, -1
	mov	rdi, rbp
	repne scasb
	not	rcx
	lea	rbx, QWORD PTR [rcx-1]
	mov	ebx, ebx
$LN4@CopyVal@2:

; 396  : 	dst			= src;

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rbp
	repne scasb
	mov	rdx, rbp
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 397  : 	dst			= dst.erase	(n,dst.length());

	mov	r8, QWORD PTR [rsi+16]
	mov	rdx, rbx
	mov	rcx, rsi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::erase
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 398  : 	return		dst.c_str();

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN23@CopyVal@2
	mov	rax, QWORD PTR [rsi]
	jmp	SHORT $LN24@CopyVal@2
$LN23@CopyVal@2:
	mov	rax, rsi
$LN24@CopyVal@2:

; 399  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z ENDP ; _CopyVal
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN57
	DD	imagerel $LN57+143
	DD	imagerel $unwind$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+59
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+41
	DD	00H
	DD	imagerel ??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z+126
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+15
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 061b19H
	DD	0b341bH
	DD	0c009520dH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T334977 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >, COMDAT

; 424  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN57:
	mov	QWORD PTR [rsp+24], r8
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T334977[rsp], -2
	mov	QWORD PTR [rsp+88], rbx
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 425  : 	_DEBUG_RANGE(_First, _Last);
; 426  : 	_DEBUG_POINTER(_Dest);
; 427  : 	_FwdIt _Next = _Dest;

	mov	QWORD PTR _Next$[rsp], rbx

; 428  : 
; 429  : 	_TRY_BEGIN

	xor	r12d, r12d
	npad	4
$LL6@Uninit_mov@11:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rdi, rsi
	je	SHORT $LN4@Uninit_mov@11

; 431  : 		_Cons_val(_Al, _Dest, (_Valty &&)*_First);

	test	rbx, rbx
	je	SHORT $LN22@Uninit_mov@11
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], r12
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN49@Uninit_mov@11
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN50@Uninit_mov@11
$LN49@Uninit_mov@11:
	mov	rax, rbx
$LN50@Uninit_mov@11:
	mov	BYTE PTR [rax], r12b
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN22@Uninit_mov@11:

; 430  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	rbx, 40					; 00000028H
	mov	QWORD PTR _Dest$[rsp], rbx
	add	rdi, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rdi
	jmp	SHORT $LL6@Uninit_mov@11
$LN4@Uninit_mov@11:

; 432  : 	_CATCH_ALL
; 433  : 	for (; _Next != _Dest; ++_Next)
; 434  : 		_Dest_val(_Al, _Next);
; 435  : 	_RERAISE;
; 436  : 	_CATCH_END
; 437  : 	return (_Dest);

	mov	rax, rbx

; 438  : 	}

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN56@Uninit_mov@11:
??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T334977 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >'::`1'::catch$0

; 432  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 433  : 	for (; _Next != _Dest; ++_Next)

	mov	rbx, QWORD PTR _Next$[rbp]
	mov	rdi, QWORD PTR _Dest$[rbp]
	cmp	rbx, rdi
	je	SHORT $LN1@catch$0@14
	npad	4
$LL3@catch$0@14:

; 434  : 		_Dest_val(_Al, _Next);

	mov	rcx, rbx
	call	??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::_Dest_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >

; 433  : 	for (; _Next != _Dest; ++_Next)

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL3@catch$0@14
$LN1@catch$0@14:

; 435  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >'::`1'::catch$0
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
text$x	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=, COMDAT

; 709  : 		return (assign(_STD forward<_Myt>(_Right)));
; 710  : 		}

	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
??4?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator=
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN15
	DD	imagerel $LN15+75
	DD	imagerel $unwind$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 2512 : 	{	// move [_First, _Last) to [_Dest, ...), arbitrary iterators

$LN15:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 2513 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN14@Move@9
	npad	3
$LL3@Move@9:

; 2514 : 		*_Dest = _STD move(*_First);

	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rdi, 40					; 00000028H
	add	rbx, 40					; 00000028H
	cmp	rdi, rsi
	jne	SHORT $LL3@Move@9
$LN14@Move@9:

; 2515 : 	return (_Dest);
; 2516 : 	}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >, COMDAT

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 472  : 	}

	jmp	??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z DD imagerel $LN19
	DD	imagerel $LN19+75
	DD	imagerel $unwind$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 2533 : 	{	// move [_First, _Last) to [_Dest, ...), unchecked

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 2534 : 	return (_Move(_First, _Last,
; 2535 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN18@Move@10
	npad	3
$LL7@Move@10:
	mov	rdx, rbx
	mov	rcx, rdi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rbx, 40					; 00000028H
	add	rdi, 40					; 00000028H
	cmp	rbx, rsi
	jne	SHORT $LL7@Move@10
$LN18@Move@10:

; 2536 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Umove@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));
; 1326 : 		}

	jmp	??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
??$_Umove@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN34
	DD	imagerel $LN34+72
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Left$ = 56
_Right$ = 64
??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 102  : 	{	// return string + string

$LN34:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	r10, rdx
	mov	rbx, rcx

; 103  : 	return (_STD move(_Left.append(_Right)));

	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, r10
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], 0
	mov	rcx, rbx
	mov	rdx, rax
	mov	BYTE PTR [rbx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rax, rbx

; 104  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,xalloc<char> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD imagerel $LN53
	DD	imagerel $LN53+30
	DD	imagerel $unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD imagerel $LN53+30
	DD	imagerel $LN53+123
	DD	imagerel $chain$1$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD imagerel $LN53+123
	DD	imagerel $LN53+143
	DD	imagerel $chain$2$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+30
	DD	imagerel $unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD 040a21H
	DD	09c40aH
	DD	086405H
	DD	imagerel $LN53
	DD	imagerel $LN53+30
	DD	imagerel $unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z DD 060d01H
	DD	0a340dH
	DD	0d009320dH
	DD	050067007H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
_First_arg$ = 80
_Last_arg$ = 88
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::erase, COMDAT

; 1190 : 		{	// erase [_First, _Last)

$LN53:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rdi
	push	r13
	sub	rsp, 32					; 00000020H
	mov	rdi, r9
	mov	rbx, r8
	mov	rbp, rdx
	mov	r13, rcx

; 1191 : 		iterator _First = _Make_iter(_First_arg);
; 1192 : 		iterator _Last = _Make_iter(_Last_arg);
; 1193 : 
; 1194 : 		if (_First != _Last)

	cmp	r8, r9
	je	SHORT $LN51@erase@26

; 1195 : 			{	// worth doing, copy down over hole
; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 			if (_Last < _First || _VICONT(_First) != this
; 1198 : 				|| _VIPTR(_First) < this->_Myfirst
; 1199 : 				|| this->_Mylast < _VIPTR(_Last))
; 1200 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1201 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1202 : 				_VIPTR(_First));
; 1203 : 			_Orphan_range(_VIPTR(_First), this->_Mylast);
; 1204 : 
; 1205 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1206 : 			pointer _Ptr = _Move(_VIPTR(_Last), this->_Mylast,
; 1207 : 				_VIPTR(_First));

	mov	QWORD PTR [rsp+64], rsi
	mov	QWORD PTR [rsp+72], r12
	mov	r12, QWORD PTR [rcx+8]
	mov	rsi, rbx
	cmp	r9, r12
	je	SHORT $LN30@erase@26
$LL32@erase@26:
	mov	rdx, rdi
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rdi, 40					; 00000028H
	add	rsi, 40					; 00000028H
	cmp	rdi, r12
	jne	SHORT $LL32@erase@26
$LN30@erase@26:

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 			_Destroy(_Ptr, this->_Mylast);

	mov	rdx, QWORD PTR [r13+8]
	mov	rcx, rsi
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
	mov	r12, QWORD PTR [rsp+72]

; 1211 : 			this->_Mylast = _Ptr;

	mov	QWORD PTR [r13+8], rsi
	mov	rsi, QWORD PTR [rsp+64]

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	QWORD PTR [rbp], rbx
	mov	rax, rbp

; 1214 : 		}

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r13
	pop	rdi
	pop	rbp
	ret	0
$LN51@erase@26:

; 1212 : 			}
; 1213 : 		return (_Make_iter(_First));

	mov	QWORD PTR [rdx], rbx

; 1214 : 		}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rax, rbp
	add	rsp, 32					; 00000020H
	pop	r13
	pop	rdi
	pop	rbp
	ret	0
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN95
	DD	imagerel $LN95+320
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z DD 089a01H
	DD	06749aH
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append, COMDAT

; 817  : 		{	// append [_Ptr, _Ptr + _Count)

$LN95:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rbp, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 818  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 819  : 		if (_Count != 0)
; 820  : 			_DEBUG_POINTER(_Ptr);
; 821  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 822  : 
; 823  : 		if (_Inside(_Ptr))

	test	rdx, rdx
	je	SHORT $LN3@append@2
	mov	r9, QWORD PTR [rcx+24]
	cmp	r9, 16
	jb	SHORT $LN13@append@2
	mov	rax, QWORD PTR [rcx]
	jmp	SHORT $LN14@append@2
$LN13@append@2:
	mov	rax, rcx
$LN14@append@2:
	cmp	rdx, rax
	jb	SHORT $LN3@append@2
	cmp	r9, 16
	jb	SHORT $LN18@append@2
	mov	rcx, QWORD PTR [rcx]
$LN18@append@2:
	add	rcx, QWORD PTR [rbx+16]
	cmp	rcx, rdx
	jbe	SHORT $LN3@append@2

; 824  : 			return (append(*this, _Ptr - _Myptr(), _Count));	// substring

	cmp	r9, 16
	jb	SHORT $LN21@append@2
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN22@append@2
$LN21@append@2:
	mov	rax, rbx
$LN22@append@2:
	sub	rsi, rax
	mov	r9, r8
	mov	rdx, rbx
	mov	r8, rsi
	mov	rcx, rbx

; 833  : 			}
; 834  : 		return (*this);
; 835  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
$LN3@append@2:

; 825  : 		if (npos - this->_Mysize <= _Count)

	mov	r8, QWORD PTR [rbx+16]
	or	rax, -1
	sub	rax, r8
	cmp	rax, rbp
	ja	SHORT $LN2@append@2

; 826  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@append@2:
	mov	QWORD PTR [rsp+48], rdi

; 827  : 
; 828  : 		size_type _Num;
; 829  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	test	rbp, rbp
	je	$LN88@append@2
	lea	rdi, QWORD PTR [r8+rbp]
	cmp	rdi, -2
	jbe	SHORT $LN31@append@2
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN31@append@2:
	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, rdi
	jae	SHORT $LN30@append@2
	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	test	rdi, rdi
	je	SHORT $LN88@append@2
$LN94@append@2:

; 830  : 			{	// make room and append new stuff
; 831  : 			_Traits::copy(_Myptr() + this->_Mysize, _Ptr, _Count);

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN78@append@2
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN79@append@2

; 827  : 
; 828  : 		size_type _Num;
; 829  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

$LN30@append@2:
	test	rdi, rdi
	jne	SHORT $LN94@append@2
	mov	QWORD PTR [rbx+16], rdi
	cmp	rax, 16
	jb	SHORT $LN72@append@2
	mov	rax, QWORD PTR [rbx]
	mov	BYTE PTR [rax], dil
	jmp	SHORT $LN88@append@2
$LN72@append@2:
	mov	rax, rbx
	mov	BYTE PTR [rbx], 0
	jmp	SHORT $LN88@append@2

; 830  : 			{	// make room and append new stuff
; 831  : 			_Traits::copy(_Myptr() + this->_Mysize, _Ptr, _Count);

$LN78@append@2:
	mov	rcx, rbx
$LN79@append@2:
	add	rcx, QWORD PTR [rbx+16]
	mov	r8, rbp
	mov	rdx, rsi
	call	memcpy

; 832  : 			_Eos(_Num);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN86@append@2
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN87@append@2
$LN86@append@2:
	mov	rax, rbx
$LN87@append@2:
	mov	BYTE PTR [rax+rdi], 0
$LN88@append@2:

; 833  : 			}
; 834  : 		return (*this);
; 835  : 		}

	mov	rdi, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN92@append@2:
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD imagerel $LN69
	DD	imagerel $LN69+30
	DD	imagerel $unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD imagerel $LN69+30
	DD	imagerel $LN69+93
	DD	imagerel $chain$0$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD imagerel $LN69+93
	DD	imagerel $LN69+109
	DD	imagerel $chain$1$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD 021H
	DD	imagerel $LN69
	DD	imagerel $LN69+30
	DD	imagerel $unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD 020521H
	DD	067405H
	DD	imagerel $LN69
	DD	imagerel $LN69+30
	DD	imagerel $unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear, COMDAT

; 1217 : 		{	// erase all

$LN69:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	sub	rsp, 32					; 00000020H

; 1218 : 		erase(begin(), end());

	mov	rsi, QWORD PTR [rcx+8]
	mov	rbx, QWORD PTR [rcx]
	mov	rbp, rcx
	cmp	rbx, rsi
	je	SHORT $LN19@clear@12
	mov	QWORD PTR [rsp+48], rdi
	mov	rdi, rsi
	cmp	rsi, rsi
	je	SHORT $LN48@clear@12
	npad	5
$LL50@clear@12:
	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rdi, 40					; 00000028H
	add	rbx, 40					; 00000028H
	cmp	rdi, rsi
	jne	SHORT $LL50@clear@12
$LN48@clear@12:
	mov	rdx, QWORD PTR [rbp+8]
	mov	rcx, rbx
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbp+8], rbx
$LN19@clear@12:

; 1219 : 		}

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD imagerel $LN42
	DD	imagerel $LN42+273
	DD	imagerel $unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA DD imagerel ?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z+141
	DD	00H
	DD	imagerel ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z+157
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD 081e19H
	DD	0b741eH
	DD	0a6419H
	DD	083414H
	DD	0c0025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T336007 = 32
this$ = 64
$T335995 = 72
$T335988 = 72
_Ptr$97780 = 72
_Count$ = 72
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve, COMDAT

; 746  : 		{	// determine new minimum length of allocated storage

$LN42:
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T336007[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rsi
	mov	QWORD PTR [rsp+88], rdi
	mov	rdi, rdx
	mov	rbx, rcx

; 747  : 		if (max_size() < _Count)

	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rdx, rax
	jbe	SHORT $LN5@reserve@12

; 748  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN5@reserve@12:

; 749  : 		else if (capacity() < _Count)

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rbx]
	mov	r12, 7378697629483820647		; 6666666666666667H
	mov	rax, r12
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	rdx, rdi
	jae	$LN3@reserve@12

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	mov	eax, edi
	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rsi, rax
	mov	QWORD PTR _Ptr$97780[rsp], rax

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

	mov	r8, rax
	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	call	??$_Uninit_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >
	npad	1

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

	mov	r9, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rbx]
	mov	r8, r9
	sub	r8, rcx
	mov	rax, r12
	imul	r8
	mov	r12, rdx
	sar	r12, 4
	mov	rax, r12
	shr	rax, 63					; 0000003fH
	add	r12, rax

; 761  : 			if (this->_Myfirst != 0)

	test	rcx, rcx
	je	SHORT $LN37@reserve@12

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);

	mov	rdx, r9
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy

; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

	mov	r11, QWORD PTR [rbx]
	mov	QWORD PTR $T335995[rsp], r11
	lea	rcx, QWORD PTR $T335995[rsp]
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
$LN37@reserve@12:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

	lea	rax, QWORD PTR [rdi+rdi*4]
	lea	rcx, QWORD PTR [rsi+rax*8]
	mov	QWORD PTR [rbx+16], rcx

; 770  : 			this->_Mylast = _Ptr + _Size;

	lea	rax, QWORD PTR [r12+r12*4]
	lea	rcx, QWORD PTR [rsi+rax*8]
	mov	QWORD PTR [rbx+8], rcx

; 771  : 			this->_Myfirst = _Ptr;

	mov	QWORD PTR [rbx], rsi
$LN3@reserve@12:

; 772  : 			}
; 773  : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	ret	0
$LN41@reserve@12:
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T336007 = 32
this$ = 64
$T335995 = 72
$T335988 = 72
_Ptr$97780 = 72
_Count$ = 72
?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve'::`1'::catch$0

; 755  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z$0:

; 756  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	rax, QWORD PTR _Ptr$97780[rbp]
	mov	QWORD PTR $T335988[rbp], rax
	lea	rcx, QWORD PTR $T335988[rbp]
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >

; 757  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0??reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+40
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append, COMDAT

; 838  : 		{	// append [_Ptr, <null>)

$LN5:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r9, rcx

; 839  : 		_DEBUG_POINTER(_Ptr);
; 840  : 		return (append(_Ptr, _Traits::length(_Ptr)));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, r9

; 841  : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z DD imagerel $LN30
	DD	imagerel $LN30+182
	DD	imagerel $unwind$?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve, COMDAT

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

$LN30:
	sub	rsp, 40					; 00000028H

; 1291 : 		size_type _Size = size();

	mov	r10, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rcx+8]
	mov	r11, 7378697629483820647		; 6666666666666667H
	sub	rdx, r10
	mov	rax, r11
	mov	r9, rcx
	imul	rdx
	mov	r8, rdx
	sar	r8, 4
	mov	rax, r8
	shr	rax, 63					; 0000003fH
	add	r8, rax

; 1292 : 		if (max_size() - _Count < _Size)

	mov	rax, 461168601842738789			; 0666666666666665H
	cmp	r8, rax
	jbe	SHORT $LN4@Reserve@10

; 1293 : 			_Xlen();

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@Reserve@10:

; 1294 : 		else if ((_Size += _Count) <= capacity())

	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, r11
	inc	r8
	sub	rcx, r10
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	r8, rdx
	jbe	SHORT $LN1@Reserve@10

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

	mov	rcx, rdx
	mov	rax, 461168601842738790			; 0666666666666666H
	shr	rcx, 1
	sub	rax, rcx
	cmp	rax, rdx
	jae	SHORT $LN21@Reserve@10
	xor	edx, edx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8

; 1298 : 		}

	add	rsp, 40					; 00000028H
	jmp	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

$LN21@Reserve@10:
	add	rdx, rcx
	mov	rcx, r9
	cmp	rdx, r8
	cmovb	rdx, r8
	call	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::reserve
$LN1@Reserve@10:

; 1298 : 		}

	add	rsp, 40					; 00000028H
	ret	0
$LN29@Reserve@10:
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear_and_free@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ PROC ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear_and_free, COMDAT

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	jmp	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
?clear_and_free@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ ENDP ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear_and_free
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+40
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=, COMDAT

; 782  : 		{	// append [_Ptr, <null>)

$LN7:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r9, rcx

; 783  : 		return (append(_Ptr));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, r9

; 784  : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
??Y?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV01@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::operator+=
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN103
	DD	imagerel $LN103+175
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::push_back, COMDAT

; 631  : 		{	// insert element at end

$LN103:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 632  : 		if (_Inside(_STD addressof(_Val)))

	mov	rcx, QWORD PTR [rcx+8]
	mov	rdi, rdx
	cmp	rdx, rcx
	jae	SHORT $LN4@push_back@8
	mov	rax, QWORD PTR [rbx]
	cmp	rax, rdx
	ja	SHORT $LN4@push_back@8

; 633  : 			{	// push back an element
; 634  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

	sub	rdi, rax
	mov	rax, 7378697629483820647		; 6666666666666667H
	imul	rdi
	mov	rdi, rdx
	sar	rdi, 4
	mov	rax, rdi
	shr	rax, 63					; 0000003fH
	add	rdi, rax

; 635  : 			if (this->_Mylast == this->_Myend)

	cmp	rcx, QWORD PTR [rbx+16]
	jne	SHORT $LN3@push_back@8

; 636  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
$LN3@push_back@8:

; 637  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 638  : 			_Cons_val(this->_Alval,
; 639  : 				this->_Mylast,
; 640  : 				_STD forward<_Ty>(this->_Myfirst[_Idx]));

	mov	rax, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rdi+rdi*4]
	lea	rdx, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN70@push_back@8

; 641  : 			++this->_Mylast;
; 642  : 			}
; 643  : 		else

	jmp	SHORT $LN102@push_back@8
$LN4@push_back@8:

; 644  : 			{	// push back a non-element
; 645  : 			if (this->_Mylast == this->_Myend)

	cmp	rcx, QWORD PTR [rbx+16]
	jne	SHORT $LN1@push_back@8

; 646  : 				_Reserve(1);

	mov	rcx, rbx
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
$LN1@push_back@8:

; 647  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 648  : 			_Cons_val(this->_Alval,
; 649  : 				this->_Mylast,
; 650  : 				_STD forward<_Ty>(_Val));

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN70@push_back@8
	mov	rdx, rdi
$LN102@push_back@8:
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN70@push_back@8:

; 651  : 			++this->_Mylast;

	add	QWORD PTR [rbx+8], 40			; 00000028H

; 652  : 			}
; 653  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::push_back
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ PROC ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear, COMDAT

; 132  : 	void	clear				()									{ clear_and_free	();			}

	jmp	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
?clear@?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAXXZ ENDP ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear
_TEXT	ENDS
PUBLIC	?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ; _ListToSequence
pdata	SEGMENT
$pdata$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152
	DD	imagerel $LN152+21
	DD	imagerel $unwind$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$pdata$1$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152+21
	DD	imagerel $LN152+66
	DD	imagerel $chain$1$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$pdata$3$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152+66
	DD	imagerel $LN152+229
	DD	imagerel $chain$3$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$pdata$4$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152+229
	DD	imagerel $LN152+262
	DD	imagerel $chain$4$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$pdata$5$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152+262
	DD	imagerel $LN152+297
	DD	imagerel $chain$5$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$pdata$6$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD imagerel $LN152+297
	DD	imagerel $LN152+331
	DD	imagerel $chain$6$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 020801H
	DD	06004b208H
$chain$1$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 040821H
	DD	0ac408H
	DD	0105404H
	DD	imagerel $LN152
	DD	imagerel $LN152+21
	DD	imagerel $unwind$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$chain$3$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 040821H
	DD	0b7408H
	DD	0f3404H
	DD	imagerel $LN152+21
	DD	imagerel $LN152+66
	DD	imagerel $chain$1$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$chain$4$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 021H
	DD	imagerel $LN152+21
	DD	imagerel $LN152+66
	DD	imagerel $chain$1$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$chain$5$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 020021H
	DD	0ac400H
	DD	imagerel $LN152
	DD	imagerel $LN152+21
	DD	imagerel $unwind$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
$chain$6$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z DD 021H
	DD	imagerel $LN152
	DD	imagerel $LN152+21
	DD	imagerel $unwind$?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
out$ = 32
$T336981 = 112
__$ReturnUdt$ = 112
lst$ = 120
?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z PROC ; _ListToSequence

; 412  : {

$LN152:
	mov	r11, rsp
	push	rsi
	sub	rsp, 96					; 00000060H

; 413  : 	xr_string		out;
; 414  : 	if (lst.size()){

	mov	rax, QWORD PTR [rdx]
	mov	rsi, rcx
	mov	rcx, QWORD PTR [rdx+8]
	sub	rcx, rax
	mov	QWORD PTR [r11+24], rbp
	mov	QWORD PTR [r11-24], r12
	xor	r12d, r12d
	sar	rcx, 3
	mov	rbp, rdx
	mov	QWORD PTR [r11-48], 15
	mov	QWORD PTR [r11-56], r12
	mov	BYTE PTR [r11-72], r12b
	test	ecx, ecx
	je	$LN110@ListToSequ

; 415  :     	out			= *lst.front();

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11-16], rdi
	lea	rdx, QWORD PTR [rcx+12]
	test	rcx, rcx
	jne	SHORT $LN52@ListToSequ
	mov	edx, r12d
$LN52@ListToSequ:
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR out$[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 416  : 		for (RStringVec::const_iterator s_it=lst.begin()+1; s_it!=lst.end(); s_it++){

	mov	rbx, QWORD PTR [rbp]
	add	rbx, 8
	cmp	rbx, QWORD PTR [rbp+8]
	je	SHORT $LN1@ListToSequ
$LL71@ListToSequ:

; 417  :         	out		+= ",";

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	lea	rcx, QWORD PTR out$[rsp]
	mov	r8d, 1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append

; 418  :             out		+= **s_it;

	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN98@ListToSequ
	add	rdx, 12
	jmp	SHORT $LN99@ListToSequ
$LN98@ListToSequ:
	mov	rdx, r12
$LN99@ListToSequ:
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR out$[rsp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
	add	rbx, 8
	cmp	rbx, QWORD PTR [rbp+8]
	jne	SHORT $LL71@ListToSequ
$LN1@ListToSequ:

; 419  :         }
; 420  : 	}
; 421  : 	return shared_str	(out.c_str());

	cmp	QWORD PTR out$[rsp+24], 16
	mov	rdi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+120]
	mov	rdx, QWORD PTR out$[rsp]
	jae	SHORT $LN111@ListToSequ
$LN110@ListToSequ:
	lea	rdx, QWORD PTR out$[rsp]
$LN111@ListToSequ:
	mov	rcx, QWORD PTR ?g_pStringContainer@@3PEAVstr_container@@EA ; g_pStringContainer
	mov	QWORD PTR [rsi], r12
	call	?dock@str_container@@QEAAPEAUstr_value@@PEBD@Z ; str_container::dock
	mov	rbp, QWORD PTR [rsp+128]
	test	rax, rax
	je	SHORT $LN114@ListToSequ
	inc	DWORD PTR [rax]
$LN114@ListToSequ:
	mov	rcx, QWORD PTR [rsi]
	test	rcx, rcx
	je	SHORT $LN117@ListToSequ
	dec	DWORD PTR [rcx]
	cmove	rcx, r12
	mov	QWORD PTR [rsi], rcx
$LN117@ListToSequ:
	cmp	QWORD PTR out$[rsp+24], 16
	mov	r12, QWORD PTR [rsp+80]
	mov	QWORD PTR [rsi], rax
	jb	SHORT $LN151@ListToSequ
	mov	rax, QWORD PTR out$[rsp]
	mov	QWORD PTR $T336981[rsp], rax
	test	rax, rax
	je	SHORT $LN151@ListToSequ
	lea	rcx, QWORD PTR $T336981[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN151@ListToSequ:
	mov	rax, rsi

; 422  : }

	add	rsp, 96					; 00000060H
	pop	rsi
	ret	0
?_ListToSequence@@YA?AVshared_str@@AEBV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ENDP ; _ListToSequence
_TEXT	ENDS
PUBLIC	?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z ; _ListToSequence
;	COMDAT ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
_BSS	SEGMENT
?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A DB 028H DUP (?) ; `_ListToSequence'::`2'::out
_BSS	ENDS
;	COMDAT ?$S1@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4IA
_BSS	SEGMENT
?$S1@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4IA DD 01H DUP (?) ; `_ListToSequence'::`2'::$S1
_BSS	ENDS
pdata	SEGMENT
$pdata$?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z DD imagerel $LN401
	DD	imagerel $LN401+805
	DD	imagerel $unwind$?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z DD 0c7e01H
	DD	017747eH
	DD	0166476H
	DD	014345aH
	DD	0f00ad211H
	DD	0d006e008H
	DD	05002c004H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
$T337090 = 32
$T337089 = 72
__$ReturnUdt$ = 160
$T338542 = 168
$T338449 = 168
lst$ = 168
?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z PROC ; _ListToSequence

; 350  : {

$LN401:
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 112				; 00000070H

; 351  : 	static xr_string	out;

	mov	eax, DWORD PTR ?$S1@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4IA
	xor	r14d, r14d
	mov	r12, rdx
	mov	r13, rcx
	test	al, 1
	jne	SHORT $LN5@ListToSequ@2
	or	eax, 1
	lea	rcx, OFFSET FLAT:??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ ; `_ListToSequence'::`2'::`dynamic atexit destructor for 'out''
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24, 15
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16, r14
	mov	BYTE PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A, r14b
	mov	DWORD PTR ?$S1@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4IA, eax
	call	atexit
$LN5@ListToSequ@2:

; 352  : 	out = "";

	mov	QWORD PTR [rsp+160], rbx
	lea	r15, OFFSET FLAT:?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	xor	r8d, r8d
	mov	rcx, r15
	mov	QWORD PTR [rsp+176], rsi
	mov	QWORD PTR [rsp+184], rdi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 353  : 	if (lst.size()){

	mov	r10, QWORD PTR [r12]
	mov	rcx, QWORD PTR [r12+8]
	mov	rax, 7378697629483820647		; 6666666666666667H
	sub	rcx, r10
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	test	edx, edx
	je	$LN1@ListToSequ@2

; 354  :     	out			= lst.front();

	or	r9, -1
	xor	r8d, r8d
	mov	rdx, r10
	mov	rcx, r15
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 355  : 		for (SStringVec::const_iterator s_it=lst.begin()+1; s_it!=lst.end(); s_it++)

	mov	rbx, QWORD PTR [r12]
	add	rbx, 40					; 00000028H
	cmp	rbx, QWORD PTR [r12+8]
	je	$LN1@ListToSequ@2
	npad	9
$LL72@ListToSequ@2:

; 356  :         	out		+= xr_string(",")+(*s_it);

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	lea	rcx, QWORD PTR $T337089[rbp-112]
	mov	r8d, 1
	mov	QWORD PTR $T337089[rbp-88], 15
	mov	QWORD PTR $T337089[rbp-96], r14
	mov	BYTE PTR $T337089[rbp-112], r14b
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	lea	rcx, QWORD PTR $T337089[rbp-112]
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append
	lea	rcx, QWORD PTR $T337090[rbp-112]
	mov	QWORD PTR $T337090[rbp-88], 15
	mov	rdi, rax
	mov	rax, r14
	mov	QWORD PTR $T337090[rbp-96], rax
	mov	BYTE PTR $T337090[rbp-112], al
	cmp	rcx, rdi
	je	SHORT $LN221@ListToSequ@2
	mov	QWORD PTR $T337090[rbp-88], 15
	mov	QWORD PTR $T337090[rbp-96], r14
	mov	BYTE PTR $T337090[rbp-112], al
	cmp	QWORD PTR [rdi+24], 16
	jae	SHORT $LN154@ListToSequ@2
	mov	r8, QWORD PTR [rdi+16]
	lea	rcx, QWORD PTR $T337090[rbp-112]
	mov	rdx, rdi
	inc	r8
	call	QWORD PTR __imp_memmove
	jmp	SHORT $LN153@ListToSequ@2
$LN154@ListToSequ@2:
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR $T337090[rbp-112], rax
	mov	QWORD PTR [rdi], r14
$LN153@ListToSequ@2:
	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR $T337090[rbp-96], rax
	mov	rax, QWORD PTR [rdi+24]
	mov	QWORD PTR $T337090[rbp-88], rax
	mov	QWORD PTR [rdi+24], 15
	mov	QWORD PTR [rdi+16], r14
	mov	BYTE PTR [rdi], r14b
	mov	rax, QWORD PTR $T337090[rbp-96]
$LN221@ListToSequ@2:
	mov	r8, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16
	or	rsi, -1
	cmp	rax, rsi
	cmovb	rsi, rax
	or	rax, -1
	sub	rax, r8
	cmp	rax, rsi
	jbe	$LN394@ListToSequ@2
	test	rsi, rsi
	je	$LN308@ListToSequ@2
	lea	rdi, QWORD PTR [rsi+r8]
	cmp	rdi, -2
	ja	$LN395@ListToSequ@2
	mov	rcx, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24
	cmp	rcx, rdi
	jae	$LN246@ListToSequ@2
	mov	rdx, rdi
	mov	rcx, r15
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	mov	rcx, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24
	mov	r8, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16
	test	rdi, rdi
	je	SHORT $LN308@ListToSequ@2
$LN400@ListToSequ@2:
	cmp	QWORD PTR $T337090[rbp-88], 16
	lea	rdx, QWORD PTR $T337090[rbp-112]
	mov	rax, r15
	cmovae	rdx, QWORD PTR $T337090[rbp-112]
	cmp	rcx, 16
	cmovae	rax, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
	lea	rcx, QWORD PTR [rax+r8]
	mov	r8, rsi
	call	memcpy
	cmp	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24, 16
	mov	rax, r15
	cmovae	rax, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16, rdi
	mov	BYTE PTR [rax+rdi], r14b
$LN308@ListToSequ@2:
	cmp	QWORD PTR $T337090[rbp-88], 16
	jb	SHORT $LN325@ListToSequ@2
	mov	rax, QWORD PTR $T337090[rbp-112]
	mov	QWORD PTR $T338449[rbp-112], rax
	test	rax, rax
	je	SHORT $LN325@ListToSequ@2
	lea	rcx, QWORD PTR $T338449[rbp-112]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN325@ListToSequ@2:
	cmp	QWORD PTR $T337089[rbp-88], 16
	mov	QWORD PTR $T337090[rbp-88], 15
	mov	QWORD PTR $T337090[rbp-96], r14
	mov	BYTE PTR $T337090[rbp-112], r14b
	jb	SHORT $LN352@ListToSequ@2
	mov	rax, QWORD PTR $T337089[rbp-112]
	mov	QWORD PTR $T338542[rbp-112], rax
	test	rax, rax
	je	SHORT $LN352@ListToSequ@2
	lea	rcx, QWORD PTR $T338542[rbp-112]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN352@ListToSequ@2:

; 355  : 		for (SStringVec::const_iterator s_it=lst.begin()+1; s_it!=lst.end(); s_it++)

	add	rbx, 40					; 00000028H
	cmp	rbx, QWORD PTR [r12+8]
	jne	$LL72@ListToSequ@2
$LN1@ListToSequ@2:

; 357  : 	}
; 358  : 	return out;

	mov	QWORD PTR [r13+24], 15
	mov	QWORD PTR [r13+16], r14
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, r15
	mov	rcx, r13
	mov	BYTE PTR [r13], r14b
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdi, QWORD PTR [rsp+184]
	mov	rsi, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [rsp+160]
	mov	rax, r13

; 359  : }

	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0

; 356  :         	out		+= xr_string(",")+(*s_it);

$LN246@ListToSequ@2:
	test	rdi, rdi
	jne	$LN400@ListToSequ@2
	mov	rax, r15
	cmp	rcx, 16
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16, r14
	cmovae	rax, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
	mov	BYTE PTR [rax], r14b
	jmp	$LN308@ListToSequ@2
$LN395@ListToSequ@2:
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN394@ListToSequ@2:
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN398@ListToSequ@2:
?_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z ENDP ; _ListToSequence
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z DD imagerel $LN54
	DD	imagerel $LN54+196
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Left$ = 56
_Right$ = 64
??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z PROC ; std::operator+<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 64   : 	{	// return string + NTCS

$LN54:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 65   : 	basic_string<_Elem, _Traits, _Alloc> _Ans;

	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+24], 15
	mov	rbx, rcx
	mov	BYTE PTR [rcx], 0

; 66   : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

	or	rcx, -1
	xor	eax, eax
	mov	rdi, r8
	mov	rsi, r8
	mov	rbp, rdx
	repne scasb
	mov	rdi, QWORD PTR [rbx+16]
	not	rcx
	dec	rcx
	add	rcx, QWORD PTR [rdx+16]
	cmp	rdi, rcx
	ja	SHORT $LN42@operator@84
	cmp	QWORD PTR [rbx+24], rcx
	je	SHORT $LN42@operator@84
	mov	rdx, rcx
	mov	r8b, 1
	mov	rcx, rbx
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Grow
	test	al, al
	je	SHORT $LN42@operator@84
	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN40@operator@84
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN41@operator@84
$LN40@operator@84:
	mov	rax, rbx
$LN41@operator@84:
	mov	BYTE PTR [rax+rdi], 0
$LN42@operator@84:

; 67   : 	_Ans += _Left;

	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rbp
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append

; 68   : 	_Ans += _Right;

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rsi
	mov	rdx, rsi
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::append

; 69   : 	return (_Ans);
; 70   : 	}

	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,xalloc<char> >
_TEXT	ENDS
PUBLIC	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight
pdata	SEGMENT
$pdata$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN58
	DD	imagerel $LN58+42
	DD	imagerel $unwind$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$pdata$0$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN58+42
	DD	imagerel $LN58+47
	DD	imagerel $chain$0$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$pdata$1$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN58+47
	DD	imagerel $LN58+172
	DD	imagerel $chain$1$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$pdata$2$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN58+172
	DD	imagerel $LN58+210
	DD	imagerel $chain$2$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$pdata$3$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN58+210
	DD	imagerel $LN58+221
	DD	imagerel $chain$3$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 040801H
	DD	070049208H
	DD	050026003H
$chain$0$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 020521H
	DD	0f3405H
	DD	imagerel $LN58
	DD	imagerel $LN58+42
	DD	imagerel $unwind$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$chain$1$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 020821H
	DD	010c408H
	DD	imagerel $LN58+42
	DD	imagerel $LN58+47
	DD	imagerel $chain$0$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$chain$2$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 021H
	DD	imagerel $LN58+42
	DD	imagerel $LN58+47
	DD	imagerel $chain$0$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
$chain$3$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 021H
	DD	imagerel $LN58
	DD	imagerel $LN58+42
	DD	imagerel $unwind$?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xr_trims.cpp
xdata	ENDS
_TEXT	SEGMENT
$T342767 = 32
$T342825 = 112
str$ = 112
?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z PROC ; _TrimRight

; 372  : {

$LN58:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 80					; 00000050H

; 373  : 	LPCSTR b		= str.c_str();

	mov	rax, QWORD PTR [rcx+24]
	mov	rdi, rcx
	cmp	rax, 16
	jb	SHORT $LN11@TrimRight@2
	mov	rsi, QWORD PTR [rcx]
	jmp	SHORT $LN12@TrimRight@2
$LN11@TrimRight@2:
	mov	rsi, rcx
$LN12@TrimRight@2:

; 374  :     size_t l		= str.length();

	mov	rbp, QWORD PTR [rcx+16]

; 375  :     if (l){

	test	rbp, rbp
	je	$LN55@TrimRight@2

; 376  :         LPCSTR p 		= str.c_str()+l-1;

	mov	QWORD PTR [rsp+120], rbx
	mov	QWORD PTR [rsp+128], r12
	cmp	rax, 16
	jb	SHORT $LN19@TrimRight@2
	mov	rax, QWORD PTR [rcx]
	jmp	SHORT $LN20@TrimRight@2
$LN19@TrimRight@2:
	mov	rax, rcx
$LN20@TrimRight@2:
	lea	rbx, QWORD PTR [rax+rbp-1]

; 377  :         while( (p!=b) && (u8(*p)<=u8(' ')) ) p--;

	cmp	rbx, rsi
	je	SHORT $LN56@TrimRight@2
	npad	1
$LL3@TrimRight@2:
	cmp	BYTE PTR [rbx], 32			; 00000020H
	ja	SHORT $LN56@TrimRight@2
	dec	rbx
	cmp	rbx, rsi
	jne	SHORT $LL3@TrimRight@2
$LN56@TrimRight@2:

; 378  :         if (p!=(str+b))	str.erase	(p-b+1,l-(p-b));

	mov	rdx, rcx
	lea	rcx, QWORD PTR $T342767[rsp]
	mov	r8, rsi
	call	??$?HDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEBV10@PEBD@Z ; std::operator+<char,std::char_traits<char>,xalloc<char> >
	mov	rdx, rbx
	mov	rcx, rax
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
	test	eax, eax
	setne	r12b
	cmp	QWORD PTR $T342767[rsp+24], 16
	jb	SHORT $LN37@TrimRight@2
	mov	rax, QWORD PTR $T342767[rsp]
	mov	QWORD PTR $T342825[rsp], rax
	test	rax, rax
	je	SHORT $LN37@TrimRight@2
	lea	rcx, QWORD PTR $T342825[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN37@TrimRight@2:
	test	r12b, r12b
	mov	r12, QWORD PTR [rsp+128]
	je	SHORT $LN54@TrimRight@2
	sub	rbp, rbx
	sub	rbx, rsi
	mov	rcx, rdi
	lea	rdx, QWORD PTR [rbx+1]
	lea	r8, QWORD PTR [rsi+rbp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::erase
$LN54@TrimRight@2:

; 379  :     }
; 380  : 	return str;

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+120]

; 381  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN55@TrimRight@2:

; 379  :     }
; 380  : 	return str;

	mov	rax, rcx

; 381  : }

	add	rsp, 80					; 00000050H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ENDP ; _TrimRight
PUBLIC	?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _Trim
pdata	SEGMENT
$pdata$?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD imagerel $LN24
	DD	imagerel $LN24+89
	DD	imagerel $unwind$?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
str$ = 48
?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z PROC ; _Trim

; 384  : {

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H

; 385  : 	_TrimLeft		( str );

	mov	rax, QWORD PTR [rcx+24]
	mov	rbx, rcx
	cmp	rax, 16
	jb	SHORT $LN18@Trim@2
	mov	rcx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rbx]
	jmp	SHORT $LN19@Trim@2
$LN18@Trim@2:
	mov	r8, rbx
$LN19@Trim@2:
	movzx	eax, BYTE PTR [r8]
	test	al, al
	je	SHORT $LN22@Trim@2
$LL5@Trim@2:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN22@Trim@2
	movzx	eax, BYTE PTR [r8+1]
	inc	r8
	test	al, al
	jne	SHORT $LL5@Trim@2
$LN22@Trim@2:
	cmp	r8, rcx
	je	SHORT $LN3@Trim@2
	sub	r8, rcx
	xor	edx, edx
	mov	rcx, rbx
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::erase
$LN3@Trim@2:

; 386  : 	_TrimRight		( str );

	mov	rcx, rbx
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight

; 387  : 	return str;

	mov	rax, rbx

; 388  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Trim@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ENDP ; _Trim
PUBLIC	?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z ; _GetItem
pdata	SEGMENT
$pdata$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z
$pdata$3$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD imagerel $LN46+6
	DD	imagerel $LN46+153
	DD	imagerel $chain$3$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z
$pdata$4$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD imagerel $LN46+153
	DD	imagerel $LN46+260
	DD	imagerel $chain$4$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD 020601H
	DD	030023206H
$chain$3$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD 081621H
	DD	09c416H
	DD	08740fH
	DD	07640aH
	DD	065405H
	DD	imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z
$chain$4$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z DD 021H
	DD	imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
src$ = 48
index$ = 56
dst$ = 64
separator$ = 72
def$ = 80
trim$ = 88
?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z PROC ; _GetItem

; 402  : {

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+48], rbp
	mov	QWORD PTR [rsp+56], rsi
	mov	QWORD PTR [rsp+64], rdi

; 403  : 	LPCSTR	ptr;
; 404  : 	ptr			= _SetPos	( src, index, separator );

	xor	edi, edi
	mov	QWORD PTR [rsp+72], r12
	mov	rbx, r8
	mov	esi, edx
	mov	rax, rcx
	movzx	r12d, r9b
	test	edx, edx
	je	SHORT $LN6@GetItem@2
	movsx	ebp, r9b
$LL7@GetItem@2:
	mov	edx, ebp
	mov	rcx, rax
	call	QWORD PTR __imp_strchr
	test	rax, rax
	je	SHORT $LN3@GetItem@2
	inc	edi
	inc	rax
	cmp	edi, esi
	jb	SHORT $LL7@GetItem@2
$LN6@GetItem@2:

; 405  : 	if( ptr )	_CopyVal	( ptr, dst, separator );

	test	rax, rax
	je	SHORT $LN3@GetItem@2
	movzx	r8d, r12b
	mov	rdx, rbx
	mov	rcx, rax
	call	?_CopyVal@@YAPEBDPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D@Z ; _CopyVal
	jmp	SHORT $LN10@GetItem@2
$LN3@GetItem@2:

; 406  : 	else	dst = def;

	mov	rdx, QWORD PTR def$[rsp]
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN10@GetItem@2:

; 407  : 	if (trim)	_Trim		(dst);

	cmp	BYTE PTR trim$[rsp], 0
	mov	r12, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+48]
	je	SHORT $LN16@GetItem@2
	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, 16
	jb	SHORT $LN27@GetItem@2
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN28@GetItem@2
$LN27@GetItem@2:
	mov	rcx, rbx
$LN28@GetItem@2:
	cmp	rax, 16
	jb	SHORT $LN33@GetItem@2
	mov	r8, QWORD PTR [rbx]
	jmp	SHORT $LN34@GetItem@2
$LN33@GetItem@2:
	mov	r8, rbx
$LN34@GetItem@2:
	movzx	eax, BYTE PTR [r8]
	test	al, al
	je	SHORT $LN45@GetItem@2
$LL20@GetItem@2:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN45@GetItem@2
	movzx	eax, BYTE PTR [r8+1]
	inc	r8
	test	al, al
	jne	SHORT $LL20@GetItem@2
$LN45@GetItem@2:
	cmp	r8, rcx
	je	SHORT $LN18@GetItem@2
	sub	r8, rcx
	xor	edx, edx
	mov	rcx, rbx
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::erase
$LN18@GetItem@2:
	mov	rcx, rbx
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight
$LN16@GetItem@2:

; 408  : 	return		dst.c_str	();

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN39@GetItem@2
	mov	rax, QWORD PTR [rbx]

; 409  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 408  : 	return		dst.c_str	();

$LN39@GetItem@2:
	mov	rax, rbx

; 409  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_GetItem@@YAPEBDPEBDHAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@D0_N@Z ENDP ; _GetItem
_TEXT	ENDS
PUBLIC	?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z ; _SequenceToList
pdata	SEGMENT
$pdata$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD imagerel $LN597
	DD	imagerel $LN597+84
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
$pdata$1$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD imagerel $LN597+84
	DD	imagerel $LN597+1165
	DD	imagerel $chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
$pdata$2$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD imagerel $LN597+1165
	DD	imagerel $LN597+1179
	DD	imagerel $chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
$pdata$3$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD imagerel $LN597+1179
	DD	imagerel $LN597+1193
	DD	imagerel $chain$3$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD 071501H
	DD	0f00ee215H
	DD	0d00ae00cH
	DD	060077008H
	DD	05006H
$chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD 040d21H
	DD	0ec40dH
	DD	0163408H
	DD	imagerel $LN597
	DD	imagerel $LN597+84
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
$chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD 021H
	DD	imagerel $LN597
	DD	imagerel $LN597+84
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
$chain$3$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z DD 040021H
	DD	0ec400H
	DD	0163400H
	DD	imagerel $LN597
	DD	imagerel $LN597+84
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
T$ = 32
$T351017 = 72
lst$ = 176
in$ = 184
separator$ = 192
$T353904 = 200
$T353811 = 200
?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z PROC ; _SequenceToList

; 338  : {

$LN597:
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rsi
	push	rdi
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 120				; 00000078H
	movzx	r14d, r8b
	mov	rdi, rdx
	mov	rsi, rcx

; 339  : 	lst.clear	();

	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear

; 340  : 	int t_cnt	= _GetItemCount(in,separator);

	movzx	edx, r14b
	mov	rcx, rdi
	call	?_GetItemCount@@YAHPEBDD@Z		; _GetItemCount

; 341  : 	xr_string	T;

	mov	r9d, 15

; 342  : 	for (int i=0; i<t_cnt; i++){

	xor	r13d, r13d
	mov	QWORD PTR T$[rbp-104], 0
	mov	BYTE PTR T$[rbp-120], 0
	mov	r15d, eax
	mov	QWORD PTR T$[rbp-96], r9
	test	eax, eax
	jle	$LN550@SequenceTo@2
	mov	QWORD PTR [rsp+176], rbx
	mov	QWORD PTR [rsp+112], r12
$LL4@SequenceTo@2:

; 343  : 		_GetItem(in,i,T,separator,0);

	mov	rbx, rdi
	xor	edi, edi
	test	r13d, r13d
	je	SHORT $LN41@SequenceTo@2
	movsx	r12d, r14b
	npad	1
$LL42@SequenceTo@2:
	mov	edx, r12d
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN582@SequenceTo@2
	inc	edi
	inc	rbx
	cmp	edi, r13d
	jb	SHORT $LL42@SequenceTo@2
	mov	r9, QWORD PTR T$[rbp-96]
$LN41@SequenceTo@2:
	test	rbx, rbx
	je	SHORT $LN38@SequenceTo@2
	movsx	edx, r14b
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	r12, rax
	test	rax, rax
	je	$LN47@SequenceTo@2
	sub	r12, rbx
	jmp	$LN48@SequenceTo@2
$LN582@SequenceTo@2:
	mov	r9, QWORD PTR T$[rbp-96]
$LN38@SequenceTo@2:
	or	rcx, -1
	xor	edi, edi
	xor	eax, eax
	repne scasb
	not	rcx
	dec	rcx
	mov	rdi, rcx
	cmp	rcx, -2
	ja	$LN572@SequenceTo@2
	cmp	r9, rcx
	jae	$LN211@SequenceTo@2
	mov	r8, QWORD PTR T$[rbp-104]
	mov	rdx, rcx
	lea	rcx, QWORD PTR T$[rbp-120]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	mov	r9, QWORD PTR T$[rbp-96]
$LN255@SequenceTo@2:
	test	rdi, rdi
	je	SHORT $LN269@SequenceTo@2
	cmp	r9, 16
	lea	rcx, QWORD PTR T$[rbp-120]
	mov	r8, rdi
	cmovae	rcx, QWORD PTR T$[rbp-120]
	xor	edx, edx
	call	memcpy
	cmp	QWORD PTR T$[rbp-96], 16
	lea	rax, QWORD PTR T$[rbp-120]
	cmovae	rax, QWORD PTR T$[rbp-120]
	mov	QWORD PTR T$[rbp-104], rdi
	mov	BYTE PTR [rax+rdi], 0
$LN595@SequenceTo@2:
	mov	r9, QWORD PTR T$[rbp-96]
$LN269@SequenceTo@2:
	mov	rdx, QWORD PTR T$[rbp-120]
	cmp	r9, 16
	lea	rdi, QWORD PTR T$[rbp-120]
	cmovae	rdi, rdx
	lea	rcx, QWORD PTR T$[rbp-120]
	movzx	eax, BYTE PTR [rdi]
	cmovae	rcx, rdx
	test	al, al
	je	SHORT $LN590@SequenceTo@2
	npad	5
$LL277@SequenceTo@2:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN590@SequenceTo@2
	movzx	eax, BYTE PTR [rdi+1]
	inc	rdi
	test	al, al
	jne	SHORT $LL277@SequenceTo@2
$LN590@SequenceTo@2:
	cmp	rdi, rcx
	je	SHORT $LN316@SequenceTo@2
	mov	r8, QWORD PTR T$[rbp-104]
	sub	rdi, rcx
	cmp	r8, rdi
	cmovb	rdi, r8
	test	rdi, rdi
	je	SHORT $LN316@SequenceTo@2
	cmp	r9, 16
	lea	rax, QWORD PTR T$[rbp-120]
	lea	rcx, QWORD PTR T$[rbp-120]
	cmovae	rax, rdx
	cmovae	rcx, rdx
	sub	r8, rdi
	lea	rdx, QWORD PTR [rdi+rax]
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-104]
	lea	rax, QWORD PTR T$[rbp-120]
	sub	rdx, rdi
	cmp	QWORD PTR T$[rbp-96], 16
	cmovae	rax, QWORD PTR T$[rbp-120]
	mov	QWORD PTR T$[rbp-104], rdx
	mov	BYTE PTR [rdx+rax], 0
$LN316@SequenceTo@2:
	lea	rcx, QWORD PTR T$[rbp-120]
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight
	mov	rdx, QWORD PTR T$[rbp-120]
	mov	r9, QWORD PTR T$[rbp-96]
	cmp	r9, 16

; 344  : 		_Trim	(T);

	lea	rdi, QWORD PTR T$[rbp-120]
	lea	r11, QWORD PTR T$[rbp-120]
	cmovae	rdi, rdx
	cmovae	r11, rdx
	movzx	eax, BYTE PTR [rdi]
	test	al, al
	je	SHORT $LN591@SequenceTo@2
$LL331@SequenceTo@2:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN591@SequenceTo@2
	movzx	eax, BYTE PTR [rdi+1]
	inc	rdi
	test	al, al
	jne	SHORT $LL331@SequenceTo@2
$LN591@SequenceTo@2:
	cmp	rdi, r11
	je	SHORT $LN370@SequenceTo@2
	mov	r8, QWORD PTR T$[rbp-104]
	sub	rdi, r11
	cmp	r8, rdi
	cmovb	rdi, r8
	test	rdi, rdi
	je	SHORT $LN370@SequenceTo@2
	cmp	r9, 16
	lea	rax, QWORD PTR T$[rbp-120]
	lea	rcx, QWORD PTR T$[rbp-120]
	cmovae	rax, rdx
	cmovae	rcx, rdx
	sub	r8, rdi
	lea	rdx, QWORD PTR [rax+rdi]
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-104]
	lea	rax, QWORD PTR T$[rbp-120]
	sub	rdx, rdi
	cmp	QWORD PTR T$[rbp-96], 16
	cmovae	rax, QWORD PTR T$[rbp-120]
	mov	QWORD PTR T$[rbp-104], rdx
	mov	BYTE PTR [rax+rdx], 0
$LN370@SequenceTo@2:
	lea	rcx, QWORD PTR T$[rbp-120]
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight

; 345  : 		if (T.size()) lst.push_back(T.c_str());

	cmp	QWORD PTR T$[rbp-104], 0
	je	$LN3@SequenceTo@2
	cmp	QWORD PTR T$[rbp-96], 16
	mov	QWORD PTR $T351017[rbp-96], 15
	mov	QWORD PTR $T351017[rbp-104], 0
	mov	BYTE PTR $T351017[rbp-120], 0
	lea	rdx, QWORD PTR T$[rbp-120]
	cmovae	rdx, QWORD PTR T$[rbp-120]
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T351017[rbp-120]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	r8, QWORD PTR [rsi+8]
	lea	rax, QWORD PTR $T351017[rbp-120]
	cmp	rax, r8
	jae	$LN414@SequenceTo@2
	mov	rax, QWORD PTR [rsi]
	lea	rcx, QWORD PTR $T351017[rbp-120]
	cmp	rax, rcx
	ja	$LN414@SequenceTo@2
	lea	rcx, QWORD PTR $T351017[rbp-120]
	sub	rcx, rax
	mov	rax, 7378697629483820647		; 6666666666666667H
	imul	rcx
	mov	rdi, rdx
	sar	rdi, 4
	mov	rax, rdi
	shr	rax, 63					; 0000003fH
	add	rdi, rax
	cmp	r8, QWORD PTR [rsi+16]
	jne	SHORT $LN413@SequenceTo@2
	mov	rcx, rsi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
$LN413@SequenceTo@2:
	mov	rax, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rdi+rdi*4]
	lea	rdx, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR [rsi+8]
	test	rcx, rcx
	je	$LN480@SequenceTo@2
	jmp	$LN596@SequenceTo@2

; 343  : 		_GetItem(in,i,T,separator,0);

$LN47@SequenceTo@2:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	r12, QWORD PTR [rcx-1]
	mov	r12d, r12d
$LN48@SequenceTo@2:
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rbx
	repne scasb
	mov	rdx, rbx
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR T$[rbp-120]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	r8, QWORD PTR T$[rbp-104]
	cmp	r8, r12
	jb	$LN569@SequenceTo@2
	mov	rax, r8
	mov	rbx, r8
	sub	rax, r12
	cmp	rax, r8
	cmovb	rbx, rax
	test	rbx, rbx
	je	SHORT $LN83@SequenceTo@2
	mov	rcx, QWORD PTR T$[rbp-120]
	mov	rax, QWORD PTR T$[rbp-96]
	lea	rdx, QWORD PTR T$[rbp-120]
	cmp	rax, 16
	lea	rdi, QWORD PTR T$[rbp-120]
	cmovae	rdx, rcx
	cmovae	rdi, rcx
	sub	r8, rbx
	add	rdx, rbx
	lea	rcx, QWORD PTR [rdi+r12]
	sub	r8, r12
	add	rdx, r12
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-104]
	lea	rax, QWORD PTR T$[rbp-120]
	sub	rdx, rbx
	cmp	QWORD PTR T$[rbp-96], 16
	cmovae	rax, QWORD PTR T$[rbp-120]
	mov	QWORD PTR T$[rbp-104], rdx
	mov	BYTE PTR [rax+rdx], 0
$LN83@SequenceTo@2:
	lea	rdx, QWORD PTR T$[rbp-120]
	lea	rcx, QWORD PTR T$[rbp-120]
	or	r9, -1
	xor	r8d, r8d
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	jmp	$LN595@SequenceTo@2
$LN211@SequenceTo@2:
	test	rcx, rcx
	jne	$LN255@SequenceTo@2
	mov	QWORD PTR T$[rbp-104], rax
	lea	rax, QWORD PTR T$[rbp-120]
	cmp	r9, 16
	cmovae	rax, QWORD PTR T$[rbp-120]
	mov	BYTE PTR [rax], cl
	jmp	$LN595@SequenceTo@2

; 345  : 		if (T.size()) lst.push_back(T.c_str());

$LN414@SequenceTo@2:
	cmp	r8, QWORD PTR [rsi+16]
	jne	SHORT $LN411@SequenceTo@2
	mov	rcx, rsi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Reserve
$LN411@SequenceTo@2:
	mov	rcx, QWORD PTR [rsi+8]
	test	rcx, rcx
	je	SHORT $LN480@SequenceTo@2
	lea	rdx, QWORD PTR $T351017[rbp-120]
$LN596@SequenceTo@2:
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN480@SequenceTo@2:
	add	QWORD PTR [rsi+8], 40			; 00000028H
	cmp	QWORD PTR $T351017[rbp-96], 16
	jb	SHORT $LN3@SequenceTo@2
	mov	rax, QWORD PTR $T351017[rbp-120]
	mov	QWORD PTR $T353811[rbp-120], rax
	test	rax, rax
	je	SHORT $LN3@SequenceTo@2
	lea	rcx, QWORD PTR $T353811[rbp-120]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN3@SequenceTo@2:

; 342  : 	for (int i=0; i<t_cnt; i++){

	inc	r13d
	cmp	r13d, r15d
	jge	SHORT $LN589@SequenceTo@2
	mov	r9, QWORD PTR T$[rbp-96]
	mov	rdi, QWORD PTR in$[rbp-120]
	jmp	$LL4@SequenceTo@2
$LN569@SequenceTo@2:

; 343  : 		_GetItem(in,i,T,separator,0);

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN589@SequenceTo@2:

; 346  : 	}
; 347  : }

	cmp	QWORD PTR T$[rbp-96], 16
	jb	SHORT $LN593@SequenceTo@2
	mov	rax, QWORD PTR T$[rbp-120]
	mov	QWORD PTR $T353904[rbp-120], rax
	test	rax, rax
	je	SHORT $LN593@SequenceTo@2
	lea	rcx, QWORD PTR $T353904[rbp-120]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN593@SequenceTo@2:
	mov	rbx, QWORD PTR [rsp+176]
	mov	r12, QWORD PTR [rsp+112]
$LN550@SequenceTo@2:
	add	rsp, 120				; 00000078H
	pop	r15
	pop	r14
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN572@SequenceTo@2:

; 343  : 		_GetItem(in,i,T,separator,0);

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN594@SequenceTo@2:
?_SequenceToList@@YAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@PEBDD@Z ENDP ; _SequenceToList
_TEXT	ENDS
PUBLIC	?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z ; _SequenceToList
pdata	SEGMENT
$pdata$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD imagerel $LN523
	DD	imagerel $LN523+85
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
$pdata$0$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD imagerel $LN523+85
	DD	imagerel $LN523+1149
	DD	imagerel $chain$0$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
$pdata$1$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD imagerel $LN523+1149
	DD	imagerel $LN523+1165
	DD	imagerel $chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
$pdata$2$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD imagerel $LN523+1165
	DD	imagerel $LN523+1179
	DD	imagerel $chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD 081701H
	DD	0f0109217H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
$chain$0$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD 020821H
	DD	0123408H
	DD	imagerel $LN523
	DD	imagerel $LN523+85
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
$chain$1$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD 021H
	DD	imagerel $LN523
	DD	imagerel $LN523+85
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
$chain$2$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z DD 020021H
	DD	0123400H
	DD	imagerel $LN523
	DD	imagerel $LN523+85
	DD	imagerel $unwind$?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
T$ = 32
lst$ = 144
in$ = 152
separator$ = 160
$T356519 = 168
$T354063 = 168
?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z PROC ; _SequenceToList

; 326  : {

$LN523:
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 80					; 00000050H
	movzx	r14d, r8b
	mov	rdi, rdx
	mov	rsi, rcx

; 327  : 	lst.clear	();

	call	?clear@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QEAAXXZ ; std::vector<shared_str,xalloc<shared_str> >::clear

; 328  : 	int t_cnt	= _GetItemCount(in,separator);

	movzx	edx, r14b
	mov	rcx, rdi
	call	?_GetItemCount@@YAHPEBDD@Z		; _GetItemCount

; 329  : 	xr_string	T;

	xor	r12d, r12d
	mov	r9d, 15
	mov	r15d, eax
	mov	QWORD PTR T$[rbp-56], r9
	mov	QWORD PTR T$[rbp-64], r12
	mov	BYTE PTR T$[rbp-80], r12b

; 330  : 	for (int i=0; i<t_cnt; i++){

	mov	r13d, r12d
	test	eax, eax
	jle	$LN477@SequenceTo@3
	mov	QWORD PTR [rsp+144], rbx
	npad	3
$LL4@SequenceTo@3:

; 331  : 		_GetItem(in,i,T,separator,0);

	mov	rbx, rdi
	mov	edi, r12d
	test	r13d, r13d
	je	SHORT $LN41@SequenceTo@3
	movsx	r12d, r14b
	npad	1
$LL42@SequenceTo@3:
	mov	edx, r12d
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN509@SequenceTo@3
	inc	edi
	inc	rbx
	cmp	edi, r13d
	jb	SHORT $LL42@SequenceTo@3
	mov	r9, QWORD PTR T$[rbp-56]
$LN41@SequenceTo@3:
	test	rbx, rbx
	je	SHORT $LN38@SequenceTo@3
	movsx	edx, r14b
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	r12, rax
	test	rax, rax
	je	$LN47@SequenceTo@3
	sub	r12, rbx
	jmp	$LN48@SequenceTo@3
$LN509@SequenceTo@3:
	mov	r9, QWORD PTR T$[rbp-56]
$LN38@SequenceTo@3:
	or	rcx, -1
	xor	edi, edi
	xor	eax, eax
	repne scasb
	not	rcx
	dec	rcx
	mov	rdi, rcx
	cmp	rcx, -2
	ja	$LN499@SequenceTo@3
	cmp	r9, rcx
	jae	$LN211@SequenceTo@3
	mov	r8, QWORD PTR T$[rbp-64]
	mov	rdx, rcx
	lea	rcx, QWORD PTR T$[rbp-80]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	mov	r9, QWORD PTR T$[rbp-56]
$LN255@SequenceTo@3:
	test	rdi, rdi
	je	SHORT $LN519@SequenceTo@3
	cmp	r9, 16
	lea	rcx, QWORD PTR T$[rbp-80]
	mov	r8, rdi
	cmovae	rcx, QWORD PTR T$[rbp-80]
	xor	edx, edx
	call	memcpy
	cmp	QWORD PTR T$[rbp-56], 16
	lea	rax, QWORD PTR T$[rbp-80]
	cmovae	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR T$[rbp-64], rdi
	mov	BYTE PTR [rax+rdi], 0
$LN522@SequenceTo@3:
	mov	r9, QWORD PTR T$[rbp-56]
$LN519@SequenceTo@3:

; 330  : 	for (int i=0; i<t_cnt; i++){

	xor	r12d, r12d

; 331  : 		_GetItem(in,i,T,separator,0);

$LN269@SequenceTo@3:
	mov	rdx, QWORD PTR T$[rbp-80]
	cmp	r9, 16
	lea	rdi, QWORD PTR T$[rbp-80]
	cmovae	rdi, rdx
	lea	rcx, QWORD PTR T$[rbp-80]
	movzx	eax, BYTE PTR [rdi]
	cmovae	rcx, rdx
	test	al, al
	je	SHORT $LN517@SequenceTo@3
	npad	2
$LL277@SequenceTo@3:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN517@SequenceTo@3
	movzx	eax, BYTE PTR [rdi+1]
	inc	rdi
	test	al, al
	jne	SHORT $LL277@SequenceTo@3
$LN517@SequenceTo@3:
	cmp	rdi, rcx
	je	SHORT $LN316@SequenceTo@3
	mov	r8, QWORD PTR T$[rbp-64]
	sub	rdi, rcx
	cmp	r8, rdi
	cmovb	rdi, r8
	test	rdi, rdi
	je	SHORT $LN316@SequenceTo@3
	cmp	r9, 16
	lea	rax, QWORD PTR T$[rbp-80]
	lea	rcx, QWORD PTR T$[rbp-80]
	cmovae	rax, rdx
	cmovae	rcx, rdx
	sub	r8, rdi
	lea	rdx, QWORD PTR [rdi+rax]
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-64]
	lea	rax, QWORD PTR T$[rbp-80]
	sub	rdx, rdi
	cmp	QWORD PTR T$[rbp-56], 16
	cmovae	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR T$[rbp-64], rdx
	mov	BYTE PTR [rdx+rax], 0
$LN316@SequenceTo@3:
	lea	rcx, QWORD PTR T$[rbp-80]
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight
	mov	rdx, QWORD PTR T$[rbp-80]
	mov	r9, QWORD PTR T$[rbp-56]
	cmp	r9, 16

; 332  :         _Trim	(T);

	lea	rdi, QWORD PTR T$[rbp-80]
	lea	r11, QWORD PTR T$[rbp-80]
	cmovae	rdi, rdx
	cmovae	r11, rdx
	movzx	eax, BYTE PTR [rdi]
	test	al, al
	je	SHORT $LN518@SequenceTo@3
$LL331@SequenceTo@3:
	cmp	al, 32					; 00000020H
	ja	SHORT $LN518@SequenceTo@3
	movzx	eax, BYTE PTR [rdi+1]
	inc	rdi
	test	al, al
	jne	SHORT $LL331@SequenceTo@3
$LN518@SequenceTo@3:
	cmp	rdi, r11
	je	SHORT $LN370@SequenceTo@3
	mov	r8, QWORD PTR T$[rbp-64]
	sub	rdi, r11
	cmp	r8, rdi
	cmovb	rdi, r8
	test	rdi, rdi
	je	SHORT $LN370@SequenceTo@3
	cmp	r9, 16
	lea	rax, QWORD PTR T$[rbp-80]
	lea	rcx, QWORD PTR T$[rbp-80]
	cmovae	rax, rdx
	cmovae	rcx, rdx
	sub	r8, rdi
	lea	rdx, QWORD PTR [rax+rdi]
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-64]
	lea	rax, QWORD PTR T$[rbp-80]
	sub	rdx, rdi
	cmp	QWORD PTR T$[rbp-56], 16
	cmovae	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR T$[rbp-64], rdx
	mov	BYTE PTR [rax+rdx], 0
$LN370@SequenceTo@3:
	lea	rcx, QWORD PTR T$[rbp-80]
	call	?_TrimRight@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV12@@Z ; _TrimRight

; 333  :         if (T.size()) lst.push_back(T.c_str());

	cmp	QWORD PTR T$[rbp-64], 0
	je	$LN3@SequenceTo@3
	cmp	QWORD PTR T$[rbp-56], 16
	mov	rcx, QWORD PTR ?g_pStringContainer@@3PEAVstr_container@@EA ; g_pStringContainer
	lea	rdx, QWORD PTR T$[rbp-80]
	cmovae	rdx, QWORD PTR T$[rbp-80]
	call	?dock@str_container@@QEAAPEAUstr_value@@PEBD@Z ; str_container::dock
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN387@SequenceTo@3
	inc	DWORD PTR [rax]
$LN387@SequenceTo@3:
	mov	QWORD PTR $T354063[rbp-80], rax
	mov	rax, QWORD PTR [rsi+8]
	lea	rcx, QWORD PTR $T354063[rbp-80]
	cmp	rcx, rax
	jae	$LN394@SequenceTo@3
	mov	rcx, QWORD PTR [rsi]
	lea	rdx, QWORD PTR $T354063[rbp-80]
	cmp	rcx, rdx
	ja	$LN394@SequenceTo@3
	lea	rbx, QWORD PTR $T354063[rbp-80]
	sub	rbx, rcx
	sar	rbx, 3
	cmp	rax, QWORD PTR [rsi+16]
	jne	SHORT $LN393@SequenceTo@3
	mov	edx, 1
	mov	rcx, rsi
	call	?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
$LN393@SequenceTo@3:
	mov	rdx, QWORD PTR [rsi+8]
	mov	r8, QWORD PTR [rsi]
	test	rdx, rdx
	je	$LN444@SequenceTo@3
	mov	QWORD PTR [rdx], r12
	mov	r8, QWORD PTR [r8+rbx*8]
	test	r8, r8
	je	SHORT $LN425@SequenceTo@3
	inc	DWORD PTR [r8]
$LN425@SequenceTo@3:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN428@SequenceTo@3
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	cmp	DWORD PTR [rax], 0
	mov	rcx, rax
	cmove	rcx, r12
	mov	QWORD PTR [rdx], rcx
$LN428@SequenceTo@3:
	mov	QWORD PTR [rdx], r8
	jmp	$LN444@SequenceTo@3

; 331  : 		_GetItem(in,i,T,separator,0);

$LN47@SequenceTo@3:
	or	rcx, -1
	mov	rdi, rbx
	repne scasb
	not	rcx
	lea	r12, QWORD PTR [rcx-1]
	mov	r12d, r12d
$LN48@SequenceTo@3:
	or	rcx, -1
	xor	eax, eax
	mov	rdi, rbx
	repne scasb
	mov	rdx, rbx
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR T$[rbp-80]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	r8, QWORD PTR T$[rbp-64]
	cmp	r8, r12
	jb	$LN496@SequenceTo@3
	mov	rax, r8
	mov	rbx, r8
	sub	rax, r12
	cmp	rax, r8
	cmovb	rbx, rax
	test	rbx, rbx
	je	SHORT $LN83@SequenceTo@3
	mov	rcx, QWORD PTR T$[rbp-80]
	mov	rax, QWORD PTR T$[rbp-56]
	lea	rdx, QWORD PTR T$[rbp-80]
	cmp	rax, 16
	lea	rdi, QWORD PTR T$[rbp-80]
	cmovae	rdx, rcx
	cmovae	rdi, rcx
	sub	r8, rbx
	add	rdx, rbx
	lea	rcx, QWORD PTR [rdi+r12]
	sub	r8, r12
	add	rdx, r12
	call	QWORD PTR __imp_memmove
	mov	rdx, QWORD PTR T$[rbp-64]
	lea	rax, QWORD PTR T$[rbp-80]
	sub	rdx, rbx
	cmp	QWORD PTR T$[rbp-56], 16
	cmovae	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR T$[rbp-64], rdx
	mov	BYTE PTR [rax+rdx], 0
$LN83@SequenceTo@3:
	lea	rdx, QWORD PTR T$[rbp-80]
	lea	rcx, QWORD PTR T$[rbp-80]
	or	r9, -1
	xor	r8d, r8d
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	jmp	$LN522@SequenceTo@3
$LN211@SequenceTo@3:
	test	rcx, rcx
	jne	$LN255@SequenceTo@3
	xor	r12d, r12d
	cmp	r9, 16
	lea	rax, QWORD PTR T$[rbp-80]
	cmovae	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR T$[rbp-64], r12
	mov	BYTE PTR [rax], r12b
	mov	r9, QWORD PTR T$[rbp-56]
	jmp	$LN269@SequenceTo@3

; 333  :         if (T.size()) lst.push_back(T.c_str());

$LN394@SequenceTo@3:
	cmp	rax, QWORD PTR [rsi+16]
	jne	SHORT $LN391@SequenceTo@3
	mov	edx, 1
	mov	rcx, rsi
	call	?_Reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@IEAAX_K@Z ; std::vector<shared_str,xalloc<shared_str> >::_Reserve
$LN391@SequenceTo@3:
	mov	rdx, QWORD PTR [rsi+8]
	test	rdx, rdx
	je	SHORT $LN444@SequenceTo@3
	mov	QWORD PTR [rdx], r12
	test	rdi, rdi
	je	SHORT $LN452@SequenceTo@3
	inc	DWORD PTR [rdi]
$LN452@SequenceTo@3:
	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN455@SequenceTo@3
	dec	DWORD PTR [rax]
	mov	rax, QWORD PTR [rdx]
	cmp	DWORD PTR [rax], 0
	mov	rcx, rax
	cmove	rcx, r12
	mov	QWORD PTR [rdx], rcx
$LN455@SequenceTo@3:
	mov	QWORD PTR [rdx], rdi
$LN444@SequenceTo@3:
	add	QWORD PTR [rsi+8], 8
	test	rdi, rdi
	je	SHORT $LN3@SequenceTo@3
	dec	DWORD PTR [rdi]
$LN3@SequenceTo@3:

; 330  : 	for (int i=0; i<t_cnt; i++){

	inc	r13d
	cmp	r13d, r15d
	jge	SHORT $LN516@SequenceTo@3
	mov	r9, QWORD PTR T$[rbp-56]
	mov	rdi, QWORD PTR in$[rbp-80]
	jmp	$LL4@SequenceTo@3
$LN496@SequenceTo@3:

; 331  : 		_GetItem(in,i,T,separator,0);

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN516@SequenceTo@3:

; 334  : 	}
; 335  : }

	cmp	QWORD PTR T$[rbp-56], 16
	jb	SHORT $LN520@SequenceTo@3
	mov	rax, QWORD PTR T$[rbp-80]
	mov	QWORD PTR $T356519[rbp-80], rax
	test	rax, rax
	je	SHORT $LN520@SequenceTo@3
	lea	rcx, QWORD PTR $T356519[rbp-80]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN520@SequenceTo@3:
	mov	rbx, QWORD PTR [rsp+144]
$LN477@SequenceTo@3:
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN499@SequenceTo@3:

; 331  : 		_GetItem(in,i,T,separator,0);

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN521@SequenceTo@3:
?_SequenceToList@@YAXAEAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PEBDD@Z ENDP ; _SequenceToList
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ DD imagerel ??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ
	DD	imagerel ??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ+75
	DD	imagerel $unwind$??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ
text$yd	SEGMENT
$T384036 = 48
??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ PROC ; `_ListToSequence'::`2'::`dynamic atexit destructor for 'out'', COMDAT
	sub	rsp, 40					; 00000028H
	cmp	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24, 16
	jb	SHORT $LN15@dynamic@5
	mov	rax, QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A
	mov	QWORD PTR $T384036[rsp], rax
	test	rax, rax
	je	SHORT $LN15@dynamic@5
	lea	rcx, QWORD PTR $T384036[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN15@dynamic@5:
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+24, 15
	mov	QWORD PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A+16, 0
	mov	BYTE PTR ?out@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@4V23@A, 0
	add	rsp, 40					; 00000028H
	ret	0
??__Fout@?1??_ListToSequence@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEBV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@@Z@YAXXZ ENDP ; `_ListToSequence'::`2'::`dynamic atexit destructor for 'out''
END
