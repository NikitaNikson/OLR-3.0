; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z	; std::forward<void * __ptr64 & __ptr64>
PUBLIC	??$?0AEAPEADAEAPEAX@?$_Pair_base@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z ; std::_Pair_base<char * __ptr64,void * __ptr64>::_Pair_base<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>
PUBLIC	??$?0AEAPEADAEAPEAX@?$pair@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z ; std::pair<char * __ptr64,void * __ptr64>::pair<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>
PUBLIC	??$mk_pair@PEADPEAX@@YA?AU?$pair@PEADPEAX@std@@PEADPEAX@Z ; mk_pair<char * __ptr64,void * __ptr64>
PUBLIC	?max_size@?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@QEBA_KXZ ; xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::max_size
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Insert
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >,std::_Iterator_base0>::operator--
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>
PUBLIC	??$move@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>
PUBLIC	??$move@AEA_N@std@@YA$$QEA_NAEA_N@Z		; std::move<bool & __ptr64>
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>
PUBLIC	??$forward@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YAAEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>
PUBLIC	??$forward@_N@std@@YA$$QEA_NAEA_N@Z		; std::forward<bool>
PUBLIC	??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>
PUBLIC	??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Linsert
PUBLIC	??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z	; std::forward<void * __ptr64>
PUBLIC	??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>
PUBLIC	??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>
PUBLIC	??$forward@U?$pair@PEADPEAX@std@@@std@@YA$$QEAU?$pair@PEADPEAX@0@AEAU10@@Z ; std::forward<std::pair<char * __ptr64,void * __ptr64> >
PUBLIC	??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z ; std::_Cons_val<xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >,std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>,std::pair<char * __ptr64,void * __ptr64> >
PUBLIC	??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >
PUBLIC	??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::insert<std::pair<char * __ptr64,void * __ptr64> >
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
PUBLIC	??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z ; std::operator<<char,std::char_traits<char>,xalloc<char> >
PUBLIC	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::operator()
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@SAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Key
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::find
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator->
PUBLIC	??_C@_01PJKLJHI@?$HO?$AA@			; `string'
PUBLIC	??_C@_0DK@GNOAJPGG@?$CD?$CBAccess?5denied?4?5File?3?5?8?$CFs?8?5curr@ ; `string'
PUBLIC	??_C@_0BE@IDEJHFDJ@EFS_Utils?3?3LockFile?$AA@	; `string'
PUBLIC	??_C@_0BH@HKIMOCEJ@FileSystem_borland?4cpp?$AA@	; `string'
PUBLIC	??_C@_08PMINNIHH@I?4second?$AA@			; `string'
PUBLIC	??_C@_04LADJNOK@Lock?$AA@			; `string'
PUBLIC	??_C@_06NCJPDCLH@Unlock?$AA@			; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	__imp_CreateFileA:PROC
EXTRN	__imp_CloseHandle:PROC
;	COMDAT ?ignore_always@?9??LockFile@EFS_Utils@@QEAAHPEBD_N@Z@4_NA
_BSS	SEGMENT
?ignore_always@?9??LockFile@EFS_Utils@@QEAAHPEBD_N@Z@4_NA DB 01H DUP (?) ; `EFS_Utils::LockFile'::`10'::ignore_always
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06NCJPDCLH@Unlock?$AA@
CONST	SEGMENT
??_C@_06NCJPDCLH@Unlock?$AA@ DB 'Unlock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LADJNOK@Lock?$AA@
CONST	SEGMENT
??_C@_04LADJNOK@Lock?$AA@ DB 'Lock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PMINNIHH@I?4second?$AA@
CONST	SEGMENT
??_C@_08PMINNIHH@I?4second?$AA@ DB 'I.second', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HKIMOCEJ@FileSystem_borland?4cpp?$AA@
CONST	SEGMENT
??_C@_0BH@HKIMOCEJ@FileSystem_borland?4cpp?$AA@ DB 'FileSystem_borland.cp'
	DB	'p', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IDEJHFDJ@EFS_Utils?3?3LockFile?$AA@
CONST	SEGMENT
??_C@_0BE@IDEJHFDJ@EFS_Utils?3?3LockFile?$AA@ DB 'EFS_Utils::LockFile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GNOAJPGG@?$CD?$CBAccess?5denied?4?5File?3?5?8?$CFs?8?5curr@
CONST	SEGMENT
??_C@_0DK@GNOAJPGG@?$CD?$CBAccess?5denied?4?5File?3?5?8?$CFs?8?5curr@ DB '#'
	DB	'!Access denied. File: ''%s'' currently locked by any user.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01PJKLJHI@?$HO?$AA@
CONST	SEGMENT
??_C@_01PJKLJHI@?$HO?$AA@ DB '~', 00H			; `string'
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z PROC		; std::forward<void * __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ENDP		; std::forward<void * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QEA_NAEA_N@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@_N@std@@YA$$QEA_NAEA_N@Z PROC		; std::forward<bool>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@_N@std@@YA$$QEA_NAEA_N@Z ENDP		; std::forward<bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YAAEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YAAEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YAAEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z PROC		; std::forward<void * __ptr64 & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z ENDP		; std::forward<void * __ptr64 & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$move@AEA_N@std@@YA$$QEA_NAEA_N@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEA_N@std@@YA$$QEA_NAEA_N@Z PROC		; std::move<bool & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEA_N@std@@YA$$QEA_NAEA_N@Z ENDP		; std::move<bool & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$move@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>, COMDAT

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	rax, rcx

; 88   : 	}

	ret	0
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$forward@U?$pair@PEADPEAX@std@@@std@@YA$$QEAU?$pair@PEADPEAX@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$pair@PEADPEAX@std@@@std@@YA$$QEAU?$pair@PEADPEAX@0@AEAU10@@Z PROC ; std::forward<std::pair<char * __ptr64,void * __ptr64> >, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@U?$pair@PEADPEAX@std@@@std@@YA$$QEAU?$pair@PEADPEAX@0@AEAU10@@Z ENDP ; std::forward<std::pair<char * __ptr64,void * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@QEBA_KXZ PROC ; xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >::max_size, COMDAT

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	rax, 384307168202282325			; 0555555555555555H
	ret	0
?max_size@?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@QEBA_KXZ ENDP ; xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>, COMDAT

; 145  : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 146  : 		}

	mov	rax, rcx
	ret	0
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::max_size, COMDAT

; 874  : 		return (this->_Alval.max_size());

	mov	rax, 384307168202282325			; 0555555555555555H

; 875  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>, COMDAT

; 227  : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 228  : 		}

	mov	rax, rcx
	ret	0
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>, COMDAT

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

	mov	rax, rcx

; 69   : 		}

	ret	0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>
_TEXT	ENDS
PUBLIC	?WriteAccessLog@EFS_Utils@@QEAAXPEBD0@Z		; EFS_Utils::WriteAccessLog
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\filesystem_borland.cpp
_TEXT	SEGMENT
this$ = 8
fn$ = 16
start_msg$ = 24
?WriteAccessLog@EFS_Utils@@QEAAXPEBD0@Z PROC		; EFS_Utils::WriteAccessLog

; 139  : /*
; 140  : 	string1024		buf;
; 141  : 	string256		dt_buf, tm_buf;
; 142  : 	sprintf			(buf, "%s:   '%s' from computer: '%s' by user: '%s' at %s %s",start_msg,fn,Core.CompName,Core.UserName,_strdate(dt_buf),_strtime(tm_buf));
; 143  : 	xr_string		m_AccessLog;
; 144  : 
; 145  :     if(FS.path_exist("$server_data_root$"))
; 146  :     {
; 147  :         FS.update_path	(m_AccessLog,"$server_data_root$","access.log");
; 148  :         int hf 			= open( m_AccessLog.c_str(), _O_WRONLY|_O_APPEND|_O_BINARY );
; 149  :         if( hf<=0 )
; 150  :             hf = open( m_AccessLog.c_str(),
; 151  :             _O_WRONLY|_O_CREAT|_O_TRUNC| _O_BINARY,
; 152  :             _S_IREAD | _S_IWRITE );
; 153  : 
; 154  :         _write( hf, buf, xr_strlen(buf) );
; 155  :         char el[2]={0x0d,0x0a};
; 156  :         _write( hf, el, 2 );
; 157  :         _close( hf );
; 158  :     }
; 159  : */
; 160  : }

	ret	0
?WriteAccessLog@EFS_Utils@@QEAAXPEBD0@Z ENDP		; EFS_Utils::WriteAccessLog
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>, COMDAT

; 163  : 		{	// construct from moved values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 164  : 		}

	mov	rax, rcx
	ret	0
??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0AEAPEADAEAPEAX@?$_Pair_base@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEADAEAPEAX@?$_Pair_base@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z PROC ; std::_Pair_base<char * __ptr64,void * __ptr64>::_Pair_base<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>, COMDAT

; 163  : 		{	// construct from moved values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 164  : 		}

	mov	rax, rcx
	ret	0
??$?0AEAPEADAEAPEAX@?$_Pair_base@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z ENDP ; std::_Pair_base<char * __ptr64,void * __ptr64>::_Pair_base<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>, COMDAT

; 247  : 		{	// construct from moved values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 248  : 		}

	mov	rax, rcx
	ret	0
??$?0AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@std@@QEAA@AEAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > > & __ptr64,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0AEAPEADAEAPEAX@?$pair@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEADAEAPEAX@?$pair@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z PROC ; std::pair<char * __ptr64,void * __ptr64>::pair<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>, COMDAT

; 247  : 		{	// construct from moved values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 248  : 		}

	mov	rax, rcx
	ret	0
??$?0AEAPEADAEAPEAX@?$pair@PEADPEAX@std@@QEAA@AEAPEADAEAPEAX@Z ENDP ; std::pair<char * __ptr64,void * __ptr64>::pair<char * __ptr64,void * __ptr64><char * __ptr64 & __ptr64,void * __ptr64 & __ptr64>
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$mk_pair@PEADPEAX@@YA?AU?$pair@PEADPEAX@std@@PEADPEAX@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Val1$ = 16
_Val2$ = 24
??$mk_pair@PEADPEAX@@YA?AU?$pair@PEADPEAX@std@@PEADPEAX@Z PROC ; mk_pair<char * __ptr64,void * __ptr64>, COMDAT

; 207  : template	<class _Ty1, class _Ty2> inline	std::pair<_Ty1, _Ty2>		mk_pair		(_Ty1 _Val1, _Ty2 _Val2)	{	return (std::pair<_Ty1, _Ty2>(_Val1, _Val2));	}

	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], r8
	mov	rax, rcx
	ret	0
??$mk_pair@PEADPEAX@@YA?AU?$pair@PEADPEAX@std@@PEADPEAX@Z ENDP ; mk_pair<char * __ptr64,void * __ptr64>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*, COMDAT

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	rax, QWORD PTR [rcx]
	add	rax, 24

; 247  : 		}

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*, COMDAT

; 396  : 		return ((reference)**(_Mybase *)this);

	mov	rax, QWORD PTR [rcx]
	add	rax, 24

; 397  : 		}

	ret	0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@SAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@SAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Key, COMDAT

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

	lea	rax, QWORD PTR [rcx+24]

; 618  : 		}

	ret	0
?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@SAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Key
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ
_TEXT	SEGMENT
this$ = 8
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator->, COMDAT

; 401  : 		return (&**this);

	mov	rax, QWORD PTR [rcx]
	add	rax, 24

; 402  : 		}

	ret	0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >,std::_Iterator_base0>::operator--, COMDAT

; 84   : 		if (_Mytree::_Isnil(_Ptr))

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	cmp	BYTE PTR [rdx+73], 0
	je	SHORT $LN8@operator@22

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head
; 99   : 			}
; 100  : 		return (*this);

	mov	rax, rcx

; 101  : 		}

	ret	0
$LN8@operator@22:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	rax, QWORD PTR [rdx]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN40@operator@22

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+73], 0
	jne	SHORT $LN21@operator@22
	npad	6
$LL22@operator@22:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+73], 0
	je	SHORT $LL22@operator@22
$LN21@operator@22:
	mov	QWORD PTR [r8], rax

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head
; 99   : 			}
; 100  : 		return (*this);

	mov	rax, r8

; 101  : 		}

	ret	0
$LN40@operator@22:

; 89   : 		else
; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	rdx, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rdx+73], 0
	jne	SHORT $LN3@operator@22
	npad	2
$LL4@operator@22:
	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN3@operator@22

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	QWORD PTR [rcx], rdx
	mov	rdx, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rdx+73], 0
	je	SHORT $LL4@operator@22
$LN3@operator@22:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

	mov	rax, QWORD PTR [rcx]
	mov	rcx, rax
	cmp	BYTE PTR [rax+73], 0

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head
; 99   : 			}
; 100  : 		return (*this);

	mov	rax, r8
	cmove	rcx, rdx
	mov	QWORD PTR [r8], rcx

; 101  : 		}

	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--, COMDAT

; 277  : 		{	// predecrement

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

	mov	rax, rbx

; 306  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--, COMDAT

; 418  : 		{	// predecrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 419  : 		--(*(_Mybase *)this);

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

	mov	rax, rbx

; 421  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> > >::operator--
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z DD imagerel $LN27
	DD	imagerel $LN27+114
	DD	imagerel $unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare, COMDAT

; 1852 : 		{	// compare [0, _Mysize) with _Right

$LN27:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1853 : 		return (compare(0, this->_Mysize, _Right._Myptr(), _Right.size()));

	cmp	QWORD PTR [rdx+24], 16
	mov	rdi, QWORD PTR [rdx+16]
	jb	SHORT $LN7@compare@3
	mov	rdx, QWORD PTR [rdx]
$LN7@compare@3:
	mov	rbx, QWORD PTR [rcx+16]
	cmp	rbx, rbx
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN22@compare@3
	mov	rcx, QWORD PTR [rcx]
$LN22@compare@3:
	mov	r8, rdi
	cmp	rbx, rdi
	cmovb	r8, rbx
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	je	SHORT $LN15@compare@3
	mov	eax, ecx

; 1854 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 1853 : 		return (compare(0, this->_Mysize, _Right._Myptr(), _Right.size()));

$LN15@compare@3:
	cmp	rbx, rdi
	jae	SHORT $LN13@compare@3
	or	eax, -1

; 1854 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 1853 : 		return (compare(0, this->_Mysize, _Right._Myptr(), _Right.size()));

$LN13@compare@3:
	xor	eax, eax
	cmp	rbx, rdi

; 1854 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	setne	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEBAHAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::compare
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z DD imagerel $LN30
	DD	imagerel $LN30+114
	DD	imagerel $unwind$??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata	ENDS
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,xalloc<char> >, COMDAT

; 226  : 	{	// test if string < string

$LN30:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 227  : 	return (_Left.compare(_Right) < 0);

	cmp	QWORD PTR [rdx+24], 16
	mov	rdi, QWORD PTR [rdx+16]
	jb	SHORT $LN9@operator@23
	mov	rdx, QWORD PTR [rdx]
$LN9@operator@23:
	mov	rbx, QWORD PTR [rcx+16]
	cmp	rbx, rbx
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN24@operator@23
	mov	rcx, QWORD PTR [rcx]
$LN24@operator@23:
	mov	r8, rdi
	cmp	rbx, rdi
	cmovb	r8, rbx
	call	memcmp
	movsxd	rcx, eax
	xor	eax, eax
	test	rcx, rcx
	jne	SHORT $LN16@operator@23
	cmp	rbx, rdi
	jae	SHORT $LN15@operator@23
	or	ecx, -1
	test	ecx, ecx
	sets	al

; 228  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 227  : 	return (_Left.compare(_Right) < 0);

$LN15@operator@23:
	cmp	rbx, rdi
	mov	ecx, eax
	setne	cl
$LN16@operator@23:

; 228  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	test	ecx, ecx
	sets	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?MDU?$char_traits@D@std@@V?$xalloc@D@@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,xalloc<char> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z DD imagerel $LN33
	DD	imagerel $LN33+113
	DD	imagerel $unwind$??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
xdata	ENDS
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z PROC ; std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::operator(), COMDAT

; 124  : 		{	// apply operator< to operands

$LN33:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 125  : 		return (_Left < _Right);

	cmp	QWORD PTR [rdx+24], 16
	mov	rdi, QWORD PTR [rdx+16]
	jb	SHORT $LN11@operator@24
	mov	rdx, QWORD PTR [rdx]
$LN11@operator@24:
	mov	rbx, QWORD PTR [rcx+16]
	cmp	rbx, rbx
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN26@operator@24
	mov	rcx, QWORD PTR [rcx]
$LN26@operator@24:
	mov	r8, rdi
	cmp	rbx, rdi
	cmovb	r8, rbx
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN18@operator@24
	cmp	rbx, rdi
	jae	SHORT $LN17@operator@24
	or	ecx, -1
	test	ecx, ecx
	sets	al

; 126  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0

; 125  : 		return (_Left < _Right);

$LN17@operator@24:
	xor	eax, eax
	cmp	rbx, rdi
	setne	al
	mov	ecx, eax
$LN18@operator@24:

; 126  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	test	ecx, ecx
	sets	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::operator()
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
pdata	SEGMENT
$pdata$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN60
	DD	imagerel $LN60+31
	DD	imagerel $unwind$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN60+31
	DD	imagerel $LN60+161
	DD	imagerel $chain$2$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN60+161
	DD	imagerel $LN60+173
	DD	imagerel $chain$3$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 021H
	DD	imagerel $LN60
	DD	imagerel $LN60+31
	DD	imagerel $unwind$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 061321H
	DD	0ad413H
	DD	09740eH
	DD	085405H
	DD	imagerel $LN60
	DD	imagerel $LN60+31
	DD	imagerel $unwind$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 040901H
	DD	0c0053209H
	DD	030026003H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
_TEXT	SEGMENT
this$ = 64
_Keyval$ = 72
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Lbound, COMDAT

; 1741 : 		{	// find leftmost node not less than _Keyval

$LN60:
	push	rbx
	push	rsi
	push	r12
	sub	rsp, 32					; 00000020H

; 1742 : 		_Nodeptr _Pnode = _Root();

	mov	r12, QWORD PTR [rcx+8]
	mov	rsi, rdx
	mov	rbx, QWORD PTR [r12+8]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [rbx+73], 0
	jne	$LN59@Lbound@4

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

	mov	QWORD PTR [rsp+64], rbp
	mov	rbp, QWORD PTR [rdx+16]
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r13
	mov	r13, QWORD PTR [rdx+24]
$LL4@Lbound@4:
	lea	rcx, QWORD PTR [rbx+24]
	cmp	r13, 16
	jb	SHORT $LN29@Lbound@4
	mov	rdx, QWORD PTR [rsi]
	jmp	SHORT $LN30@Lbound@4
$LN29@Lbound@4:
	mov	rdx, rsi
$LN30@Lbound@4:
	mov	rdi, QWORD PTR [rcx+16]
	cmp	rdi, rdi
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN44@Lbound@4
	mov	rcx, QWORD PTR [rcx]
$LN44@Lbound@4:
	mov	r8, rbp
	cmp	rdi, rbp
	cmovb	r8, rdi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN36@Lbound@4
	cmp	rdi, rbp
	jb	SHORT $LN58@Lbound@4
	cmp	rdi, rbp
	setne	al
	mov	ecx, eax
$LN36@Lbound@4:
	test	ecx, ecx
	js	SHORT $LN58@Lbound@4

; 1748 : 			else
; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

	mov	r12, rbx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	rbx, QWORD PTR [rbx]
	jmp	SHORT $LN1@Lbound@4
$LN58@Lbound@4:

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	rbx, QWORD PTR [rbx+16]
$LN1@Lbound@4:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

	cmp	BYTE PTR [rbx+73], 0
	je	SHORT $LL4@Lbound@4
	mov	r13, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+64]
$LN59@Lbound@4:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

	mov	rax, r12

; 1755 : 		}

	add	rsp, 32					; 00000020H
	pop	r12
	pop	rsi
	pop	rbx
	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Lbound
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN11
	DD	imagerel $LN11+29
	DD	imagerel $unwind$?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::lower_bound, COMDAT

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

	mov	rdx, r8
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Lbound
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx

; 1451 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD imagerel $LN45
	DD	imagerel $LN45+105
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z
_TEXT	SEGMENT
_Where$ = 48
this$ = 48
$T217050 = 56
__$ReturnUdt$ = 56
_Keyval$ = 64
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::find, COMDAT

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

$LN45:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

	mov	rdx, r8
	mov	rsi, r8
	mov	rdi, rcx
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Lbound
	mov	QWORD PTR _Where$[rsp], rax

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

	cmp	rax, QWORD PTR [rdi+8]
	je	SHORT $LN3@find@6
	lea	rdx, QWORD PTR [rax+24]
	mov	rcx, rsi
	call	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::operator()
	test	al, al
	jne	SHORT $LN3@find@6
	lea	rax, QWORD PTR _Where$[rsp]
	jmp	SHORT $LN4@find@6
$LN3@find@6:
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR $T217050[rsp], rax
	lea	rax, QWORD PTR $T217050[rsp]
$LN4@find@6:
	mov	rax, QWORD PTR [rax]

; 1429 : 		}

	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::find
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z DD imagerel $LN419
	DD	imagerel $LN419+722
	DD	imagerel $unwind$?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
$T253010 = 48
$T253310 = 48
this$ = 48
__$ReturnUdt$ = 56
_Addleft$ = 64
_Wherenode$ = 72
_Newnode$ = 80
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Insert, COMDAT

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

$LN419:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

	mov	rax, QWORD PTR [rcx+16]
	mov	r10, rcx
	mov	rcx, 384307168202282324			; 0555555555555554H
	mov	rbx, rdx
	cmp	rax, rcx
	jb	SHORT $LN17@Insert@5

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

	mov	rbx, QWORD PTR _Newnode$[rsp]
	cmp	QWORD PTR [rbx+48], 16
	jb	SHORT $LN53@Insert@5
	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR $T253010[rsp], rax
	test	rax, rax
	je	SHORT $LN53@Insert@5
	lea	rcx, QWORD PTR $T253010[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN53@Insert@5:
	mov	QWORD PTR [rbx+48], 15
	mov	QWORD PTR [rbx+40], 0

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

	lea	rcx, QWORD PTR $T253310[rsp]
	mov	BYTE PTR [rbx+24], 0
	mov	QWORD PTR $T253310[rsp], rbx
	call	??$xr_free@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@@YAXAEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@Z ; xr_free<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Node>

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN17@Insert@5:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

	mov	r11, QWORD PTR _Newnode$[rsp]
	inc	rax
	mov	QWORD PTR [r10+16], rax
	mov	QWORD PTR [r11+8], r9

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

	mov	rax, QWORD PTR [r10+8]
	cmp	r9, rax
	jne	SHORT $LN16@Insert@5

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

	mov	QWORD PTR [rax+8], r11

; 1647 : 			_Lmost() = _Newnode;

	mov	rax, QWORD PTR [r10+8]
	mov	QWORD PTR [rax], r11

; 1648 : 			_Rmost() = _Newnode;

	mov	rax, QWORD PTR [r10+8]
	jmp	SHORT $LN416@Insert@5
$LN16@Insert@5:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

	test	r8b, r8b
	je	SHORT $LN14@Insert@5

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

	mov	QWORD PTR [r9], r11

; 1653 : 			if (_Wherenode == _Lmost())

	mov	rax, QWORD PTR [r10+8]
	cmp	r9, QWORD PTR [rax]
	jne	SHORT $LN11@Insert@5

; 1654 : 				_Lmost() = _Newnode;

	mov	QWORD PTR [rax], r11

; 1655 : 			}
; 1656 : 		else

	jmp	SHORT $LN11@Insert@5
$LN14@Insert@5:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

	mov	QWORD PTR [r9+16], r11

; 1659 : 			if (_Wherenode == _Rmost())

	mov	rax, QWORD PTR [r10+8]
	cmp	r9, QWORD PTR [rax+16]
	jne	SHORT $LN11@Insert@5
$LN416@Insert@5:

; 1660 : 				_Rmost() = _Newnode;

	mov	QWORD PTR [rax+16], r11
$LN11@Insert@5:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	rax, QWORD PTR [r11+8]
	mov	rdx, r11
	cmp	BYTE PTR [rax+72], 0
	jne	$LN9@Insert@5
	npad	9
$LL10@Insert@5:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	cmp	rax, QWORD PTR [rcx]
	jne	$LN8@Insert@5

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

	mov	r8, QWORD PTR [rcx+16]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [r8+72], 0

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;
; 1673 : 					this->_Color(_Wherenode) = this->_Black;
; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;
; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));
; 1677 : 					}
; 1678 : 				else

	je	$LN418@Insert@5

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN151@Insert@5

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);
; 1683 : 						_Lrotate(_Pnode);

	mov	rcx, QWORD PTR [rax+16]
	mov	rdx, rax
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+16], rax
	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN150@Insert@5
	mov	QWORD PTR [rax+8], rdx
$LN150@Insert@5:
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r10+8]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN149@Insert@5
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN146@Insert@5
$LN149@Insert@5:
	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN147@Insert@5
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN146@Insert@5
$LN147@Insert@5:
	mov	QWORD PTR [rax+16], rcx
$LN146@Insert@5:
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rdx+8], rcx
$LN151@Insert@5:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

	mov	rax, QWORD PTR [rdx+8]
	mov	BYTE PTR [rax+72], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+72], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx]
	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN213@Insert@5
	mov	QWORD PTR [rax+8], rcx
$LN213@Insert@5:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [r10+8]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN212@Insert@5
	mov	QWORD PTR [rax+8], r8
	mov	QWORD PTR [r8+16], rcx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

	jmp	$LN417@Insert@5

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN212@Insert@5:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax+16]
	jne	SHORT $LN210@Insert@5
	mov	QWORD PTR [rax+16], r8
	mov	QWORD PTR [r8+16], rcx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

	jmp	$LN417@Insert@5

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN210@Insert@5:
	mov	QWORD PTR [rax], r8
	mov	QWORD PTR [r8+16], rcx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

	jmp	$LN417@Insert@5
$LN8@Insert@5:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

	mov	r8, QWORD PTR [rcx]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

	cmp	BYTE PTR [r8+72], 0
	jne	SHORT $LN3@Insert@5
$LN418@Insert@5:

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	BYTE PTR [rax+72], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

	mov	BYTE PTR [r8+72], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+72], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	rax, QWORD PTR [rdx+8]
	mov	rdx, QWORD PTR [rax+8]

; 1703 : 					}
; 1704 : 				else

	jmp	$LN356@Insert@5
$LN3@Insert@5:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN293@Insert@5

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);
; 1709 : 						_Rrotate(_Pnode);

	mov	rcx, QWORD PTR [rax]
	mov	rdx, rax
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN292@Insert@5
	mov	QWORD PTR [rax+8], rdx
$LN292@Insert@5:
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r10+8]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN291@Insert@5
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN288@Insert@5
$LN291@Insert@5:
	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN289@Insert@5
	mov	QWORD PTR [rax+16], rcx
	jmp	SHORT $LN288@Insert@5
$LN289@Insert@5:
	mov	QWORD PTR [rax], rcx
$LN288@Insert@5:
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [rdx+8], rcx
$LN293@Insert@5:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

	mov	rax, QWORD PTR [rdx+8]
	mov	BYTE PTR [rax+72], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+72], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN355@Insert@5
	mov	QWORD PTR [rax+8], rcx
$LN355@Insert@5:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [r10+8]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN354@Insert@5
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN351@Insert@5
$LN354@Insert@5:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN352@Insert@5
	mov	QWORD PTR [rax], r8
	jmp	SHORT $LN351@Insert@5
$LN352@Insert@5:
	mov	QWORD PTR [rax+16], r8
$LN351@Insert@5:
	mov	QWORD PTR [r8], rcx
$LN417@Insert@5:
	mov	QWORD PTR [rcx+8], r8
$LN356@Insert@5:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+72], 0
	je	$LL10@Insert@5
$LN9@Insert@5:

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	rax, QWORD PTR [r10+8]

; 1720 : 		return (iterator(_Newnode, this));

	mov	QWORD PTR [rbx], r11
	mov	rcx, QWORD PTR [rax+8]
	mov	rax, rbx
	mov	BYTE PTR [rcx+72], 1

; 1721 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN415@Insert@5:
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Insert
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD imagerel $LN294
	DD	imagerel $LN294+63
	DD	imagerel $unwind$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD imagerel $LN294+63
	DD	imagerel $LN294+212
	DD	imagerel $chain$0$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD imagerel $LN294+212
	DD	imagerel $LN294+506
	DD	imagerel $chain$1$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD 021H
	DD	imagerel $LN294
	DD	imagerel $LN294+63
	DD	imagerel $unwind$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD 020521H
	DD	0ff405H
	DD	imagerel $LN294
	DD	imagerel $LN294+63
	DD	imagerel $unwind$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z DD 081801H
	DD	0e0145218H
	DD	0c010d012H
	DD	0600d700eH
	DD	0300b500cH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
this$ = 112
__$ReturnUdt$ = 120
$T254815 = 128
$T255115 = 128
$T254079 = 128
_Node$ = 128
?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Linsert, COMDAT

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

$LN294:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	sub	rsp, 48					; 00000030H

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

	mov	r12, QWORD PTR [rcx+8]
	mov	rbp, r8
	mov	r13, rdx
	mov	rbx, QWORD PTR [r12+8]
	mov	r14, rcx
	lea	rsi, QWORD PTR [r8+24]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [rbx+73], 0
	mov	dil, 1
	jne	$LN11@Linsert@5
	mov	r14, QWORD PTR [rsi+16]
	mov	QWORD PTR [rsp+120], r15
	npad	12
$LL12@Linsert@5:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)
; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,
; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else
; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

	cmp	QWORD PTR [rbx+48], 16
	mov	rbp, QWORD PTR [rbx+40]
	lea	rdx, QWORD PTR [rbx+24]
	mov	r12, rbx
	jb	SHORT $LN84@Linsert@5
	mov	rdx, QWORD PTR [rdx]
$LN84@Linsert@5:
	cmp	r14, r14
	mov	rdi, r14
	cmovb	rdi, r14
	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN99@Linsert@5
	mov	rcx, QWORD PTR [rsi]
	jmp	SHORT $LN100@Linsert@5
$LN99@Linsert@5:
	mov	rcx, rsi
$LN100@Linsert@5:
	mov	r8, rbp
	cmp	rdi, rbp
	cmovb	r8, rdi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN91@Linsert@5
	cmp	rdi, rbp
	jae	SHORT $LN90@Linsert@5
	or	ecx, -1
	jmp	SHORT $LN91@Linsert@5
$LN90@Linsert@5:
	xor	eax, eax
	cmp	rdi, rbp
	setne	al
	mov	ecx, eax
$LN91@Linsert@5:
	test	ecx, ecx
	sets	dil

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

	test	dil, dil
	je	SHORT $LN15@Linsert@5
	mov	rbx, QWORD PTR [rbx]
	jmp	SHORT $LN16@Linsert@5
$LN15@Linsert@5:
	mov	rbx, QWORD PTR [rbx+16]
$LN16@Linsert@5:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

	cmp	BYTE PTR [rbx+73], 0
	je	SHORT $LL12@Linsert@5
	mov	rbp, QWORD PTR _Node$[rsp]
	mov	r14, QWORD PTR this$[rsp]
	mov	r15, QWORD PTR [rsp+120]
$LN11@Linsert@5:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

	mov	rbx, r12

; 970  : 			if (!_Addleft)

	test	dil, dil
	je	$LN162@Linsert@5

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

	mov	rax, QWORD PTR [r14+8]
	cmp	r12, QWORD PTR [rax]
	jne	SHORT $LN4@Linsert@5

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

	mov	r8b, 1
$LN293@Linsert@5:
	lea	rdx, QWORD PTR $T254079[rsp]
	mov	r9, r12
	mov	rcx, r14
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@IEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Insert
	mov	BYTE PTR [r13+8], 1
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r13], rcx
	jmp	$LN291@Linsert@5
$LN4@Linsert@5:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

	cmp	BYTE PTR [r12+73], 0
	je	SHORT $LN169@Linsert@5
	mov	rbx, QWORD PTR [r12+16]
	jmp	SHORT $LN162@Linsert@5
$LN169@Linsert@5:
	mov	rax, QWORD PTR [r12]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN284@Linsert@5
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN162@Linsert@5
	npad	5
$LL183@Linsert@5:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+73], 0
	je	SHORT $LL183@Linsert@5
	jmp	SHORT $LN162@Linsert@5
$LN284@Linsert@5:
	mov	rax, QWORD PTR [r12+8]
	cmp	BYTE PTR [rax+73], 0
	jne	SHORT $LN290@Linsert@5
	npad	6
$LL165@Linsert@5:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN290@Linsert@5
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+73], 0
	je	SHORT $LL165@Linsert@5
$LN290@Linsert@5:
	cmp	BYTE PTR [rbx+73], 0
	cmove	rbx, rax
$LN162@Linsert@5:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

	lea	rcx, QWORD PTR [rbx+24]
	mov	rdx, rsi
	call	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >::operator()
	test	al, al
	je	SHORT $LN2@Linsert@5

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

	movzx	r8d, dil
	jmp	$LN293@Linsert@5
$LN2@Linsert@5:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN251@Linsert@5
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR $T254815[rsp], rax
	test	rax, rax
	je	SHORT $LN251@Linsert@5
	lea	rcx, QWORD PTR $T254815[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN251@Linsert@5:
	mov	QWORD PTR [rsi+24], 15
	mov	QWORD PTR [rsi+16], 0

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

	lea	rcx, QWORD PTR $T255115[rsp]
	mov	BYTE PTR [rsi], 0
	mov	QWORD PTR $T255115[rsp], rbp
	call	??$xr_free@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@@YAXAEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@Z ; xr_free<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Node>

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

	mov	QWORD PTR [r13], rbx
	mov	BYTE PTR [r13+8], 0
$LN291@Linsert@5:
	mov	rax, r13

; 989  : 				}
; 990  : 			}
; 991  : 		}

	add	rsp, 48					; 00000030H
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Linsert
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD imagerel $LN113
	DD	imagerel $LN113+96
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD imagerel $LN113+96
	DD	imagerel $LN113+421
	DD	imagerel $chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD imagerel $LN113+421
	DD	imagerel $LN113+435
	DD	imagerel $chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD 021H
	DD	imagerel $LN113
	DD	imagerel $LN113+96
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD 020521H
	DD	067405H
	DD	imagerel $LN113
	DD	imagerel $LN113+96
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0c0113215H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert, COMDAT

; 981  : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off

$LN113:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r12
	sub	rsp, 32					; 00000020H
	mov	rbp, r8

; 982  : 		if (this->_Mysize < _Off || _Right.size() < _Roff)

	mov	r8, QWORD PTR [rcx+16]
	mov	r12, r9
	mov	rsi, rdx
	mov	rbx, rcx
	cmp	r8, 1
	jb	$LN6@insert@5
	mov	rax, QWORD PTR [rdx+16]
	cmp	rax, rbp
	jb	$LN6@insert@5

; 984  : 		size_type _Num = _Right.size() - _Roff;

	sub	rax, rbp

; 985  : 		if (_Num < _Count)

	cmp	rax, r9
	cmovb	r12, rax

; 986  : 			_Count = _Num;	// trim _Count to size
; 987  : 		if (npos - this->_Mysize <= _Count)

	or	rax, -1
	sub	rax, r8
	cmp	rax, r12
	ja	SHORT $LN4@insert@5

; 988  : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN4@insert@5:
	mov	QWORD PTR [rsp+48], rdi

; 989  : 
; 990  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	test	r12, r12
	je	$LN107@insert@5
	lea	rdi, QWORD PTR [r8+r12]
	cmp	rdi, -2
	jbe	SHORT $LN26@insert@5
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN26@insert@5:
	mov	rax, QWORD PTR [rcx+24]
	cmp	rax, rdi
	jae	SHORT $LN25@insert@5
	mov	rdx, rdi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	test	rdi, rdi
	je	$LN107@insert@5
$LN112@insert@5:

; 991  : 			{	// make room and insert new stuff
; 992  : 			_Traits::move(_Myptr() + _Off + _Count,
; 993  : 				_Myptr() + _Off, this->_Mysize - _Off);	// empty out hole

	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, 16
	jb	SHORT $LN73@insert@5
	mov	rdx, QWORD PTR [rbx]
	jmp	SHORT $LN74@insert@5

; 989  : 
; 990  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

$LN25@insert@5:
	test	rdi, rdi
	jne	SHORT $LN112@insert@5
	mov	QWORD PTR [rcx+16], rdi
	cmp	rax, 16
	jb	SHORT $LN67@insert@5
	mov	rax, QWORD PTR [rcx]
	mov	BYTE PTR [rax], dil
	jmp	$LN107@insert@5
$LN67@insert@5:
	mov	rax, rcx
	mov	BYTE PTR [rcx], 0
	jmp	$LN107@insert@5

; 991  : 			{	// make room and insert new stuff
; 992  : 			_Traits::move(_Myptr() + _Off + _Count,
; 993  : 				_Myptr() + _Off, this->_Mysize - _Off);	// empty out hole

$LN73@insert@5:
	mov	rdx, rbx
$LN74@insert@5:
	cmp	rax, 16
	jb	SHORT $LN77@insert@5
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN78@insert@5
$LN77@insert@5:
	mov	rax, rbx
$LN78@insert@5:
	mov	r8, QWORD PTR [rbx+16]
	lea	rcx, QWORD PTR [rax+r12+1]
	dec	r8
	inc	rdx
	call	QWORD PTR __imp_memmove

; 994  : 			if (this == &_Right)

	cmp	rbx, rsi
	jne	SHORT $LN2@insert@5

; 995  : 				_Traits::move(_Myptr() + _Off,
; 996  : 					_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 997  : 						_Count);	// substring

	cmp	rbp, 1
	jbe	SHORT $LN10@insert@5
	add	rbp, r12
$LN10@insert@5:
	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, 16
	jb	SHORT $LN83@insert@5
	mov	rdx, QWORD PTR [rbx]
	jmp	SHORT $LN84@insert@5
$LN83@insert@5:
	mov	rdx, rbx
$LN84@insert@5:
	cmp	rax, 16
	jb	SHORT $LN87@insert@5
	mov	rcx, QWORD PTR [rbx]
	add	rdx, rbp
	mov	r8, r12
	inc	rcx
	call	QWORD PTR __imp_memmove

; 998  : 			else

	jmp	SHORT $LN99@insert@5

; 995  : 				_Traits::move(_Myptr() + _Off,
; 996  : 					_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 997  : 						_Count);	// substring

$LN87@insert@5:
	add	rdx, rbp
	mov	rcx, rbx
	mov	r8, r12
	inc	rcx
	call	QWORD PTR __imp_memmove

; 998  : 			else

	jmp	SHORT $LN99@insert@5
$LN2@insert@5:

; 999  : 				_Traits::copy(_Myptr() + _Off,
; 1000 : 					_Right._Myptr() + _Roff, _Count);	// fill hole

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN93@insert@5
	mov	rsi, QWORD PTR [rsi]
$LN93@insert@5:
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN97@insert@5
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN98@insert@5
$LN97@insert@5:
	mov	rcx, rbx
$LN98@insert@5:
	lea	rdx, QWORD PTR [rsi+rbp]
	inc	rcx
	mov	r8, r12
	call	memcpy
$LN99@insert@5:

; 1001 : 			_Eos(_Num);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN105@insert@5
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN106@insert@5
$LN105@insert@5:
	mov	rax, rbx
$LN106@insert@5:
	mov	BYTE PTR [rax+rdi], 0
$LN107@insert@5:

; 1002 : 			}
; 1003 : 		return (*this);
; 1004 : 		}

	mov	rdi, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
$LN6@insert@5:

; 983  : 			_Xran();	// _Off or _Roff off end

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN110@insert@5:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z DD imagerel $LN108
	DD	imagerel $LN108+394
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z DD 08ad01H
	DD	0674adH
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert, COMDAT

; 1008 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off

$LN108:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	sub	rsp, 32					; 00000020H

; 1009 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1010 : 		if (_Count != 0)
; 1011 : 			_DEBUG_POINTER(_Ptr);
; 1012 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1013 : 
; 1014 : 		if (_Inside(_Ptr))

	mov	r8, QWORD PTR [rcx+24]
	mov	rsi, rdx
	mov	rbx, rcx
	cmp	r8, 16
	jb	SHORT $LN14@insert@6
	mov	rax, QWORD PTR [rcx]
	jmp	SHORT $LN15@insert@6
$LN14@insert@6:
	mov	rax, rcx
$LN15@insert@6:
	lea	rbp, OFFSET FLAT:??_C@_01PJKLJHI@?$HO?$AA@
	cmp	rbp, rax
	jb	SHORT $LN4@insert@6
	cmp	r8, 16
	jb	SHORT $LN19@insert@6
	mov	rcx, QWORD PTR [rcx]
$LN19@insert@6:
	add	rcx, QWORD PTR [rbx+16]
	cmp	rcx, rbp
	jbe	SHORT $LN4@insert@6

; 1015 : 			return (insert(_Off, *this,
; 1016 : 				_Ptr - _Myptr(), _Count));	// substring

	cmp	r8, 16
	jb	SHORT $LN22@insert@6
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN23@insert@6
$LN22@insert@6:
	mov	rax, rbx
$LN23@insert@6:
	sub	rbp, rax
	mov	r9, rdx
	mov	rcx, rbx
	mov	r8, rbp
	mov	rdx, rbx

; 1028 : 			}
; 1029 : 		return (*this);
; 1030 : 		}

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	jmp	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KAEBV12@00@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
$LN4@insert@6:

; 1017 : 		if (this->_Mysize < _Off)

	mov	rcx, QWORD PTR [rbx+16]
	cmp	rcx, 1
	jae	SHORT $LN3@insert@6

; 1018 : 			_Xran();	// _Off off end

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN3@insert@6:

; 1019 : 		if (npos - this->_Mysize <= _Count)

	or	rax, -1
	sub	rax, rcx
	cmp	rax, rdx
	ja	SHORT $LN2@insert@6

; 1020 : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@insert@6:
	mov	QWORD PTR [rsp+48], rdi

; 1021 : 		size_type _Num;
; 1022 : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	test	rdx, rdx
	je	$LN101@insert@6
	lea	rdi, QWORD PTR [rcx+rdx]
	cmp	rdi, -2
	jbe	SHORT $LN34@insert@6
	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN34@insert@6:
	cmp	r8, rdi
	jae	SHORT $LN33@insert@6
	mov	r8, rcx
	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::_Copy
	test	rdi, rdi
	je	$LN101@insert@6
$LN107@insert@6:

; 1023 : 			{	// make room and insert new stuff
; 1024 : 			_Traits::move(_Myptr() + _Off + _Count,
; 1025 : 				_Myptr() + _Off, this->_Mysize - _Off);	// empty out hole

	mov	rax, QWORD PTR [rbx+24]
	cmp	rax, 16
	jb	SHORT $LN81@insert@6
	mov	rdx, QWORD PTR [rbx]
	jmp	SHORT $LN82@insert@6

; 1021 : 		size_type _Num;
; 1022 : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

$LN33@insert@6:
	test	rdi, rdi
	jne	SHORT $LN107@insert@6
	mov	QWORD PTR [rbx+16], rdi
	cmp	r8, 16
	jb	SHORT $LN75@insert@6
	mov	rax, QWORD PTR [rbx]
	mov	BYTE PTR [rax], dil
	jmp	SHORT $LN101@insert@6
$LN75@insert@6:
	mov	rax, rbx
	mov	BYTE PTR [rbx], 0
	jmp	SHORT $LN101@insert@6

; 1023 : 			{	// make room and insert new stuff
; 1024 : 			_Traits::move(_Myptr() + _Off + _Count,
; 1025 : 				_Myptr() + _Off, this->_Mysize - _Off);	// empty out hole

$LN81@insert@6:
	mov	rdx, rbx
$LN82@insert@6:
	cmp	rax, 16
	jb	SHORT $LN85@insert@6
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN86@insert@6
$LN85@insert@6:
	mov	rax, rbx
$LN86@insert@6:
	mov	r8, QWORD PTR [rbx+16]
	lea	rcx, QWORD PTR [rax+rsi+1]
	dec	r8
	inc	rdx
	call	QWORD PTR __imp_memmove

; 1026 : 			_Traits::copy(_Myptr() + _Off, _Ptr, _Count);	// fill hole

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN91@insert@6
	mov	rcx, QWORD PTR [rbx]
	jmp	SHORT $LN92@insert@6
$LN91@insert@6:
	mov	rcx, rbx
$LN92@insert@6:
	inc	rcx
	mov	r8, rsi
	mov	rdx, rbp
	call	memcpy

; 1027 : 			_Eos(_Num);

	cmp	QWORD PTR [rbx+24], 16
	mov	QWORD PTR [rbx+16], rdi
	jb	SHORT $LN99@insert@6
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN100@insert@6
$LN99@insert@6:
	mov	rax, rbx
$LN100@insert@6:
	mov	BYTE PTR [rax+rdi], 0
$LN101@insert@6:

; 1028 : 			}
; 1029 : 		return (*this);
; 1030 : 		}

	mov	rdi, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN105@insert@6:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z DD 020601H
	DD	070023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z
_TEXT	SEGMENT
this$ = 48
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert, COMDAT

; 1033 : 		{	// insert [_Ptr, <null>) at _Off

$LN5:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	r8, rcx

; 1034 : 		_DEBUG_POINTER(_Ptr);
; 1035 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));

	or	rcx, -1
	xor	eax, eax
	lea	rdi, OFFSET FLAT:??_C@_01PJKLJHI@?$HO?$AA@
	repne scasb
	not	rcx
	lea	rdx, QWORD PTR [rcx-1]
	mov	rcx, r8

; 1036 : 		}

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z DD imagerel $LN36
	DD	imagerel $LN36+95
	DD	imagerel $unwind$??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z PROC ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>, COMDAT

; 163  : 		{	// construct from moved values

$LN36:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	mov	rsi, rcx
	mov	BYTE PTR [rcx], 0
	or	rcx, -1
	mov	rdi, rdx
	xor	eax, eax
	mov	rbx, r8
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdx, QWORD PTR [rbx]

; 164  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rsi+40], rdx
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0PEADPEAX@?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAPEAD$$QEAPEAX@Z ENDP ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::_Pair_base<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z DD imagerel $LN42
	DD	imagerel $LN42+96
	DD	imagerel $unwind$??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>, COMDAT

; 255  : 		{	// construct from moved compatible pair

$LN42:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, rdx
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	mov	BYTE PTR [rcx], 0
	or	rcx, -1
	mov	rdi, rdx
	xor	eax, eax
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdx, QWORD PTR [rbx+8]

; 256  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rsi+40], rdx
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0PEADPEAX@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@QEAA@$$QEAU?$pair@PEADPEAX@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64><char * __ptr64,void * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
pdata	SEGMENT
$pdata$??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z DD imagerel $LN116
	DD	imagerel $LN116+186
	DD	imagerel $unwind$??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z DD 060f01H
	DD	0e640fH
	DD	0d340fH
	DD	0700b920fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z
_TEXT	SEGMENT
$T329476 = 32
$T329948 = 96
_Pdest$ = 96
_Src$ = 104
??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z PROC ; std::_Cons_val<xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >,std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>,std::pair<char * __ptr64,void * __ptr64> >, COMDAT

; 279  : 	{	// construct using allocator

$LN116:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rsi, rcx

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	or	rcx, -1
	mov	rbx, rdx
	mov	rdx, QWORD PTR [rdx]
	xor	eax, eax
	mov	QWORD PTR $T329476[rsp+24], 15
	mov	rdi, rdx
	mov	QWORD PTR $T329476[rsp+16], 0
	mov	BYTE PTR $T329476[rsp], 0
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T329476[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR $T329476[rsp+40], rdx
	test	rsi, rsi
	je	SHORT $LN50@Cons_val@36
	mov	QWORD PTR [rsi+24], 15
	mov	QWORD PTR [rsi+16], 0
	lea	rdx, QWORD PTR $T329476[rsp]
	or	r9, -1
	xor	r8d, r8d
	mov	rcx, rsi
	mov	BYTE PTR [rsi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdx, QWORD PTR $T329476[rsp+40]
	mov	QWORD PTR [rsi+40], rdx
$LN50@Cons_val@36:
	cmp	QWORD PTR $T329476[rsp+24], 16
	jb	SHORT $LN101@Cons_val@36
	mov	rax, QWORD PTR $T329476[rsp]
	mov	QWORD PTR $T329948[rsp], rax
	test	rax, rax
	je	SHORT $LN101@Cons_val@36
	lea	rcx, QWORD PTR $T329948[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN101@Cons_val@36:

; 281  : 	}

	mov	rbx, QWORD PTR [rsp+104]
	mov	rsi, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Cons_val@V?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@U?$pair@PEADPEAX@3@@std@@YAXAEAV?$xalloc@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@0@$$QEAU?$pair@PEADPEAX@0@@Z ENDP ; std::_Cons_val<xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64> >,std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> > const ,void * __ptr64>,std::pair<char * __ptr64,void * __ptr64> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD imagerel $LN148
	DD	imagerel $LN148+286
	DD	imagerel $unwind$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA DD imagerel ?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA+43
	DD	imagerel $unwind$?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD imagerel ??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z+91
	DD	00H
	DD	imagerel ??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z+264
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 061c19H
	DD	011641cH
	DD	0f3414H
	DD	07002b206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z
_TEXT	SEGMENT
$T330894 = 32
$T330769 = 40
$T330624 = 112
$T330885 = 112
this$ = 112
_Val$ = 120
_Wherenode$330141 = 128
??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >, COMDAT

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

$LN148:
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	QWORD PTR $T330894[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	QWORD PTR [rsp+136], rsi
	mov	rsi, rdx
	mov	rdi, rcx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

	mov	edx, 80					; 00000050H
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rbx, rax
	mov	QWORD PTR _Wherenode$330141[rsp], rax
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx], rax
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx+8], rax
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx+16], rcx
	mov	WORD PTR [rbx+72], 0

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

	mov	rdx, QWORD PTR [rsi]
	mov	QWORD PTR $T330769[rsp+24], 15
	mov	QWORD PTR $T330769[rsp+16], 0
	mov	BYTE PTR $T330769[rsp], 0
	xor	eax, eax
	or	rcx, -1
	mov	rdi, rdx
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T330769[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rax, QWORD PTR [rsi+8]
	mov	QWORD PTR $T330769[rsp+40], rax
	lea	rdi, QWORD PTR [rbx+24]
	test	rdi, rdi
	je	SHORT $LN79@Buynode@10
	mov	QWORD PTR [rdi+24], 15
	mov	QWORD PTR [rdi+16], 0
	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN110@Buynode@10
	mov	rax, QWORD PTR [rdi]
	jmp	SHORT $LN111@Buynode@10
$LN110@Buynode@10:
	mov	rax, rdi
$LN111@Buynode@10:
	mov	BYTE PTR [rax], 0
	or	r9, -1
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T330769[rsp]
	mov	rcx, rdi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rax, QWORD PTR $T330769[rsp+40]
	mov	QWORD PTR [rdi+40], rax
$LN79@Buynode@10:
	cmp	QWORD PTR $T330769[rsp+24], 16
	jb	SHORT $LN130@Buynode@10
	mov	rax, QWORD PTR $T330769[rsp]
	mov	QWORD PTR $T330624[rsp], rax
	test	rax, rax
	je	SHORT $LN130@Buynode@10
	lea	rcx, QWORD PTR $T330624[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN130@Buynode@10:
	mov	BYTE PTR $T330769[rsp], 0

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

	mov	rax, rbx

; 599  : 		}

	mov	rbx, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+136]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
$LN147@Buynode@10:
??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T330894 = 32
$T330769 = 40
$T330624 = 112
$T330885 = 112
this$ = 112
_Val$ = 120
_Wherenode$330141 = 128
?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA PROC ; `std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >'::`1'::catch$0

; 593  : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z$0:

; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rax, QWORD PTR _Wherenode$330141[rbp]
	mov	QWORD PTR $T330885[rbp], rax
	lea	rcx, QWORD PTR $T330885[rbp]
	call	??$xr_free@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@@YAXAEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@Z ; xr_free<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Node>

; 595  : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z@4HA ENDP ; `std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
pdata	SEGMENT
$pdata$??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Val$ = 64
??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::insert<std::pair<char * __ptr64,void * __ptr64> >, COMDAT

; 753  : 		_Pairib insert(_Valty&& _Val)

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

	mov	rdx, r8
	mov	rbx, rcx
	call	??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >
	mov	rdx, rdi
	mov	rcx, rbx
	mov	r8, rax
	call	?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Linsert

; 757  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$insert@U?$pair@PEADPEAX@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@1@$$QEAU?$pair@PEADPEAX@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::insert<std::pair<char * __ptr64,void * __ptr64> >
_TEXT	ENDS
PUBLIC	?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z		; EFS_Utils::UnlockFile
pdata	SEGMENT
$pdata$?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z DD imagerel $LN224
	DD	imagerel $LN224+476
	DD	imagerel $unwind$?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z DD 0b1701H
	DD	0343417H
	DD	02a0117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\filesystem_borland.cpp
xdata	ENDS
_TEXT	SEGMENT
$T330937 = 32
fn$ = 80
$T331751 = 400
_Where$331603 = 400
$T330940 = 400
this$ = 400
$T331608 = 408
fname$ = 408
bLog$ = 416
?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z PROC		; EFS_Utils::UnlockFile

; 110  : {

$LN224:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 336				; 00000150H
	mov	r15, rcx

; 111  : 	string256 fn; strcpy(fn,fname);

	lea	rcx, QWORD PTR fn$[rsp]
	sub	rcx, rdx
$LL5@UnlockFile:
	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	BYTE PTR [rcx+rdx-1], al
	test	al, al
	jne	SHORT $LL5@UnlockFile

; 112  : 
; 113  : 	HANDLEPairIt it 			= m_LockFiles.find(fn);

	or	rcx, -1
	mov	BYTE PTR $T330937[rsp], al
	xor	eax, eax
	lea	rdi, QWORD PTR fn$[rsp]
	lea	rdx, QWORD PTR fn$[rsp]
	mov	QWORD PTR $T330937[rsp+24], 15
	repne scasb
	mov	QWORD PTR $T330937[rsp+16], 0
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T330937[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rbp, QWORD PTR [r15+16]
	mov	r13, QWORD PTR $T330937[rsp+24]
	mov	rdi, QWORD PTR [rbp+8]
	mov	rsi, QWORD PTR $T330937[rsp+16]
	mov	r12, QWORD PTR $T330937[rsp]
	cmp	BYTE PTR [rdi+73], 0
	jne	SHORT $LN43@UnlockFile
	npad	10
$LL44@UnlockFile:
	mov	rbx, QWORD PTR [rdi+40]
	cmp	r13, 16
	lea	rcx, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR $T330937[rsp]
	cmovae	rdx, r12
	cmp	rbx, rbx
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN84@UnlockFile
	mov	rcx, QWORD PTR [rcx]
$LN84@UnlockFile:
	mov	r8, rsi
	cmp	rbx, rsi
	cmovb	r8, rbx
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN76@UnlockFile
	cmp	rbx, rsi
	jb	SHORT $LN223@UnlockFile
	cmp	rbx, rsi
	setne	al
	mov	ecx, eax
$LN76@UnlockFile:
	test	ecx, ecx
	js	SHORT $LN223@UnlockFile
	mov	rbp, rdi
	mov	rdi, QWORD PTR [rdi]
	jmp	SHORT $LN41@UnlockFile
$LN223@UnlockFile:
	mov	rdi, QWORD PTR [rdi+16]
$LN41@UnlockFile:
	cmp	BYTE PTR [rdi+73], 0
	je	SHORT $LL44@UnlockFile
$LN43@UnlockFile:
	mov	rbx, QWORD PTR [r15+16]
	mov	QWORD PTR _Where$331603[rsp], rbp
	cmp	rbp, rbx
	je	SHORT $LN37@UnlockFile
	cmp	QWORD PTR [rbp+48], 16
	mov	rdi, QWORD PTR [rbp+40]
	lea	rdx, QWORD PTR [rbp+24]
	jb	SHORT $LN136@UnlockFile
	mov	rdx, QWORD PTR [rdx]
$LN136@UnlockFile:
	cmp	r13, 16
	lea	rcx, QWORD PTR $T330937[rsp]
	mov	r8, rdi
	cmovae	rcx, r12
	cmp	rsi, rdi
	cmovb	r8, rsi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN143@UnlockFile
	cmp	rsi, rdi
	jb	SHORT $LN37@UnlockFile
	cmp	rsi, rdi
	setne	al
	mov	ecx, eax
$LN143@UnlockFile:
	test	ecx, ecx
	js	SHORT $LN37@UnlockFile
	lea	rdi, QWORD PTR _Where$331603[rsp]
	jmp	SHORT $LN38@UnlockFile
$LN37@UnlockFile:
	mov	QWORD PTR $T331608[rsp], rbx
	lea	rdi, QWORD PTR $T331608[rsp]
$LN38@UnlockFile:
	mov	rdi, QWORD PTR [rdi]
	cmp	r13, 16
	jb	SHORT $LN181@UnlockFile
	mov	QWORD PTR $T331751[rsp], r12
	test	r12, r12
	je	SHORT $LN181@UnlockFile
	lea	rcx, QWORD PTR $T331751[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN181@UnlockFile:
	mov	QWORD PTR $T330937[rsp+24], 15
	mov	QWORD PTR $T330937[rsp+16], 0
	mov	BYTE PTR $T330937[rsp], 0

; 114  : 	if (it!=m_LockFiles.end()){

	cmp	rdi, QWORD PTR [r15+16]
	je	SHORT $LN2@UnlockFile

; 115  :     	void* handle 			= it->second;

	mov	rbx, QWORD PTR [rdi+64]

; 116  : 		m_LockFiles.erase		(it);

	lea	rdx, QWORD PTR $T330940[rsp]
	lea	rcx, QWORD PTR [r15+8]
	mov	r8, rdi
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::erase

; 117  : /*        
; 118  :         // unregister access
; 119  :         xr_string pref 			= initial?xr_string(FS.get_path(initial)->m_Add)+"\\":xr_string("");
; 120  :         xr_string				m_AccessFN = xr_string("access\\")+pref+fname+xr_string(".desc");
; 121  :         FS.update_path			(m_AccessFN,"$server_data_root$",m_AccessFN.c_str());
; 122  :         CInifile*	ini			= CInifile::Create(m_AccessFN.c_str(),false);
; 123  :         string512				buf0,buf1;
; 124  :         string16				dt_buf, tm_buf;
; 125  :         sprintf					(buf0,"%s-%s:%s-UNLOCK",_strdate(dt_buf),_strtime(tm_buf),"0");
; 126  :         sprintf					(buf1,"\"Computer: '%s' User: '%s'\"",Core.CompName,Core.UserName);
; 127  :         ini->w_string			("locked","name","");
; 128  :         ini->w_string			("history",buf0,buf1);
; 129  :         CInifile::Destroy		(ini);
; 130  : */
; 131  : 		if (bLog)				WriteAccessLog(fn,"Unlock");
; 132  : 		return CloseHandle		(handle);

	mov	rcx, rbx
	call	QWORD PTR __imp_CloseHandle
	jmp	SHORT $LN3@UnlockFile
$LN2@UnlockFile:

; 133  : 	}
; 134  : 	return false;

	xor	eax, eax
$LN3@UnlockFile:

; 135  : }

	mov	rbx, QWORD PTR [rsp+416]
	add	rsp, 336				; 00000150H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?UnlockFile@EFS_Utils@@QEAAHPEBD_N@Z ENDP		; EFS_Utils::UnlockFile
_TEXT	ENDS
PUBLIC	?LockFile@EFS_Utils@@QEAAHPEBD_N@Z		; EFS_Utils::LockFile
pdata	SEGMENT
$pdata$?LockFile@EFS_Utils@@QEAAHPEBD_N@Z DD imagerel $LN241
	DD	imagerel $LN241+645
	DD	imagerel $unwind$?LockFile@EFS_Utils@@QEAAHPEBD_N@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?LockFile@EFS_Utils@@QEAAHPEBD_N@Z DD 0b1f01H
	DD	03c341fH
	DD	032011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
I$97186 = 80
$T331933 = 80
$T331930 = 96
fn$ = 144
$T332784 = 464
_Where$332632 = 464
this$ = 464
$T332637 = 472
fname$ = 472
bLog$ = 480
?LockFile@EFS_Utils@@QEAAHPEBD_N@Z PROC			; EFS_Utils::LockFile

; 76   : {

$LN241:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-144]
	sub	rsp, 400				; 00000190H
	mov	rbx, rcx

; 77   : 	string256 fn; strcpy(fn,fname);

	lea	rcx, QWORD PTR fn$[rbp-256]
	sub	rcx, rdx
	npad	7
$LL10@LockFile:
	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	BYTE PTR [rdx+rcx-1], al
	test	al, al
	jne	SHORT $LL10@LockFile

; 78   : 
; 79   : 	BOOL bRes=false;
; 80   : 	if (m_LockFiles.find(fn)==m_LockFiles.end()){

	or	rcx, -1
	mov	BYTE PTR $T331930[rsp], al
	xor	eax, eax
	lea	rdi, QWORD PTR fn$[rbp-256]
	lea	rdx, QWORD PTR fn$[rbp-256]
	mov	QWORD PTR $T331930[rsp+24], 15
	repne scasb
	mov	QWORD PTR $T331930[rsp+16], 0
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T331930[rsp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	r13, QWORD PTR [rbx+16]
	mov	rdi, QWORD PTR [rbx+16]
	mov	rax, QWORD PTR $T331930[rsp+24]
	mov	r12, QWORD PTR $T331930[rsp+16]
	mov	r14, QWORD PTR $T331930[rsp]
	lea	r15, QWORD PTR [rbx+8]
	mov	rbx, QWORD PTR [r13+8]
	cmp	BYTE PTR [rbx+73], 0
	jne	SHORT $LN58@LockFile
	npad	6
$LL59@LockFile:
	mov	rsi, QWORD PTR [rbx+40]
	cmp	rax, 16
	lea	rcx, QWORD PTR [rbx+24]
	lea	rdx, QWORD PTR $T331930[rsp]
	cmovae	rdx, r14
	cmp	rsi, rsi
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN99@LockFile
	mov	rcx, QWORD PTR [rcx]
$LN99@LockFile:
	mov	r8, r12
	cmp	rsi, r12
	cmovb	r8, rsi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN91@LockFile
	cmp	rsi, r12
	jb	SHORT $LN238@LockFile
	cmp	rsi, r12
	setne	al
	mov	ecx, eax
$LN91@LockFile:
	test	ecx, ecx
	js	SHORT $LN238@LockFile
	mov	r13, rbx
	mov	rbx, QWORD PTR [rbx]
	jmp	SHORT $LN56@LockFile
$LN238@LockFile:
	mov	rbx, QWORD PTR [rbx+16]
$LN56@LockFile:
	cmp	BYTE PTR [rbx+73], 0
	mov	rax, QWORD PTR $T331930[rsp+24]
	je	SHORT $LL59@LockFile
$LN58@LockFile:
	mov	rsi, QWORD PTR [r15+8]
	mov	QWORD PTR _Where$332632[rbp-256], r13
	cmp	r13, rsi
	je	SHORT $LN52@LockFile
	cmp	QWORD PTR [r13+48], 16
	mov	rbx, QWORD PTR [r13+40]
	lea	rdx, QWORD PTR [r13+24]
	jb	SHORT $LN151@LockFile
	mov	rdx, QWORD PTR [rdx]
$LN151@LockFile:
	cmp	rax, 16
	lea	rcx, QWORD PTR $T331930[rsp]
	mov	r8, rbx
	cmovae	rcx, r14
	cmp	r12, rbx
	cmovb	r8, r12
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN158@LockFile
	cmp	r12, rbx
	jb	SHORT $LN52@LockFile
	cmp	r12, rbx
	setne	al
	mov	ecx, eax
$LN158@LockFile:
	test	ecx, ecx
	js	SHORT $LN52@LockFile
	lea	rax, QWORD PTR _Where$332632[rbp-256]
	jmp	SHORT $LN53@LockFile
$LN52@LockFile:
	mov	QWORD PTR $T332637[rbp-256], rsi
	lea	rax, QWORD PTR $T332637[rbp-256]
$LN53@LockFile:
	cmp	QWORD PTR [rax], rdi
	sete	dil
	cmp	QWORD PTR $T331930[rsp+24], 16
	jb	SHORT $LN198@LockFile
	mov	QWORD PTR $T332784[rbp-256], r14
	test	r14, r14
	je	SHORT $LN198@LockFile
	lea	rcx, QWORD PTR $T332784[rbp-256]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN198@LockFile:
	test	dil, dil
	je	$LN240@LockFile

; 81   : 		HANDLE handle=CreateFile(fn,GENERIC_READ|GENERIC_WRITE,FILE_SHARE_READ,0,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,0);

	xor	edi, edi
	lea	rcx, QWORD PTR fn$[rbp-256]
	xor	r9d, r9d
	mov	QWORD PTR [rsp+48], rdi
	lea	r8d, QWORD PTR [rdi+1]
	mov	edx, -1073741824			; c0000000H
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 3
	call	QWORD PTR __imp_CreateFileA

; 82   : 		if (INVALID_HANDLE_VALUE!=handle){

	cmp	rax, -1
	je	$LN239@LockFile

; 83   : 			LPSTR lp_fn			= fn;
; 84   : 			std::pair<HANDLEPairIt, bool> I=m_LockFiles.insert(mk_pair(lp_fn,handle));

	lea	rcx, QWORD PTR fn$[rbp-256]
	lea	rdx, QWORD PTR $T331933[rsp]
	mov	QWORD PTR $T331933[rsp+8], rax
	mov	QWORD PTR $T331933[rsp], rcx
	mov	rcx, r15
	call	??$_Buynode@U?$pair@PEADPEAX@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@1@$$QEAU?$pair@PEADPEAX@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Buynode<std::pair<char * __ptr64,void * __ptr64> >
	lea	rdx, QWORD PTR I$97186[rsp]
	mov	rcx, r15
	mov	r8, rax
	call	?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@std@@@std@@_N@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAXU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@2@V?$xalloc@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAX@std@@@@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64,std::less<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,xalloc<std::pair<std::basic_string<char,std::char_traits<char>,xalloc<char> >,void * __ptr64> >,0> >::_Linsert

; 85   : 			R_ASSERT(			I.second);

	cmp	BYTE PTR ?ignore_always@?9??LockFile@EFS_Utils@@QEAAHPEBD_N@Z@4_NA, dil
	jne	SHORT $LN4@LockFile
	cmp	BYTE PTR I$97186[rsp+8], dil
	jne	SHORT $LN4@LockFile
	lea	rax, OFFSET FLAT:?ignore_always@?9??LockFile@EFS_Utils@@QEAAHPEBD_N@Z@4_NA
	lea	rcx, OFFSET FLAT:??_C@_0BE@IDEJHFDJ@EFS_Utils?3?3LockFile?$AA@
	lea	r8, OFFSET FLAT:??_C@_08PMINNIHH@I?4second?$AA@
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], rcx
	lea	rcx, OFFSET FLAT:??_C@_0BH@HKIMOCEJ@FileSystem_borland?4cpp?$AA@
	mov	DWORD PTR [rsp+48], 85			; 00000055H
	mov	QWORD PTR [rsp+40], rcx
	lea	rdx, OFFSET FLAT:??_C@_0BB@DBHFCHNO@assertion?5failed?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rdi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN4@LockFile:

; 104  : 		}
; 105  : 	}
; 106  : 	return bRes;

	mov	eax, 1

; 86   : /*            
; 87   : 			// register access              LockFile
; 88   :             xr_string pref 		= initial?xr_string(FS.get_path(initial)->m_Add)+"\\":xr_string("");
; 89   :             xr_string			m_AccessFN = xr_string("access\\")+pref+fname+xr_string(".desc");
; 90   :             FS.update_path		(m_AccessFN,"$server_data_root$",m_AccessFN.c_str());
; 91   :             
; 92   :             CInifile*	ini		= CInifile::Create(m_AccessFN.c_str(),false);
; 93   :             string512			buf0,buf1;
; 94   :             string16			dt_buf, tm_buf;
; 95   :             sprintf				(buf0,"%s-%s:%s-LOCK",_strdate(dt_buf),_strtime(tm_buf),"1");
; 96   :             sprintf				(buf1,"\"Computer: '%s' User: '%s'\"",Core.CompName,Core.UserName);
; 97   :             ini->w_string		("history",buf0,buf1);
; 98   :             sprintf 			(buf0,"\\\\%s\\%s",Core.CompName,Core.UserName);
; 99   :             ini->w_string		("locked","name",buf0);
; 100  :             CInifile::Destroy	(ini);
; 101  : */            
; 102  : 			if (bLog) 			WriteAccessLog(fn,"Lock");
; 103  : 			bRes				= true;

	jmp	SHORT $LN6@LockFile
$LN239@LockFile:

; 104  : 		}
; 105  : 	}
; 106  : 	return bRes;

	mov	eax, edi
	jmp	SHORT $LN6@LockFile
$LN240@LockFile:
	xor	eax, eax
$LN6@LockFile:

; 107  : }

	mov	rbx, QWORD PTR [rsp+480]
	add	rsp, 400				; 00000190H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?LockFile@EFS_Utils@@QEAAHPEBD_N@Z ENDP			; EFS_Utils::LockFile
_TEXT	ENDS
PUBLIC	?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z		; EFS_Utils::CheckLocking
pdata	SEGMENT
$pdata$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD imagerel $LN217
	DD	imagerel $LN217+80
	DD	imagerel $unwind$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
$pdata$5$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD imagerel $LN217+80
	DD	imagerel $LN217+433
	DD	imagerel $chain$5$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
$pdata$6$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD imagerel $LN217+433
	DD	imagerel $LN217+471
	DD	imagerel $chain$6$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
$pdata$7$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD imagerel $LN217+471
	DD	imagerel $LN217+609
	DD	imagerel $chain$7$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD 084301H
	DD	0327443H
	DD	0385436H
	DD	033010eH
	DD	030066007H
$chain$5$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD 083721H
	DD	02ef437H
	DD	02fe423H
	DD	030d414H
	DD	031c408H
	DD	imagerel $LN217
	DD	imagerel $LN217+80
	DD	imagerel $unwind$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
$chain$6$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD 020021H
	DD	02fe400H
	DD	imagerel $LN217
	DD	imagerel $LN217+80
	DD	imagerel $unwind$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
$chain$7$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z DD 021H
	DD	imagerel $LN217
	DD	imagerel $LN217+80
	DD	imagerel $unwind$?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
$T333668 = 64
$T332962 = 72
fn$ = 112
this$ = 432
$T333820 = 440
_Where$333663 = 440
fname$ = 440
bOnlySelf$ = 448
bMsg$ = 456
?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z PROC		; EFS_Utils::CheckLocking

; 59   : {

$LN217:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	sub	rsp, 408				; 00000198H
	mov	rsi, rcx

; 60   : 	string256 fn; strcpy(fn,fname);

	lea	rcx, QWORD PTR fn$[rsp]
	movzx	ebx, r9b
	sub	rcx, rdx
	npad	3
$LL7@CheckLocki:
	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	BYTE PTR [rcx+rdx-1], al
	test	al, al
	jne	SHORT $LL7@CheckLocki

; 61   : 
; 62   : 	if (bOnlySelf) return (m_LockFiles.find(fn)!=m_LockFiles.end());

	mov	QWORD PTR [rsp+448], rbp
	lea	rdx, QWORD PTR fn$[rsp]
	mov	QWORD PTR [rsp+400], rdi
	test	r8b, r8b
	je	$LN4@CheckLocki
	or	rcx, -1
	mov	QWORD PTR [rsp+392], r12
	xor	eax, eax
	xor	ebp, ebp
	mov	QWORD PTR [rsp+384], r13
	lea	rdi, QWORD PTR fn$[rsp]
	repne scasb
	mov	QWORD PTR [rsp+376], r14
	mov	QWORD PTR $T332962[rsp+24], 15
	not	rcx
	mov	QWORD PTR [rsp+368], r15
	mov	QWORD PTR $T332962[rsp+16], rbp
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR $T332962[rsp]
	mov	BYTE PTR $T332962[rsp], bpl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	mov	rdi, QWORD PTR [rsi+16]
	mov	r15, QWORD PTR $T332962[rsp+24]
	mov	rbx, QWORD PTR [rdi+8]
	mov	r12, QWORD PTR $T332962[rsp+16]
	mov	r14, QWORD PTR $T332962[rsp]
	mov	r13, rdi
	cmp	BYTE PTR [rbx+73], bpl
	jne	SHORT $LN55@CheckLocki
	npad	1
$LL56@CheckLocki:
	mov	rsi, QWORD PTR [rbx+40]
	cmp	r15, 16
	lea	rcx, QWORD PTR [rbx+24]
	lea	rdx, QWORD PTR $T332962[rsp]
	cmovae	rdx, r14
	cmp	rsi, rsi
	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN96@CheckLocki
	mov	rcx, QWORD PTR [rcx]
$LN96@CheckLocki:
	mov	r8, r12
	cmp	rsi, r12
	cmovb	r8, rsi
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN88@CheckLocki
	cmp	rsi, r12
	jb	SHORT $LN215@CheckLocki
	mov	eax, ebp
	setne	al
	mov	ecx, eax
$LN88@CheckLocki:
	test	ecx, ecx
	js	SHORT $LN215@CheckLocki
	mov	r13, rbx
	mov	rbx, QWORD PTR [rbx]
	jmp	SHORT $LN53@CheckLocki
$LN215@CheckLocki:
	mov	rbx, QWORD PTR [rbx+16]
$LN53@CheckLocki:
	cmp	BYTE PTR [rbx+73], bpl
	je	SHORT $LL56@CheckLocki
	mov	rsi, QWORD PTR this$[rsp]
$LN55@CheckLocki:
	mov	rsi, QWORD PTR [rsi+16]
	mov	QWORD PTR _Where$333663[rsp], r13
	cmp	r13, rsi
	je	SHORT $LN49@CheckLocki
	cmp	QWORD PTR [r13+48], 16
	mov	rbx, QWORD PTR [r13+40]
	lea	rdx, QWORD PTR [r13+24]
	jb	SHORT $LN148@CheckLocki
	mov	rdx, QWORD PTR [rdx]
$LN148@CheckLocki:
	cmp	r15, 16
	lea	rcx, QWORD PTR $T332962[rsp]
	mov	r8, rbx
	cmovae	rcx, r14
	cmp	r12, rbx
	cmovb	r8, r12
	call	memcmp
	movsxd	rcx, eax
	test	eax, eax
	jne	SHORT $LN155@CheckLocki
	cmp	r12, rbx
	jb	SHORT $LN49@CheckLocki
	mov	eax, ebp
	setne	al
	mov	ecx, eax
$LN155@CheckLocki:
	test	ecx, ecx
	js	SHORT $LN49@CheckLocki
	lea	rax, QWORD PTR _Where$333663[rsp]
	jmp	SHORT $LN50@CheckLocki
$LN49@CheckLocki:
	mov	QWORD PTR $T333668[rsp], rsi
	lea	rax, QWORD PTR $T333668[rsp]
$LN50@CheckLocki:
	cmp	QWORD PTR [rax], rdi
	mov	r13, QWORD PTR [rsp+384]
	mov	r12, QWORD PTR [rsp+392]
	setne	bpl
	cmp	r15, 16
	mov	r15, QWORD PTR [rsp+368]
	jb	SHORT $LN197@CheckLocki
	mov	QWORD PTR $T333820[rsp], r14
	test	r14, r14
	je	SHORT $LN197@CheckLocki
	lea	rcx, QWORD PTR $T333820[rsp]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN197@CheckLocki:
	mov	r14, QWORD PTR [rsp+376]
	mov	eax, ebp
	jmp	SHORT $LN5@CheckLocki
$LN4@CheckLocki:

; 63   : 	if (FS.exist(fn)){

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	call	?exist@CLocatorAPI@@QEAAPEBUfile@1@PEBD@Z ; CLocatorAPI::exist
	test	rax, rax
	je	SHORT $LN5@CheckLocki

; 64   : 		HANDLE handle=CreateFile(fn,GENERIC_READ|GENERIC_WRITE,FILE_SHARE_READ,0,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,0);

	xor	ebp, ebp
	lea	rcx, QWORD PTR fn$[rsp]
	xor	r9d, r9d
	mov	QWORD PTR [rsp+48], rbp
	lea	r8d, QWORD PTR [rbp+1]
	mov	edx, -1073741824			; c0000000H
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 3
	call	QWORD PTR __imp_CreateFileA

; 65   : 		CloseHandle(handle);

	mov	rcx, rax
	mov	rdi, rax
	call	QWORD PTR __imp_CloseHandle

; 66   :         if (INVALID_HANDLE_VALUE==handle){

	cmp	rdi, -1
	jne	SHORT $LN216@CheckLocki

; 67   : 			if (bMsg)	Msg("#!Access denied. File: '%s' currently locked by any user.",fn);

	test	bl, bl
	je	SHORT $LN1@CheckLocki
	lea	rdx, QWORD PTR fn$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0DK@GNOAJPGG@?$CD?$CBAccess?5denied?4?5File?3?5?8?$CFs?8?5curr@
	call	?Msg@@YAXPEBDZZ				; Msg
$LN1@CheckLocki:

; 68   : //.            if (owner) 	*owner = GetLockOwner(initial,fname);
; 69   :         }
; 70   : 		return (INVALID_HANDLE_VALUE==handle);

	cmp	rdi, -1
$LN216@CheckLocki:
	sete	bpl
	mov	eax, ebp
$LN5@CheckLocki:
	mov	rdi, QWORD PTR [rsp+400]
	mov	rbp, QWORD PTR [rsp+448]

; 71   : 	}
; 72   :     return FALSE;
; 73   : }

	add	rsp, 408				; 00000198H
	pop	rsi
	pop	rbx
	ret	0
?CheckLocking@EFS_Utils@@QEAAHPEBD_N1@Z ENDP		; EFS_Utils::CheckLocking
_TEXT	ENDS
PUBLIC	?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z ; EFS_Utils::AppendFolderToName
pdata	SEGMENT
$pdata$?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z DD imagerel $LN84
	DD	imagerel $LN84+396
	DD	imagerel $unwind$?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z DD 091701H
	DD	0a86417H
	DD	0a75417H
	DD	0a63417H
	DD	0a40117H
	DD	07010H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
_fn$334080 = 32
nm$ = 288
this$ = 1328
__$ReturnUdt$ = 1336
tex_name$ = 1344
depth$ = 1352
full_name$ = 1360
?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z PROC ; EFS_Utils::AppendFolderToName

; 51   : {

$LN84:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 1312				; 00000520H

; 52   : 	string1024 nm;
; 53   : 	strcpy(nm,tex_name.c_str());

	cmp	QWORD PTR [r8+24], 16
	mov	ebx, r9d
	mov	rsi, r8
	mov	rbp, rdx
	jb	SHORT $LN8@AppendFold@3
	mov	rcx, QWORD PTR [r8]
	jmp	SHORT $LN9@AppendFold@3
$LN8@AppendFold@3:
	mov	rcx, r8
$LN9@AppendFold@3:
	lea	rdx, QWORD PTR nm$[rsp]
	sub	rdx, rcx
	npad	6
$LL3@AppendFold@3:
	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR [rdx+rcx-1], al
	test	al, al
	jne	SHORT $LL3@AppendFold@3

; 54   : 	tex_name = AppendFolderToName(nm,depth,full_name);

	mov	rcx, QWORD PTR ?g_pStringContainer@@3PEAVstr_container@@EA ; g_pStringContainer
	lea	rdx, QWORD PTR nm$[rsp]
	mov	edi, ebx
	call	?dock@str_container@@QEAAPEAUstr_value@@PEBD@Z ; str_container::dock
	mov	r11, rax
	test	rax, rax
	je	SHORT $LN31@AppendFold@3
	inc	DWORD PTR [rax]
$LN31@AppendFold@3:
	cmp	BYTE PTR nm$[rsp], 0
	lea	rdx, QWORD PTR nm$[rsp]
	lea	rcx, QWORD PTR _fn$334080[rsp]
	je	SHORT $LN83@AppendFold@3
$LL23@AppendFold@3:
	test	edi, edi
	je	SHORT $LN83@AppendFold@3
	movzx	eax, BYTE PTR [rdx]
	cmp	al, 95					; 0000005fH
	jne	SHORT $LN20@AppendFold@3
	dec	edi
	mov	BYTE PTR [rcx], 92			; 0000005cH
	jmp	SHORT $LN22@AppendFold@3
$LN20@AppendFold@3:
	mov	BYTE PTR [rcx], al
$LN22@AppendFold@3:
	inc	rdx
	inc	rcx
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL23@AppendFold@3
$LN83@AppendFold@3:
	cmp	DWORD PTR full_name$[rsp], 0
	je	SHORT $LN18@AppendFold@3
	mov	BYTE PTR [rcx], 0
	cmp	edi, ebx
	jge	SHORT $LN16@AppendFold@3
	test	r11, r11
	je	SHORT $LN37@AppendFold@3
	lea	rdx, QWORD PTR [r11+12]
	jmp	SHORT $LN38@AppendFold@3
$LN37@AppendFold@3:
	xor	edx, edx
$LN38@AppendFold@3:
	xor	eax, eax
	or	rcx, -1
	lea	rdi, QWORD PTR _fn$334080[rsp]
	repne scasb
	xor	ecx, ecx
$LL82@AppendFold@3:
	movzx	eax, BYTE PTR [rdx+rcx]
	inc	rcx
	mov	BYTE PTR [rdi+rcx-2], al
	test	al, al
	jne	SHORT $LL82@AppendFold@3
	jmp	SHORT $LN16@AppendFold@3
$LN18@AppendFold@3:
	movzx	eax, BYTE PTR [rdx]
	test	al, al
	je	SHORT $LN13@AppendFold@3
	sub	rdx, rcx
	npad	4
$LL15@AppendFold@3:
	mov	BYTE PTR [rcx], al
	movzx	eax, BYTE PTR [rdx+rcx+1]
	inc	rcx
	test	al, al
	jne	SHORT $LL15@AppendFold@3
$LN13@AppendFold@3:
	mov	BYTE PTR [rcx], 0
$LN16@AppendFold@3:
	test	r11, r11
	je	SHORT $LN41@AppendFold@3
	dec	DWORD PTR [r11]
$LN41@AppendFold@3:
	xor	ecx, ecx
	npad	5
$LL12@AppendFold@3:
	movzx	eax, BYTE PTR _fn$334080[rsp+rcx]
	inc	rcx
	mov	BYTE PTR nm$[rsp+rcx-1], al
	test	al, al
	jne	SHORT $LL12@AppendFold@3
	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR nm$[rsp]
	repne scasb
	lea	rdx, QWORD PTR nm$[rsp]
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 55   : 	return tex_name;

	mov	QWORD PTR [rbp+24], 15
	mov	QWORD PTR [rbp+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rsi
	mov	rcx, rbp
	mov	BYTE PTR [rbp], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 56   : }

	lea	r11, QWORD PTR [rsp+1312]
	mov	rax, rbp
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?AppendFolderToName@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@HH@Z ENDP ; EFS_Utils::AppendFolderToName
_TEXT	ENDS
PUBLIC	?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z ; EFS_Utils::GetSaveName
pdata	SEGMENT
$pdata$?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z DD imagerel $LN17
	DD	imagerel $LN17+160
	DD	imagerel $unwind$?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z DD 091701H
	DD	04c6417H
	DD	04b5417H
	DD	04a3417H
	DD	0480117H
	DD	07010H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
buf$ = 48
this$ = 592
initial$ = 600
buffer$ = 608
offset$ = 616
start_flt_ext$ = 624
?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z PROC ; EFS_Utils::GetSaveName

; 27   : {

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 576				; 00000240H

; 28   : 	string_path				buf;
; 29   : 	strcpy_s				(buf,sizeof(buf), buffer.c_str());

	cmp	QWORD PTR [r8+24], 16
	mov	rdi, r9
	mov	rbx, r8
	mov	rsi, rdx
	mov	rbp, rcx
	jb	SHORT $LN9@GetSaveNam@2
	mov	r8, QWORD PTR [r8]
$LN9@GetSaveNam@2:
	lea	rcx, QWORD PTR buf$[rsp]
	mov	edx, 520				; 00000208H
	call	QWORD PTR __imp_strcpy_s

; 30   : 	bool bRes				= GetSaveName(initial,buf,offset,start_flt_ext);

	mov	edx, DWORD PTR start_flt_ext$[rsp]
	lea	r8, QWORD PTR buf$[rsp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, rdi
	mov	rcx, rbp
	mov	rdx, rsi
	call	?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAY0CAI@D0H@Z ; EFS_Utils::GetSaveName
	movzx	esi, al

; 31   : 	if (bRes) 

	test	al, al
	je	SHORT $LN16@GetSaveNam@2

; 32   : 		buffer				= buf;

	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR buf$[rsp]
	repne scasb
	lea	rdx, QWORD PTR buf$[rsp]
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN16@GetSaveNam@2:

; 33   : 
; 34   : 	return bRes;
; 35   : }

	lea	r11, QWORD PTR [rsp+576]
	movzx	eax, sil
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?GetSaveName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@0H@Z ENDP ; EFS_Utils::GetSaveName
_TEXT	ENDS
PUBLIC	?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z ; EFS_Utils::GetOpenName
pdata	SEGMENT
$pdata$?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z DD imagerel $LN19
	DD	imagerel $LN19+180
	DD	imagerel $unwind$?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z DD 071201H
	DD	04d6412H
	DD	04c3412H
	DD	04a0112H
	DD	0700bH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
buf$ = 64
this$ = 608
initial$ = 616
buffer$ = 624
bMulti$ = 632
offset$ = 640
start_flt_ext$ = 648
?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z PROC ; EFS_Utils::GetOpenName

; 15   : {

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 592				; 00000250H

; 16   : 	string_path		buf;
; 17   : 	strcpy			(buf,buffer.c_str());

	cmp	QWORD PTR [r8+24], 16
	mov	rbx, r8
	mov	rdi, rdx
	mov	r10, rcx
	jb	SHORT $LN9@GetOpenNam@2
	mov	rcx, QWORD PTR [r8]
	jmp	SHORT $LN10@GetOpenNam@2
$LN9@GetOpenNam@2:
	mov	rcx, rbx
$LN10@GetOpenNam@2:
	lea	rdx, QWORD PTR buf$[rsp]
	sub	rdx, rcx
$LL4@GetOpenNam@2:
	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR [rdx+rcx-1], al
	test	al, al
	jne	SHORT $LL4@GetOpenNam@2

; 18   : 	bool bRes		= GetOpenName(initial,buf,sizeof(buf),bMulti,offset,start_flt_ext);

	mov	eax, DWORD PTR start_flt_ext$[rsp]
	lea	r8, QWORD PTR buf$[rsp]
	mov	rdx, rdi
	mov	DWORD PTR [rsp+48], eax
	mov	rax, QWORD PTR offset$[rsp]
	mov	rcx, r10
	mov	QWORD PTR [rsp+40], rax
	mov	BYTE PTR [rsp+32], r9b
	mov	r9d, 520				; 00000208H
	call	?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAY0CAI@DH_N0H@Z ; EFS_Utils::GetOpenName
	movzx	esi, al

; 19   : 
; 20   : 	if (bRes) 

	test	al, al
	je	SHORT $LN18@GetOpenNam@2

; 21   : 		buffer=(char*)buf;

	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR buf$[rsp]
	repne scasb
	lea	rdx, QWORD PTR buf$[rsp]
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN18@GetOpenNam@2:

; 22   : 
; 23   : 	return bRes;
; 24   : }

	lea	r11, QWORD PTR [rsp+592]
	movzx	eax, sil
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rsp, r11
	pop	rdi
	ret	0
?GetOpenName@EFS_Utils@@QEAA_NPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_N0H@Z ENDP ; EFS_Utils::GetOpenName
PUBLIC	?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z		; EFS_Utils::MarkFile
pdata	SEGMENT
$pdata$?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z DD imagerel $LN112
	DD	imagerel $LN112+294
	DD	imagerel $unwind$?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z DD 081701H
	DD	0127417H
	DD	0116417H
	DD	0103417H
	DD	05010d217H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
backup_fn$ = 32
ext$ = 72
this$ = 128
fn$ = 136
bDeleteSource$ = 144
$T382613 = 152
$T382520 = 152
?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z PROC			; EFS_Utils::MarkFile

; 39   : {

$LN112:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112				; 00000070H
	mov	rsi, rdx

; 40   : 	xr_string ext = strext(fn);

	mov	edx, 46					; 0000002eH
	movzx	ebx, r8b
	mov	rcx, rsi
	call	QWORD PTR __imp_strrchr
	or	rcx, -1
	mov	QWORD PTR ext$[rbp-88], 15
	mov	rdx, rax
	xor	eax, eax
	mov	QWORD PTR ext$[rbp-96], 0
	mov	rdi, rdx
	mov	BYTE PTR ext$[rbp-112], 0
	repne scasb
	not	rcx
	lea	r8, QWORD PTR [rcx-1]
	lea	rcx, QWORD PTR ext$[rbp-112]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign

; 41   : 	ext.insert		(1,"~");

	lea	rcx, QWORD PTR ext$[rbp-112]
	mov	edx, 1
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@_KPEBD0@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::insert

; 42   : 	xr_string backup_fn = EFS.ChangeFileExt(fn,ext.c_str());

	cmp	QWORD PTR ext$[rbp-88], 16
	mov	rcx, QWORD PTR ?xr_EFS@@3PEAVEFS_Utils@@EA ; xr_EFS
	lea	r9, QWORD PTR ext$[rbp-112]
	lea	rdx, QWORD PTR backup_fn$[rbp-112]
	mov	r8, rsi
	cmovae	r9, QWORD PTR ext$[rbp-112]
	call	?ChangeFileExt@EFS_Utils@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEBD0@Z ; EFS_Utils::ChangeFileExt

; 43   : 	if (bDeleteSource){
; 44   : 		FS.file_rename(fn,backup_fn.c_str(),true);

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	r8, QWORD PTR backup_fn$[rbp-112]
	mov	rdx, rsi
	test	bl, bl
	je	SHORT $LN2@MarkFile
	cmp	QWORD PTR backup_fn$[rbp-88], 16
	mov	r9b, 1
	cmovae	r8, QWORD PTR backup_fn$[rbp-112]
	call	?file_rename@CLocatorAPI@@QEAAXPEBD0_N@Z ; CLocatorAPI::file_rename

; 45   : 	}else{

	jmp	SHORT $LN1@MarkFile
$LN2@MarkFile:

; 46   : 		FS.file_copy(fn,backup_fn.c_str());

	cmp	QWORD PTR backup_fn$[rbp-88], 16
	cmovae	r8, QWORD PTR backup_fn$[rbp-112]
	call	?file_copy@CLocatorAPI@@QEAAXPEBD0@Z	; CLocatorAPI::file_copy
$LN1@MarkFile:

; 47   : 	}
; 48   : }

	cmp	QWORD PTR backup_fn$[rbp-88], 16
	jb	SHORT $LN70@MarkFile
	mov	rax, QWORD PTR backup_fn$[rbp-112]
	mov	QWORD PTR $T382520[rbp-112], rax
	test	rax, rax
	je	SHORT $LN70@MarkFile
	lea	rcx, QWORD PTR $T382520[rbp-112]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN70@MarkFile:
	cmp	QWORD PTR ext$[rbp-88], 16
	mov	QWORD PTR backup_fn$[rbp-88], 15
	mov	QWORD PTR backup_fn$[rbp-96], 0
	mov	BYTE PTR backup_fn$[rbp-112], 0
	jb	SHORT $LN97@MarkFile
	mov	rax, QWORD PTR ext$[rbp-112]
	mov	QWORD PTR $T382613[rbp-112], rax
	test	rax, rax
	je	SHORT $LN97@MarkFile
	lea	rcx, QWORD PTR $T382613[rbp-112]
	call	??$xr_free@D@@YAXAEAPEAD@Z		; xr_free<char>
$LN97@MarkFile:
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rbp
	ret	0
?MarkFile@EFS_Utils@@QEAAXPEBD_N@Z ENDP			; EFS_Utils::MarkFile
END
