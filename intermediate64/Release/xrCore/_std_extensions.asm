; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
EXTRN	__imp__strtime:PROC
EXTRN	__imp__strdate:PROC
EXTRN	__imp__tzset:PROC
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
PUBLIC	?timestamp@@YAPEADAEAY0EA@D@Z			; timestamp
pdata	SEGMENT
$pdata$?timestamp@@YAPEADAEAY0EA@D@Z DD imagerel $LN35
	DD	imagerel $LN35+317
	DD	imagerel $unwind$?timestamp@@YAPEADAEAY0EA@D@Z
xdata	SEGMENT
$unwind$?timestamp@@YAPEADAEAY0EA@D@Z DD 081401H
	DD	0106414H
	DD	0f5414H
	DD	0e3414H
	DD	07010b214H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
_TEXT	SEGMENT
temp$ = 32
dest$ = 112
?timestamp@@YAPEADAEAY0EA@D@Z PROC			; timestamp

; 18   : {

$LN35:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rbp, rcx

; 19   : 	string64	temp;
; 20   : 
; 21   : 	/* Set time zone from TZ environment variable. If TZ is not set,
; 22   : 	* the operating system is queried to obtain the default value 
; 23   : 	* for the variable. 
; 24   : 	*/
; 25   : 	_tzset		();

	call	QWORD PTR __imp__tzset

; 26   : 	u32			it;
; 27   : 
; 28   : 	// date
; 29   : 	_strdate	( temp );

	lea	rcx, QWORD PTR temp$[rsp]
	call	QWORD PTR __imp__strdate

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	xor	edi, edi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	lea	rcx, QWORD PTR temp$[rsp]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	mov	edx, edi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	or	rax, -1
$LL33@timestamp:
	inc	rax
	cmp	BYTE PTR [rcx+rax], dl
	jne	SHORT $LL33@timestamp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	test	eax, eax
	je	SHORT $LN6@timestamp
$LL8@timestamp:

; 31   : 		if ('/'==temp[it]) temp[it]='-';

	mov	eax, edx
	cmp	BYTE PTR temp$[rsp+rax], 47		; 0000002fH
	jne	SHORT $LN7@timestamp
	mov	BYTE PTR temp$[rsp+rax], 45		; 0000002dH
$LN7@timestamp:

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	inc	edx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	lea	rcx, QWORD PTR temp$[rsp]
	or	rax, -1
	npad	6
$LL32@timestamp:
	inc	rax
	cmp	BYTE PTR [rcx+rax], dil
	jne	SHORT $LL32@timestamp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	cmp	edx, eax
	jb	SHORT $LL8@timestamp
$LN6@timestamp:
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	lea	rax, QWORD PTR temp$[rsp]
	or	rsi, -1
$LL31@timestamp:
	inc	rsi
	cmp	BYTE PTR [rax+rsi], dil
	jne	SHORT $LL31@timestamp

; 173  : 	strcpy_s(dest,dest_sz,S1);

	mov	ebx, 64					; 00000040H
	lea	r8, QWORD PTR temp$[rsp]
	mov	rcx, rbp
	mov	edx, ebx
	call	QWORD PTR __imp_strcpy_s

; 174  : 	strcat_s(dest,dest_sz-l1,S2);

	sub	ebx, esi
	lea	r8, OFFSET FLAT:??_C@_01IDAFKMJL@_?$AA@
	mov	edx, ebx
	mov	rcx, rbp
	call	QWORD PTR __imp_strcat_s
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 35   : 	_strtime	( temp );

	lea	rcx, QWORD PTR temp$[rsp]
	call	QWORD PTR __imp__strtime
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	lea	rcx, QWORD PTR temp$[rsp]
	or	rax, -1
	npad	4
$LL30@timestamp:
	inc	rax
	cmp	BYTE PTR [rcx+rax], dil
	jne	SHORT $LL30@timestamp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 36   : 	for (it=0; it<xr_strlen(temp); it++)

	test	eax, eax
	je	SHORT $LN2@timestamp
	npad	3
$LL4@timestamp:

; 37   : 		if (':'==temp[it]) temp[it]='-';

	cmp	BYTE PTR temp$[rsp+rdi], 58		; 0000003aH
	jne	SHORT $LN3@timestamp
	mov	BYTE PTR temp$[rsp+rdi], 45		; 0000002dH
$LN3@timestamp:

; 36   : 	for (it=0; it<xr_strlen(temp); it++)

	inc	edi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.h

; 270  : {	return (u32)strlen(S);			}

	lea	rcx, QWORD PTR temp$[rsp]
	or	rax, -1
$LL29@timestamp:
	inc	rax
	cmp	BYTE PTR [rcx+rax], 0
	jne	SHORT $LL29@timestamp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp

; 36   : 	for (it=0; it<xr_strlen(temp); it++)

	cmp	edi, eax
	jb	SHORT $LL4@timestamp
$LN2@timestamp:

; 38   : 	strcat		( dest, temp);

	lea	rcx, QWORD PTR [rbp-1]
	npad	8
$LL27@timestamp:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL27@timestamp
	lea	r8, QWORD PTR temp$[rsp]
	xor	edx, edx
$LL28@timestamp:
	movzx	eax, BYTE PTR [r8+rdx]
	lea	rdx, QWORD PTR [rdx+1]
	mov	BYTE PTR [rcx+rdx-1], al
	test	al, al
	jne	SHORT $LL28@timestamp

; 39   : 	return dest;
; 40   : }

	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?timestamp@@YAPEADAEAY0EA@D@Z ENDP			; timestamp
_TEXT	ENDS
END
