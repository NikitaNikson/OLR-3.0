; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
EXTRN	__imp__strdate:PROC
EXTRN	__imp__strtime:PROC
EXTRN	__imp__tzset:PROC
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
PUBLIC	?timestamp@@YAPEADAEAY0EA@D@Z			; timestamp
pdata	SEGMENT
$pdata$?timestamp@@YAPEADAEAY0EA@D@Z DD imagerel $LN24
	DD	imagerel $LN24+349
	DD	imagerel $unwind$?timestamp@@YAPEADAEAY0EA@D@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?timestamp@@YAPEADAEAY0EA@D@Z DD 0a1a01H
	DD	011741aH
	DD	010641aH
	DD	0f541aH
	DD	0e341aH
	DD	0c016b21aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_std_extensions.cpp
xdata	ENDS
_TEXT	SEGMENT
temp$ = 32
dest$ = 112
?timestamp@@YAPEADAEAY0EA@D@Z PROC			; timestamp

; 18   : {

$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 96					; 00000060H
	mov	rbp, rcx

; 19   : 	string64	temp;
; 20   : 
; 21   : 	/* Set time zone from TZ environment variable. If TZ is not set,
; 22   : 	* the operating system is queried to obtain the default value 
; 23   : 	* for the variable. 
; 24   : 	*/
; 25   : 	_tzset		();

	call	QWORD PTR __imp__tzset

; 26   : 	u32			it;
; 27   : 
; 28   : 	// date
; 29   : 	_strdate	( temp );

	lea	rcx, QWORD PTR temp$[rsp]
	call	QWORD PTR __imp__strdate

; 30   : 	for (it=0; it<xr_strlen(temp); it++)

	or	rcx, -1
	xor	esi, esi
	xor	eax, eax
	lea	rdi, QWORD PTR temp$[rsp]
	mov	r8d, esi
	repne scasb
	lea	r12d, QWORD PTR [rsi+45]
	not	rcx
	dec	rcx
	test	ecx, ecx
	je	SHORT $LN6@timestamp

; 19   : 	string64	temp;
; 20   : 
; 21   : 	/* Set time zone from TZ environment variable. If TZ is not set,
; 22   : 	* the operating system is queried to obtain the default value 
; 23   : 	* for the variable. 
; 24   : 	*/
; 25   : 	_tzset		();

	lea	rdx, QWORD PTR temp$[rsp]
	npad	13
$LL8@timestamp:

; 31   : 		if ('/'==temp[it]) temp[it]='-';

	movzx	eax, BYTE PTR [rdx]
	cmp	BYTE PTR [rdx], 47			; 0000002fH
	lea	rdi, QWORD PTR temp$[rsp]
	cmove	eax, r12d
	or	rcx, -1
	inc	r8d
	mov	BYTE PTR [rdx], al
	xor	eax, eax
	inc	rdx
	repne scasb
	not	rcx
	dec	rcx
	cmp	r8d, ecx
	jb	SHORT $LL8@timestamp
$LN6@timestamp:

; 32   : 	strconcat	(sizeof(dest), dest, temp, "_" );

	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR temp$[rsp]
	repne scasb
	mov	edi, 64					; 00000040H
	lea	r8, QWORD PTR temp$[rsp]
	not	rcx
	mov	edx, edi
	lea	rbx, QWORD PTR [rcx-1]
	mov	rcx, rbp
	call	QWORD PTR __imp_strcpy_s
	sub	edi, ebx
	lea	r8, OFFSET FLAT:??_C@_01IDAFKMJL@_?$AA@
	mov	edx, edi
	mov	rcx, rbp
	call	QWORD PTR __imp_strcat_s

; 33   : 
; 34   : 	// time
; 35   : 	_strtime	( temp );

	lea	rcx, QWORD PTR temp$[rsp]
	call	QWORD PTR __imp__strtime

; 36   : 	for (it=0; it<xr_strlen(temp); it++)

	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR temp$[rsp]
	repne scasb
	not	rcx
	dec	rcx
	test	ecx, ecx
	je	SHORT $LN2@timestamp

; 32   : 	strconcat	(sizeof(dest), dest, temp, "_" );

	lea	rdx, QWORD PTR temp$[rsp]
	npad	2
$LL4@timestamp:

; 37   : 		if (':'==temp[it]) temp[it]='-';

	movzx	eax, BYTE PTR [rdx]
	cmp	BYTE PTR [rdx], 58			; 0000003aH
	lea	rdi, QWORD PTR temp$[rsp]
	cmove	eax, r12d
	or	rcx, -1
	inc	esi
	mov	BYTE PTR [rdx], al
	xor	eax, eax
	inc	rdx
	repne scasb
	not	rcx
	dec	rcx
	cmp	esi, ecx
	jb	SHORT $LL4@timestamp
$LN2@timestamp:

; 38   : 	strcat		( dest, temp);

	xor	eax, eax
	or	rcx, -1
	mov	rdi, rbp
	repne scasb
	xor	ecx, ecx
	lea	rdx, QWORD PTR temp$[rsp]
	npad	6
$LL23@timestamp:
	movzx	eax, BYTE PTR [rdx+rcx]
	inc	rcx
	mov	BYTE PTR [rdi+rcx-2], al
	test	al, al
	jne	SHORT $LL23@timestamp

; 39   : 	return dest;
; 40   : }

	lea	r11, QWORD PTR [rsp+96]
	mov	rax, rbp
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rdi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r12
	ret	0
?timestamp@@YAPEADAEAY0EA@D@Z ENDP			; timestamp
END
