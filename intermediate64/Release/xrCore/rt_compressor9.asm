; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@	; `string'
PUBLIC	??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@		; `string'
PUBLIC	??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@	; `string'
PUBLIC	??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@ ; `string'
PUBLIC	??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@ ; `string'
PUBLIC	?rtc9_wrkmem@@3PATlzo_align_t@@A		; rtc9_wrkmem
;	COMDAT ?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA DB 01H DUP (?) ; `rtc9_initialize'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA
_BSS	SEGMENT
?initialized@?1??rtc9_initialize@@YAXXZ@4_NA DB 01H DUP (?) ; `rtc9_initialize'::`2'::initialized
_LZO_DictionarySize DD 01H DUP (?)
	ALIGN	8

_LZO_Dictionary DQ 01H DUP (?)
?rtc9_wrkmem@@3PATlzo_align_t@@A DQ 0e000H DUP (?)	; rtc9_wrkmem
_TLS	ENDS
;	COMDAT ??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@
CONST	SEGMENT
??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@ DB '"%s" not found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@
CONST	SEGMENT
??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@ DB 'using L'
	DB	'ZO-dictionary "%s"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@
CONST	SEGMENT
??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@ DB 'rt_compressor9.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@
CONST	SEGMENT
??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@ DB 'rtc9_initialize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@
CONST	SEGMENT
??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@ DB 'mp\lzo-dict.bin', 00H ; `string'
PUBLIC	?rtc9_decompress@@YAIPEAXIPEBXI@Z		; rtc9_decompress
PUBLIC	?rtc9_compress@@YAIPEAXIPEBXI@Z			; rtc9_compress
PUBLIC	?rtc9_csize@@YAII@Z				; rtc9_csize
PUBLIC	?rtc9_uninitialize@@YAXXZ			; rtc9_uninitialize
PUBLIC	?rtc9_initialize@@YAXXZ				; rtc9_initialize
pdata	SEGMENT
$pdata$?rtc9_decompress@@YAIPEAXIPEBXI@Z DD imagerel $LN10
	DD	imagerel $LN10+117
	DD	imagerel $unwind$?rtc9_decompress@@YAIPEAXIPEBXI@Z
$pdata$?rtc9_compress@@YAIPEAXIPEBXI@Z DD imagerel $LN22
	DD	imagerel $LN22+212
	DD	imagerel $unwind$?rtc9_compress@@YAIPEAXIPEBXI@Z
$pdata$?rtc9_uninitialize@@YAXXZ DD imagerel $LN11
	DD	imagerel $LN11+46
	DD	imagerel $unwind$?rtc9_uninitialize@@YAXXZ
$pdata$?rtc9_initialize@@YAXXZ DD imagerel $LN73
	DD	imagerel $LN73+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
$pdata$1$?rtc9_initialize@@YAXXZ DD imagerel $LN73+99
	DD	imagerel $LN73+453
	DD	imagerel $chain$1$?rtc9_initialize@@YAXXZ
$pdata$2$?rtc9_initialize@@YAXXZ DD imagerel $LN73+453
	DD	imagerel $LN73+485
	DD	imagerel $chain$2$?rtc9_initialize@@YAXXZ
xdata	SEGMENT
$unwind$?rtc9_decompress@@YAIPEAXIPEBXI@Z DD 060f01H
	DD	0c640fH
	DD	0a340fH
	DD	0700b720fH
$unwind$?rtc9_compress@@YAIPEAXIPEBXI@Z DD 060f01H
	DD	012640fH
	DD	010340fH
	DD	0700bd20fH
$unwind$?rtc9_uninitialize@@YAXXZ DD 010401H
	DD	04204H
$unwind$?rtc9_initialize@@YAXXZ DD 020701H
	DD	04d0107H
$chain$1$?rtc9_initialize@@YAXXZ DD 041021H
	DD	04c7410H
	DD	04e3408H
	DD	imagerel $LN73
	DD	imagerel $LN73+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
$chain$2$?rtc9_initialize@@YAXXZ DD 021H
	DD	imagerel $LN73
	DD	imagerel $LN73+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrdebugnew.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_flags.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_align.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_pool.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_pool.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
file_name$ = 80
?rtc9_initialize@@YAXXZ PROC				; rtc9_initialize

; 23   : {

$LN73:
	sub	rsp, 616				; 00000268H

; 24   :     static bool initialized = false;
; 25   : 
; 26   :     if( initialized )

	cmp	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 0
	jne	$LN11@rtc9_initi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp

; 1391 :     return get_path(initial)->_update(dest,src);

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	rdx, OFFSET FLAT:??_C@_0O@MGNGOECP@$game_config$?$AA@
	call	?get_path@CLocatorAPI@@QEAAPEAVFS_Path@@PEBD@Z ; CLocatorAPI::get_path
	lea	r8, OFFSET FLAT:??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@
	lea	rdx, QWORD PTR file_name$[rsp]
	mov	rcx, rax
	call	?_update@FS_Path@@QEBAPEBDAEAY0CAI@DPEBD@Z ; FS_Path::_update
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 35   : 	if( FS.exist(file_name)) 

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	rdx, QWORD PTR file_name$[rsp]
	call	?exist@CLocatorAPI@@QEAAPEBUfile@1@PEBD@Z ; CLocatorAPI::exist
	test	rax, rax
	je	$LN6@rtc9_initi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp

; 1181 : 	return					(r_open_impl<IReader>(path,_fname));

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	r8, QWORD PTR file_name$[rsp]
	xor	edx, edx
	mov	QWORD PTR [rsp+624], rbx
	mov	QWORD PTR [rsp+608], rdi
	call	??$r_open_impl@VIReader@@@CLocatorAPI@@AEAAPEAVIReader@@PEBD0@Z ; CLocatorAPI::r_open_impl<IReader>
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 39   : 		R_ASSERT(reader);

	cmp	BYTE PTR ?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA, 0
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp

; 1181 : 	return					(r_open_impl<IReader>(path,_fname));

	mov	rdi, rax
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 39   : 		R_ASSERT(reader);

	jne	SHORT $LN4@rtc9_initi
	test	rax, rax
	jne	SHORT $LN4@rtc9_initi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrdebugnew.cpp

; 452  : 	backend		("assertion failed",e1,0,0,file,line,function,ignore_always);

	lea	rax, OFFSET FLAT:?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA
	lea	r8, OFFSET FLAT:??_C@_06CFOFDHM@reader?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0BB@DBHFCHNO@assertion?5failed?$AA@
	mov	QWORD PTR [rsp+64], rax
	lea	rax, OFFSET FLAT:??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@
	mov	DWORD PTR [rsp+48], 39			; 00000027H
	mov	QWORD PTR [rsp+40], rax
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rdi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN4@rtc9_initi:
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 41   : 		_LZO_DictionarySize = reader->length();

	mov	eax, DWORD PTR [rdi+20]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h

; 110  : 	IC void*	xr_malloc	(size_t size)			{	return	Memory.mem_alloc(size);					}

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 42   : 		_LZO_Dictionary     = (u8*)xr_malloc(_LZO_DictionarySize);

	mov	edx, eax
	mov	DWORD PTR _LZO_DictionarySize, eax
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h

; 110  : 	IC void*	xr_malloc	(size_t size)			{	return	Memory.mem_alloc(size);					}

	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp

; 318  : 	CopyMemory		(p,pointer(),cnt);

	movsxd	rbx, DWORD PTR _LZO_DictionarySize
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h

; 110  : 	IC void*	xr_malloc	(size_t size)			{	return	Memory.mem_alloc(size);					}

	mov	QWORD PTR _LZO_Dictionary, rax
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h

; 265  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	movsxd	rdx, DWORD PTR [rdi+16]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp

; 318  : 	CopyMemory		(p,pointer(),cnt);

	mov	r8, rbx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h

; 265  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	add	rdx, QWORD PTR [rdi+8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.cpp

; 318  : 	CopyMemory		(p,pointer(),cnt);

	mov	rcx, rax
	call	memcpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\fs.h

; 266  : 	IC void			advance		(int cnt)		{	Pos+=cnt;VERIFY((Pos<=Size) && (Pos>=0));};

	add	DWORD PTR [rdi+16], ebx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_flags.h

; 25   : 	IC 	BOOL	test	(const T mask)						const	{ return BOOL(flags&mask);				}

	mov	rax, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	test	DWORD PTR [rax+112], 512		; 00000200H
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi.cpp

; 1186 : 	if( m_Flags.test(flDumpFileActivity) )

	je	SHORT $LN37@rtc9_initi

; 1187 : 		_unregister_open_file	(fs);

	mov	rcx, rdi
	call	??$_unregister_open_file@VIReader@@@@YAXPEAVIReader@@@Z ; _unregister_open_file<IReader>
$LN37@rtc9_initi:
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	rcx, rdi
	call	__RTCastToVoid

; 133  : 		ptr->~T			();

	mov	r8, QWORD PTR [rdi]
	xor	edx, edx
	mov	rcx, rdi
	mov	rbx, rax
	call	QWORD PTR [r8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.cpp

; 130  : 	stat_calls++;

	inc	DWORD PTR ?Memory@@3VxrMemory@@A

; 25   : ICF	u32		get_header			(void* P)	{	return	(u32)*acc_header(P);				}

	movzx	eax, BYTE PTR [rbx-1]

; 24   : ICF	u8*		acc_header			(void* P)	{	u8*		_P		= (u8*)P;	return	_P-1;	}

	lea	rdi, QWORD PTR [rbx-1]

; 131  : #ifdef USE_MEMORY_MONITOR
; 132  : 	memory_monitor::monitor_free(P);
; 133  : #endif // USE_MEMORY_MONITOR
; 134  : 
; 135  : #ifdef PURE_ALLOC
; 136  : 	if (g_use_pure_alloc) {
; 137  : 		free					(P);
; 138  : 		return;
; 139  : 	}
; 140  : #endif // PURE_ALLOC
; 141  : 
; 142  : #ifdef DEBUG_MEMORY_MANAGER
; 143  : 	if(g_globalCheckAddr==P)
; 144  : 		__asm int 3;
; 145  : #endif // DEBUG_MEMORY_MANAGER
; 146  : 
; 147  : #ifdef DEBUG_MEMORY_MANAGER
; 148  : 	if (mem_initialized)		debug_cs.Enter		();
; 149  : #endif // DEBUG_MEMORY_MANAGER
; 150  : 	if		(debug_mode)		dbg_unregister	(P);
; 151  : 	u32	pool					= get_header	(P);
; 152  : 	void* _real					= (void*)(((u8*)P)-1);
; 153  : 	if (mem_generic==pool)		

	cmp	eax, 55					; 00000037H
	jne	SHORT $LN49@rtc9_initi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_align.cpp

; 293  : 	if (memblock == NULL)

	test	rdi, rdi
	je	SHORT $LN70@rtc9_initi

; 294  : 		return;
; 295  : 
; 296  : 	ptr = (uintptr_t)memblock;
; 297  : 
; 298  : 	/* ptr points to the pointer to starting of the memory block */
; 299  : 	ptr = (ptr & ~(PTR_SZ -1)) - PTR_SZ;

	and	rdi, -8

; 300  : 
; 301  : 	/* ptr is the pointer to the start of memory block*/
; 302  : 	ptr = *((uintptr_t *)ptr);
; 303  : 	free((void *)ptr);

	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.cpp

; 157  : 	} else {

	jmp	SHORT $LN70@rtc9_initi
$LN49@rtc9_initi:

; 158  : 		// pooled
; 159  : 		VERIFY2					(pool<mem_pools_count,"Memory corruption");
; 160  : 		mem_pools[pool].destroy	(_real);

	lea	rcx, QWORD PTR [rax+rax*4]
	lea	rax, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	lea	rbx, QWORD PTR [rax+rcx*8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp

; 64   : 	EnterCriticalSection			( (CRITICAL_SECTION*)pmutex );

	mov	rcx, QWORD PTR [rax+rcx*8]
	call	QWORD PTR __imp_EnterCriticalSection
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_pool.h

; 46   : 		*access(P)		= list;

	mov	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR [rdi], rax
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp

; 69   : 	LeaveCriticalSection			( (CRITICAL_SECTION*)pmutex );

	mov	rcx, QWORD PTR [rbx]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_pool.h

; 47   : 		list			= (u8*)P;

	mov	QWORD PTR [rbx+32], rdi
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp

; 69   : 	LeaveCriticalSection			( (CRITICAL_SECTION*)pmutex );

	call	QWORD PTR __imp_LeaveCriticalSection
$LN70@rtc9_initi:
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 47   :         Msg( "using LZO-dictionary \"%s\"", file_name );

	lea	rdx, QWORD PTR file_name$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@
	call	?Msg@@YAXPEBDZZ				; Msg
	mov	rdi, QWORD PTR [rsp+608]
	mov	rbx, QWORD PTR [rsp+624]

; 52   : 	}
; 53   : 
; 54   : 	initialized = true;

	mov	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 1

; 55   : }

	add	rsp, 616				; 00000268H
	ret	0
$LN6@rtc9_initi:

; 48   : 	}
; 49   : 	else
; 50   : 	{
; 51   : 	    Msg( "\"%s\" not found", file_name );

	lea	rdx, QWORD PTR file_name$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@
	call	?Msg@@YAXPEBDZZ				; Msg

; 52   : 	}
; 53   : 
; 54   : 	initialized = true;

	mov	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 1
$LN11@rtc9_initi:

; 55   : }

	add	rsp, 616				; 00000268H
	ret	0
?rtc9_initialize@@YAXXZ ENDP				; rtc9_initialize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
?rtc9_uninitialize@@YAXXZ PROC				; rtc9_uninitialize

; 62   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 63   :     if( _LZO_Dictionary )

	cmp	QWORD PTR _LZO_Dictionary, 0
	je	SHORT $LN1@rtc9_unini

; 64   :     {
; 65   :         xr_free( _LZO_Dictionary );
; 66   :         
; 67   :         _LZO_Dictionary     = NULL;

	lea	rcx, OFFSET FLAT:_LZO_Dictionary
	call	??$xr_free@E@@YAXAEAPEAE@Z		; xr_free<unsigned char>
	xor	eax, eax
	mov	QWORD PTR _LZO_Dictionary, rax

; 68   :         _LZO_DictionarySize = 0;

	mov	DWORD PTR _LZO_DictionarySize, eax
$LN1@rtc9_unini:

; 69   :     }
; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
?rtc9_uninitialize@@YAXXZ ENDP				; rtc9_uninitialize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
in$ = 8
?rtc9_csize@@YAII@Z PROC				; rtc9_csize

; 78   :     VERIFY(in);
; 79   :     return in + in/64 + 16 + 3;

	mov	eax, ecx
	shr	eax, 6
	add	eax, 19
	add	eax, ecx

; 80   : }

	ret	0
?rtc9_csize@@YAII@Z ENDP				; rtc9_csize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
dst$ = 128
out_size$ = 136
dst_len$ = 136
src$ = 144
src_len$ = 152
?rtc9_compress@@YAIPEAXIPEBXI@Z PROC			; rtc9_compress

; 87   : {

$LN22:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	ebx, r9d
	mov	rdi, r8
	mov	rsi, rcx

; 88   :     u32 out_size = dst_len;    

	mov	DWORD PTR out_size$[rsp], edx

; 89   : 	int r        = LZO_E_ERROR;
; 90   : 
; 91   :     rtc9_initialize();

	call	?rtc9_initialize@@YAXXZ			; rtc9_initialize

; 93   : 	if( _LZO_Dictionary )

	mov	r11, QWORD PTR _LZO_Dictionary

; 98   :                                    );

	mov	eax, DWORD PTR _tls_index
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp

; 849  :                                        c[compression_level].flags);

	mov	DWORD PTR [rsp+104], 1
	mov	QWORD PTR [rsp+96], 2048		; 00000800H
	mov	QWORD PTR [rsp+80], 128			; 00000080H
	mov	QWORD PTR [rsp+72], 32			; 00000020H
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 98   :                                    );

	mov	r8d, OFFSET FLAT:?rtc9_wrkmem@@3PATlzo_align_t@@A ; rtc9_wrkmem
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp

; 849  :                                        c[compression_level].flags);

	lea	r9, QWORD PTR out_size$[rsp]
	mov	DWORD PTR [rsp+64], 2
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 93   : 	if( _LZO_Dictionary )

	test	r11, r11
	je	SHORT $LN5@rtc9_compr

; 98   :                                    );

	mov	r10d, DWORD PTR _LZO_DictionarySize
	mov	rdx, QWORD PTR gs:88
	add	r8, QWORD PTR [rdx+rax*8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp

; 849  :                                        c[compression_level].flags);

	mov	QWORD PTR [rsp+48], r10
	mov	QWORD PTR [rsp+40], r11
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 100  : 	else

	jmp	SHORT $LN20@rtc9_compr
$LN5@rtc9_compr:

; 105  : 		                      );

	mov	rcx, QWORD PTR gs:88
	add	r8, QWORD PTR [rcx+rax*8]
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp

; 849  :                                        c[compression_level].flags);

	xor	eax, eax
	mov	QWORD PTR [rsp+48], rax
	mov	QWORD PTR [rsp+40], rax
$LN20@rtc9_compr:
	mov	QWORD PTR [rsp+32], r8
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 105  : 		                      );

	mov	rdx, rbx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_lzo1x_9x.cpp

; 849  :                                        c[compression_level].flags);

	mov	rcx, rdi
	mov	r8, rsi
	call	lzo1x_999_compress_internal
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp

; 110  : 	return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 111  : }

	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?rtc9_compress@@YAIPEAXIPEBXI@Z ENDP			; rtc9_compress
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
dst$ = 80
out_size$ = 88
dst_len$ = 88
src$ = 96
src_len$ = 104
?rtc9_decompress@@YAIPEAXIPEBXI@Z PROC			; rtc9_decompress

; 118  : {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	ebx, r9d
	mov	rdi, r8
	mov	rsi, rcx

; 119  : 	u32	    out_size = dst_len;

	mov	DWORD PTR out_size$[rsp], edx

; 120  : 	int     r        = LZO_E_ERROR;
; 121  :     
; 122  :     rtc9_initialize();

	call	?rtc9_initialize@@YAXXZ			; rtc9_initialize

; 123  : 
; 124  :     if( _LZO_Dictionary )

	cmp	QWORD PTR _LZO_Dictionary, 0

; 125  :     {
; 126  :         r = lzo1x_decompress_dict_safe( (const lzo_byte*)src, (lzo_uint)src_len, 
; 127  :                                         (lzo_byte*)dst, (lzo_uintp)&out_size,
; 128  :                                         NULL, _LZO_Dictionary, _LZO_DictionarySize
; 129  :                                       );

	mov	edx, ebx
	lea	r9, QWORD PTR out_size$[rsp]
	mov	r8, rsi
	mov	rcx, rdi
	je	SHORT $LN5@rtc9_decom
	mov	eax, DWORD PTR _LZO_DictionarySize
	mov	QWORD PTR [rsp+48], rax
	call	lzo1x_decompress_dict_safe

; 137  :     }
; 138  : 
; 139  :     VERIFY(r==LZO_E_OK);
; 140  : 
; 141  :     return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 142  : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN5@rtc9_decom:

; 130  :     }
; 131  :     else
; 132  :     {
; 133  : 	    r = lzo1x_decompress( (const lzo_byte*)src, (lzo_uint)src_len,
; 134  :                               (lzo_byte*)dst, (lzo_uintp)&out_size,
; 135  : 		                      NULL
; 136  : 		                    );

	call	lzo1x_decompress

; 137  :     }
; 138  : 
; 139  :     VERIFY(r==LZO_E_OK);
; 140  : 
; 141  :     return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 142  : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?rtc9_decompress@@YAIPEAXIPEBXI@Z ENDP			; rtc9_decompress
_TEXT	ENDS
END
