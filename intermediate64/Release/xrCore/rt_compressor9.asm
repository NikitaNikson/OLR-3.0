; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?rtc9_wrkmem@@3PATlzo_align_t@@A		; rtc9_wrkmem
PUBLIC	??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@	; `string'
PUBLIC	??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@		; `string'
PUBLIC	??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@	; `string'
PUBLIC	??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@ ; `string'
PUBLIC	??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@ ; `string'
?rtc9_wrkmem@@3PATlzo_align_t@@A DQ 0e000H DUP (?)	; rtc9_wrkmem
_LZO_Dictionary DQ 01H DUP (?)
_LZO_DictionarySize DD 01H DUP (?)
;	COMDAT ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA
_BSS	SEGMENT
?initialized@?1??rtc9_initialize@@YAXXZ@4_NA DB 01H DUP (?) ; `rtc9_initialize'::`2'::initialized
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA DB 01H DUP (?) ; `rtc9_initialize'::`11'::ignore_always
;	COMDAT ??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@
CONST	SEGMENT
??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@ DB '"%s" not found', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@
CONST	SEGMENT
??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@ DB 'using L'
	DB	'ZO-dictionary "%s"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@
CONST	SEGMENT
??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@ DB 'rt_compressor9.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@
CONST	SEGMENT
??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@ DB 'rtc9_initialize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@
CONST	SEGMENT
??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@ DB 'mp\lzo-dict.bin', 00H ; `string'
PUBLIC	?rtc9_csize@@YAII@Z				; rtc9_csize
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\rt_compressor9.cpp
_TEXT	SEGMENT
in$ = 8
?rtc9_csize@@YAII@Z PROC				; rtc9_csize

; 78   :     VERIFY(in);
; 79   :     return in + in/64 + 16 + 3;

	mov	eax, ecx
	shr	eax, 6
	lea	eax, DWORD PTR [rax+rcx+19]

; 80   : }

	ret	0
?rtc9_csize@@YAII@Z ENDP				; rtc9_csize
PUBLIC	?rtc9_uninitialize@@YAXXZ			; rtc9_uninitialize
pdata	SEGMENT
$pdata$?rtc9_uninitialize@@YAXXZ DD imagerel $LN10
	DD	imagerel $LN10+48
	DD	imagerel $unwind$?rtc9_uninitialize@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?rtc9_uninitialize@@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
?rtc9_uninitialize@@YAXXZ PROC				; rtc9_uninitialize

; 62   : {

$LN10:
	sub	rsp, 40					; 00000028H

; 63   :     if( _LZO_Dictionary )

	cmp	QWORD PTR _LZO_Dictionary, 0
	je	SHORT $LN1@rtc9_unini

; 64   :     {
; 65   :         xr_free( _LZO_Dictionary );

	lea	rcx, OFFSET FLAT:_LZO_Dictionary
	call	??$xr_free@E@@YAXAEAPEAE@Z		; xr_free<unsigned char>

; 66   :         
; 67   :         _LZO_Dictionary     = NULL;

	xor	r11d, r11d
	mov	QWORD PTR _LZO_Dictionary, r11

; 68   :         _LZO_DictionarySize = 0;

	mov	DWORD PTR _LZO_DictionarySize, r11d
$LN1@rtc9_unini:

; 69   :     }
; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
?rtc9_uninitialize@@YAXXZ ENDP				; rtc9_uninitialize
PUBLIC	?rtc9_initialize@@YAXXZ				; rtc9_initialize
pdata	SEGMENT
$pdata$?rtc9_initialize@@YAXXZ DD imagerel $LN72
	DD	imagerel $LN72+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
$pdata$1$?rtc9_initialize@@YAXXZ DD imagerel $LN72+99
	DD	imagerel $LN72+367
	DD	imagerel $chain$1$?rtc9_initialize@@YAXXZ
$pdata$2$?rtc9_initialize@@YAXXZ DD imagerel $LN72+367
	DD	imagerel $LN72+423
	DD	imagerel $chain$2$?rtc9_initialize@@YAXXZ
$pdata$3$?rtc9_initialize@@YAXXZ DD imagerel $LN72+423
	DD	imagerel $LN72+471
	DD	imagerel $chain$3$?rtc9_initialize@@YAXXZ
$pdata$4$?rtc9_initialize@@YAXXZ DD imagerel $LN72+471
	DD	imagerel $LN72+503
	DD	imagerel $chain$4$?rtc9_initialize@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?rtc9_initialize@@YAXXZ DD 020701H
	DD	04d0107H
$chain$1$?rtc9_initialize@@YAXXZ DD 041021H
	DD	04c7410H
	DD	04e3408H
	DD	imagerel $LN72
	DD	imagerel $LN72+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
$chain$2$?rtc9_initialize@@YAXXZ DD 020821H
	DD	04f6408H
	DD	imagerel $LN72+99
	DD	imagerel $LN72+367
	DD	imagerel $chain$1$?rtc9_initialize@@YAXXZ
$chain$3$?rtc9_initialize@@YAXXZ DD 021H
	DD	imagerel $LN72+99
	DD	imagerel $LN72+367
	DD	imagerel $chain$1$?rtc9_initialize@@YAXXZ
$chain$4$?rtc9_initialize@@YAXXZ DD 021H
	DD	imagerel $LN72
	DD	imagerel $LN72+99
	DD	imagerel $unwind$?rtc9_initialize@@YAXXZ
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
file_name$ = 80
?rtc9_initialize@@YAXXZ PROC				; rtc9_initialize

; 23   : {

$LN72:
	sub	rsp, 616				; 00000268H

; 24   :     static bool initialized = false;
; 25   : 
; 26   :     if( initialized )

	cmp	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 0
	jne	$LN11@rtc9_initi

; 27   :         return;
; 28   : 
; 29   :     VERIFY(lzo_init()==LZO_E_OK);
; 30   : 	
; 31   : 	string_path     file_name;
; 32   : 
; 33   : 	FS.update_path( file_name, "$game_config$","mp\\lzo-dict.bin" );

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	rdx, OFFSET FLAT:??_C@_0O@MGNGOECP@$game_config$?$AA@
	call	?get_path@CLocatorAPI@@QEAAPEAVFS_Path@@PEBD@Z ; CLocatorAPI::get_path
	lea	r8, OFFSET FLAT:??_C@_0BA@LMDGHBDK@mp?2lzo?9dict?4bin?$AA@
	lea	rdx, QWORD PTR file_name$[rsp]
	mov	rcx, rax
	call	?_update@FS_Path@@QEBAPEBDAEAY0CAI@DPEBD@Z ; FS_Path::_update

; 34   : 
; 35   : 	if( FS.exist(file_name)) 

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	rdx, QWORD PTR file_name$[rsp]
	call	?exist@CLocatorAPI@@QEAAPEBUfile@1@PEBD@Z ; CLocatorAPI::exist
	test	rax, rax
	je	$LN6@rtc9_initi

; 36   : 	{
; 37   : 		IReader*    reader = FS.r_open( file_name );

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	lea	r8, QWORD PTR file_name$[rsp]
	xor	edx, edx
	mov	QWORD PTR [rsp+624], rbx
	mov	QWORD PTR [rsp+608], rdi
	call	??$r_open_impl@VIReader@@@CLocatorAPI@@AEAAPEAVIReader@@PEBD0@Z ; CLocatorAPI::r_open_impl<IReader>

; 38   : 		
; 39   : 		R_ASSERT(reader);

	cmp	BYTE PTR ?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA, 0
	mov	rdi, rax
	jne	SHORT $LN4@rtc9_initi
	test	rax, rax
	jne	SHORT $LN4@rtc9_initi
	lea	rax, OFFSET FLAT:?ignore_always@?L@??rtc9_initialize@@YAXXZ@4_NA
	lea	r8, OFFSET FLAT:??_C@_06CFOFDHM@reader?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0BB@DBHFCHNO@assertion?5failed?$AA@
	mov	QWORD PTR [rsp+64], rax
	lea	rax, OFFSET FLAT:??_C@_0BA@EDPGKENE@rtc9_initialize?$AA@
	lea	rcx, OFFSET FLAT:?Debug@@3VxrDebug@@A	; Debug
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:??_C@_0BD@KAHDDIHM@rt_compressor9?4cpp?$AA@
	mov	DWORD PTR [rsp+48], 39			; 00000027H
	mov	QWORD PTR [rsp+40], rax
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rdi
	call	?backend@xrDebug@@QEAAXPEBD0000H0AEA_N@Z ; xrDebug::backend
$LN4@rtc9_initi:

; 40   : 		
; 41   : 		_LZO_DictionarySize = reader->length();

	mov	eax, DWORD PTR [rdi+20]

; 42   : 		_LZO_Dictionary     = (u8*)xr_malloc(_LZO_DictionarySize);

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, eax
	mov	DWORD PTR _LZO_DictionarySize, eax
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 43   : 		
; 44   : 		reader->r( _LZO_Dictionary, _LZO_DictionarySize );

	movsxd	rbx, DWORD PTR _LZO_DictionarySize
	mov	QWORD PTR _LZO_Dictionary, rax
	movsxd	rdx, DWORD PTR [rdi+16]
	mov	r8, rbx
	add	rdx, QWORD PTR [rdi+8]
	mov	rcx, rax
	call	memcpy
	add	DWORD PTR [rdi+16], ebx

; 45   : 		FS.r_close( reader );

	mov	rax, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	test	DWORD PTR [rax+160], 512		; 00000200H
	je	SHORT $LN37@rtc9_initi
	mov	rcx, rdi
	call	??$_unregister_open_file@VIReader@@@@YAXPEAVIReader@@@Z ; _unregister_open_file<IReader>
$LN37@rtc9_initi:
	mov	rcx, rdi
	call	__RTCastToVoid
	mov	r8, QWORD PTR [rdi]
	xor	edx, edx
	mov	rcx, rdi
	mov	rbx, rax
	call	QWORD PTR [r8]
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rbx-1]
	lea	rdi, QWORD PTR [rbx-1]
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN49@rtc9_initi
	test	rdi, rdi
	je	SHORT $LN70@rtc9_initi
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN70@rtc9_initi
$LN49@rtc9_initi:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+632], rsi
	lea	rsi, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rsi+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rsi+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rsi+rbx*8]
	mov	QWORD PTR [rsi+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rsi, QWORD PTR [rsp+632]
$LN70@rtc9_initi:

; 46   : 
; 47   :         Msg( "using LZO-dictionary \"%s\"", file_name );

	lea	rdx, QWORD PTR file_name$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BK@JCBDHBEO@using?5LZO?9dictionary?5?$CC?$CFs?$CC?$AA@
	call	?Msg@@YAXPEBDZZ				; Msg
	mov	rdi, QWORD PTR [rsp+608]
	mov	rbx, QWORD PTR [rsp+624]

; 52   : 	}
; 53   : 
; 54   : 	initialized = true;

	mov	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 1

; 55   : }

	add	rsp, 616				; 00000268H
	ret	0
$LN6@rtc9_initi:

; 48   : 	}
; 49   : 	else
; 50   : 	{
; 51   : 	    Msg( "\"%s\" not found", file_name );

	lea	rdx, QWORD PTR file_name$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0P@EFKFHHOE@?$CC?$CFs?$CC?5not?5found?$AA@
	call	?Msg@@YAXPEBDZZ				; Msg

; 52   : 	}
; 53   : 
; 54   : 	initialized = true;

	mov	BYTE PTR ?initialized@?1??rtc9_initialize@@YAXXZ@4_NA, 1
$LN11@rtc9_initi:

; 55   : }

	add	rsp, 616				; 00000268H
	ret	0
?rtc9_initialize@@YAXXZ ENDP				; rtc9_initialize
PUBLIC	?rtc9_decompress@@YAIPEAXIPEBXI@Z		; rtc9_decompress
pdata	SEGMENT
$pdata$?rtc9_decompress@@YAIPEAXIPEBXI@Z DD imagerel $LN9
	DD	imagerel $LN9+117
	DD	imagerel $unwind$?rtc9_decompress@@YAIPEAXIPEBXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?rtc9_decompress@@YAIPEAXIPEBXI@Z DD 060f01H
	DD	0a640fH
	DD	08340fH
	DD	0700b520fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
dst$ = 64
out_size$ = 72
dst_len$ = 72
src$ = 80
src_len$ = 88
?rtc9_decompress@@YAIPEAXIPEBXI@Z PROC			; rtc9_decompress

; 118  : {

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	ebx, r9d
	mov	rdi, r8
	mov	rsi, rcx

; 119  : 	u32	    out_size = dst_len;

	mov	DWORD PTR out_size$[rsp], edx

; 120  : 	int     r        = LZO_E_ERROR;
; 121  :     
; 122  :     rtc9_initialize();

	call	?rtc9_initialize@@YAXXZ			; rtc9_initialize

; 123  : 
; 124  :     if( _LZO_Dictionary )

	cmp	QWORD PTR _LZO_Dictionary, 0

; 125  :     {
; 126  :         r = lzo1x_decompress_dict_safe( (const lzo_byte*)src, (lzo_uint)src_len, 
; 127  :                                         (lzo_byte*)dst, (lzo_uintp)&out_size,
; 128  :                                         NULL, _LZO_Dictionary, _LZO_DictionarySize
; 129  :                                       );

	mov	edx, ebx
	lea	r9, QWORD PTR out_size$[rsp]
	mov	r8, rsi
	mov	rcx, rdi
	je	SHORT $LN5@rtc9_decom
	mov	eax, DWORD PTR _LZO_DictionarySize
	mov	QWORD PTR [rsp+32], rax
	call	lzo1x_decompress_dict_safe

; 137  :     }
; 138  : 
; 139  :     VERIFY(r==LZO_E_OK);
; 140  : 
; 141  :     return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 142  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN5@rtc9_decom:

; 130  :     }
; 131  :     else
; 132  :     {
; 133  : 	    r = lzo1x_decompress( (const lzo_byte*)src, (lzo_uint)src_len,
; 134  :                               (lzo_byte*)dst, (lzo_uintp)&out_size,
; 135  : 		                      NULL
; 136  : 		                    );

	call	lzo1x_decompress

; 137  :     }
; 138  : 
; 139  :     VERIFY(r==LZO_E_OK);
; 140  : 
; 141  :     return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 142  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?rtc9_decompress@@YAIPEAXIPEBXI@Z ENDP			; rtc9_decompress
_TEXT	ENDS
PUBLIC	?rtc9_compress@@YAIPEAXIPEBXI@Z			; rtc9_compress
pdata	SEGMENT
$pdata$?rtc9_compress@@YAIPEAXIPEBXI@Z DD imagerel $LN23
	DD	imagerel $LN23+204
	DD	imagerel $unwind$?rtc9_compress@@YAIPEAXIPEBXI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?rtc9_compress@@YAIPEAXIPEBXI@Z DD 060f01H
	DD	010640fH
	DD	0e340fH
	DD	0700bb20fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
dst$ = 112
out_size$ = 120
dst_len$ = 120
src$ = 128
src_len$ = 136
?rtc9_compress@@YAIPEAXIPEBXI@Z PROC			; rtc9_compress

; 87   : {

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	ebx, r9d
	mov	rdi, r8
	mov	rsi, rcx

; 88   :     u32 out_size = dst_len;    

	mov	DWORD PTR out_size$[rsp], edx

; 89   : 	int r        = LZO_E_ERROR;
; 90   : 
; 91   :     rtc9_initialize();

	call	?rtc9_initialize@@YAXXZ			; rtc9_initialize

; 92   : 
; 93   : 	if( _LZO_Dictionary )

	mov	r11, QWORD PTR _LZO_Dictionary

; 94   : 	{
; 95   :         r = lzo1x_999_compress_dict( (const lzo_byte *)src, (lzo_uint)src_len, 
; 96   :                                      (lzo_byte *)dst, (lzo_uintp)&out_size, 
; 97   :                                      rtc9_wrkmem, _LZO_Dictionary, _LZO_DictionarySize
; 98   :                                    );

	mov	eax, DWORD PTR _tls_index
	mov	DWORD PTR [rsp+88], 1
	mov	QWORD PTR [rsp+80], 2048		; 00000800H
	mov	QWORD PTR [rsp+72], 128			; 00000080H
	mov	QWORD PTR [rsp+64], 32			; 00000020H
	mov	r8d, OFFSET FLAT:?rtc9_wrkmem@@3PATlzo_align_t@@A ; rtc9_wrkmem
	lea	r9, QWORD PTR out_size$[rsp]
	mov	DWORD PTR [rsp+56], 2
	test	r11, r11
	je	SHORT $LN5@rtc9_compr
	mov	r10d, DWORD PTR _LZO_DictionarySize
	mov	rdx, QWORD PTR gs:88
	add	r8, QWORD PTR [rdx+rax*8]
	mov	QWORD PTR [rsp+48], r10
	mov	QWORD PTR [rsp+40], r11

; 99   : 	}
; 100  : 	else

	jmp	SHORT $LN22@rtc9_compr
$LN5@rtc9_compr:

; 101  : 	{
; 102  : 	    r = lzo1x_999_compress( (const lzo_byte *)src, (lzo_uint)src_len, 
; 103  : 		                        (lzo_byte *)dst, (lzo_uintp) &out_size, 
; 104  : 		                        rtc9_wrkmem
; 105  : 		                      );

	mov	rcx, QWORD PTR gs:88
	add	r8, QWORD PTR [rcx+rax*8]
	xor	eax, eax
	mov	QWORD PTR [rsp+48], rax
	mov	QWORD PTR [rsp+40], rax
$LN22@rtc9_compr:
	mov	QWORD PTR [rsp+32], r8
	mov	rdx, rbx
	mov	rcx, rdi
	mov	r8, rsi
	call	lzo1x_999_compress_internal

; 106  :     }
; 107  :     
; 108  : 	VERIFY(r==LZO_E_OK);
; 109  : 	
; 110  : 	return	out_size;

	mov	eax, DWORD PTR out_size$[rsp]

; 111  : }

	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?rtc9_compress@@YAIPEAXIPEBXI@Z ENDP			; rtc9_compress
END
