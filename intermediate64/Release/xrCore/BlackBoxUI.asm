; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?g_stackTrace@@3PAY0BAAA@DA			; g_stackTrace
PUBLIC	?g_stackTraceCount@@3HA				; g_stackTraceCount
PUBLIC	??_C@_03LDBKEDPP@?3?$AN?6?$AA@			; `string'
EXTRN	__imp_lstrcpyA:PROC
EXTRN	__imp_GetCurrentThread:PROC
EXTRN	__imp_GetThreadContext:PROC
EXTRN	__imp_OutputDebugStringA:PROC
?g_stackTrace@@3PAY0BAAA@DA DB 064000H DUP (?)		; g_stackTrace
?g_stackTraceCount@@3HA DD 01H DUP (?)			; g_stackTraceCount
;	COMDAT ??_C@_03LDBKEDPP@?3?$AN?6?$AA@
CONST	SEGMENT
??_C@_03LDBKEDPP@?3?$AN?6?$AA@ DB ':', 0dH, 0aH, 00H	; `string'
PI_MUL_2 DD	040c90fdbr			; 6.28319
PUBLIC	__$ReturnAddr$
PUBLIC	?program_counter@@YA_KXZ			; program_counter
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\blackbox\blackboxui.cpp
_TEXT	SEGMENT
__$ReturnAddr$ = 0
?program_counter@@YA_KXZ PROC				; program_counter

; 68   : 		return (DWORD_PTR)_ReturnAddress();

	mov	rax, QWORD PTR __$ReturnAddr$[rsp]

; 69   : 	}

	ret	0
?program_counter@@YA_KXZ ENDP				; program_counter
PUBLIC	?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z ; BuildStackTrace
pdata	SEGMENT
$pdata$?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z DD imagerel $LN11
	DD	imagerel $LN11+230
	DD	imagerel $unwind$?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z DD 083e01H
	DD	06743eH
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
g_BlackBoxUIExPtrs$ = 48
?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z PROC	; BuildStackTrace

; 13   : {

$LN11:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx

; 14   : 	FillMemory(g_stackTrace[0], MAX_STACK_TRACE * LINE_STACK_TRACE, 0);

	lea	rbp, OFFSET FLAT:?g_stackTrace@@3PAY0BAAA@DA ; g_stackTrace
	xor	edx, edx
	mov	rcx, rbp
	mov	r8d, 409600				; 00064000H
	call	QWORD PTR ?Memory@@3VxrMemory@@A+16

; 15   : 
; 16   : 	const TCHAR* traceDump = 
; 17   : 		GetFirstStackTraceString( GSTSO_MODULE | GSTSO_SYMBOL | GSTSO_SRCLINE | GSTSO_PARAMS,
; 18   : 									g_BlackBoxUIExPtrs );

	mov	rdx, rsi
	mov	ecx, 15
	call	GetFirstStackTraceString

; 19   : 	g_stackTraceCount = 0;

	xor	ebx, ebx
	mov	QWORD PTR [rsp+48], rdi
	mov	rdx, rax
	mov	DWORD PTR ?g_stackTraceCount@@3HA, ebx	; g_stackTraceCount
$LL4@BuildStack:

; 20   : 
; 21   : 	int incr = 85;
; 22   : 	
; 23   : 	while (g_stackTraceCount < MAX_STACK_TRACE && traceDump) {

	test	rdx, rdx
	je	$LN3@BuildStack

; 24   : 	
; 25   : 		int				length = strlen(traceDump);

	or	rcx, -1
	xor	eax, eax
	mov	rdi, rdx
	repne scasb
	not	rcx
	dec	rcx

; 26   : 		if (length < 4096)

	cmp	ecx, 4096				; 00001000H
	jge	SHORT $LN2@BuildStack

; 27   : 			lstrcpy(g_stackTrace[g_stackTraceCount], traceDump);

	movsxd	rcx, ebx
	shl	rcx, 12
	add	rcx, rbp
	call	QWORD PTR __imp_lstrcpyA

; 28   : 		else {

	mov	ebx, DWORD PTR ?g_stackTraceCount@@3HA	; g_stackTraceCount
	jmp	SHORT $LN1@BuildStack
$LN2@BuildStack:

; 29   : 			memcpy(g_stackTrace[g_stackTraceCount], traceDump, 4092);

	movsxd	rdi, ebx
	mov	r8d, 4092				; 00000ffcH
	shl	rdi, 12
	lea	rcx, QWORD PTR [rdi+rbp]
	call	memcpy

; 30   : 			char		*i = g_stackTrace[g_stackTraceCount] + 4092;

	lea	rax, QWORD PTR [rdi+rbp+4092]

; 31   : 			*i++ = '.';

	mov	WORD PTR [rax], 11822			; 00002e2eH

; 32   : 			*i++ = '.';
; 33   : 			*i++ = '.';

	mov	WORD PTR [rax+2], 46			; 0000002eH
$LN1@BuildStack:

; 34   : 			*i = 0;
; 35   : 		}
; 36   : 
; 37   : 		g_stackTraceCount++;

	inc	ebx

; 38   : 	
; 39   : 		incr += 2;
; 40   : 		traceDump = GetNextStackTraceString( GSTSO_MODULE | GSTSO_SYMBOL | GSTSO_SRCLINE | GSTSO_PARAMS,
; 41   : 			g_BlackBoxUIExPtrs );

	mov	rdx, rsi
	mov	ecx, 15
	mov	DWORD PTR ?g_stackTraceCount@@3HA, ebx	; g_stackTraceCount
	call	GetNextStackTraceString
	mov	ebx, DWORD PTR ?g_stackTraceCount@@3HA	; g_stackTraceCount
	mov	rdx, rax
	cmp	ebx, 100				; 00000064H
	jl	$LL4@BuildStack
$LN3@BuildStack:
	mov	rdi, QWORD PTR [rsp+48]

; 42   : 	}
; 43   : 		
; 44   : }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z ENDP	; BuildStackTrace
PUBLIC	?BuildStackTrace@@YAPEBDXZ			; BuildStackTrace
pdata	SEGMENT
$pdata$?BuildStackTrace@@YAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?BuildStackTrace@@YAPEBDXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?BuildStackTrace@@YAPEBDXZ DD 020701H
	DD	0a10107H
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
ex_ptrs$ = 32
context$ = 48
?BuildStackTrace@@YAPEBDXZ PROC				; BuildStackTrace

; 75   : {	

$LN4:
	sub	rsp, 1288				; 00000508H

; 76   :     CONTEXT					context;
; 77   : 	context.ContextFlags	= CONTEXT_FULL;

	mov	DWORD PTR context$[rsp+48], 1048587	; 0010000bH

; 78   : 
; 79   : #ifdef _EDITOR
; 80   :     DWORD                   *EBP = &context.Ebp;
; 81   :     DWORD                   *ESP = &context.Esp;
; 82   : #endif // _EDITOR
; 83   : 
; 84   : 	if (!GetThreadContext(GetCurrentThread(),&context))

	call	QWORD PTR __imp_GetCurrentThread
	lea	rdx, QWORD PTR context$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_GetThreadContext
	test	eax, eax
	jne	SHORT $LN1@BuildStack@2

; 85   : 		return NULL;

	xor	eax, eax

; 112  : }

	add	rsp, 1288				; 00000508H
	ret	0
$LN1@BuildStack@2:

; 86   : 
; 87   : #ifdef _WIN64
; 88   : 	context.Rip				= program_counter();

	call	?program_counter@@YA_KXZ		; program_counter

; 89   : #else
; 90   : 	context.Eip				= program_counter();
; 91   : #endif
; 92   : #ifndef _EDITOR
; 93   : #	ifdef _WIN64
; 94   : //	__asm					mov context.Rbp, ebp
; 95   : //	__asm					mov context.Rsp, esp
; 96   : #	else
; 97   : 	__asm					mov context.Ebp, ebp
; 98   : 	__asm					mov context.Esp, esp
; 99   : #	endif
; 100  : #else // _EDITOR
; 101  : 	__asm					mov EBP, ebp
; 102  : 	__asm					mov ESP, esp
; 103  : #endif // _EDITOR
; 104  : 
; 105  : 	EXCEPTION_POINTERS		ex_ptrs;
; 106  : 	ex_ptrs.ContextRecord	= &context;
; 107  : 	ex_ptrs.ExceptionRecord	= 0;
; 108  : 
; 109  : 	BuildStackTrace			(&ex_ptrs);

	lea	rcx, QWORD PTR ex_ptrs$[rsp]
	mov	QWORD PTR ex_ptrs$[rsp], 0
	mov	QWORD PTR context$[rsp+248], rax
	lea	rax, QWORD PTR context$[rsp]
	mov	QWORD PTR ex_ptrs$[rsp+8], rax
	call	?BuildStackTrace@@YAXPEAU_EXCEPTION_POINTERS@@@Z ; BuildStackTrace

; 110  : 
; 111  : 	return g_stackTrace[0];

	lea	rax, OFFSET FLAT:?g_stackTrace@@3PAY0BAAA@DA ; g_stackTrace

; 112  : }

	add	rsp, 1288				; 00000508H
	ret	0
?BuildStackTrace@@YAPEBDXZ ENDP				; BuildStackTrace
END
