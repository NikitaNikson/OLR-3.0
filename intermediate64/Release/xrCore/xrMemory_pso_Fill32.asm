; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?xrMemFill32_MMX@@YAXPEAXII@Z			; xrMemFill32_MMX
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_pso_fill32.cpp
_TEXT	SEGMENT
dest$ = 8
value$ = 16
count$ = 24
?xrMemFill32_MMX@@YAXPEAXII@Z PROC			; xrMemFill32_MMX

; 14   : 	u32*	ptr = (u32*) dest;
; 15   : 	u32*	end = ptr + count;

	mov	eax, r8d
	lea	r8, QWORD PTR [rcx+rax*4]

; 16   : 	for (; ptr!=end; ) *ptr++ = value;

	cmp	rcx, r8
	je	SHORT $LN1@xrMemFill3
	npad	4
$LL2@xrMemFill3:
	mov	DWORD PTR [rcx], edx
	add	rcx, 4
	cmp	rcx, r8
	jne	SHORT $LL2@xrMemFill3
$LN1@xrMemFill3:

; 17   : }

	fatret	0
?xrMemFill32_MMX@@YAXPEAXII@Z ENDP			; xrMemFill32_MMX
_TEXT	ENDS
PUBLIC	?xrMemFill32_x86@@YAXPEAXII@Z			; xrMemFill32_x86
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
dest$ = 8
value$ = 16
count$ = 24
?xrMemFill32_x86@@YAXPEAXII@Z PROC			; xrMemFill32_x86

; 6    : 	u32*	ptr = (u32*) dest;
; 7    : 	u32*	end = ptr + count;

	mov	eax, r8d
	lea	r8, QWORD PTR [rcx+rax*4]

; 8    : 	for (; ptr!=end; ) *ptr++ = value;

	cmp	rcx, r8
	je	SHORT $LN1@xrMemFill3@2
	npad	4
$LL2@xrMemFill3@2:
	mov	DWORD PTR [rcx], edx
	add	rcx, 4
	cmp	rcx, r8
	jne	SHORT $LL2@xrMemFill3@2
$LN1@xrMemFill3@2:

; 9    : }

	fatret	0
?xrMemFill32_x86@@YAXPEAXII@Z ENDP			; xrMemFill32_x86
END
