; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp_TryEnterCriticalSection:PROC
EXTRN	__imp_LeaveCriticalSection:PROC
EXTRN	__imp_EnterCriticalSection:PROC
EXTRN	__imp_DeleteCriticalSection:PROC
EXTRN	__imp_InitializeCriticalSection:PROC
PUBLIC	??$xr_alloc@U_RTL_CRITICAL_SECTION@@@@YAPEAU_RTL_CRITICAL_SECTION@@I@Z ; xr_alloc<_RTL_CRITICAL_SECTION>
PUBLIC	?TryEnter@xrCriticalSection@@QEAAHXZ		; xrCriticalSection::TryEnter
PUBLIC	?Enter@xrCriticalSection@@QEAAXXZ		; xrCriticalSection::Enter
PUBLIC	?Leave@xrCriticalSection@@QEAAXXZ		; xrCriticalSection::Leave
PUBLIC	??1xrCriticalSection@@QEAA@XZ			; xrCriticalSection::~xrCriticalSection
PUBLIC	??0xrCriticalSection@@QEAA@XZ			; xrCriticalSection::xrCriticalSection
pdata	SEGMENT
$pdata$??1xrCriticalSection@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??1xrCriticalSection@@QEAA@XZ
$pdata$??0xrCriticalSection@@QEAA@XZ DD imagerel $LN69
	DD	imagerel $LN69+47
	DD	imagerel $unwind$??0xrCriticalSection@@QEAA@XZ
pdata	ENDS
xdata	SEGMENT
$unwind$??1xrCriticalSection@@QEAA@XZ DD 020601H
	DD	030023206H
$unwind$??0xrCriticalSection@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
_TEXT	SEGMENT
this$ = 48
??0xrCriticalSection@@QEAA@XZ PROC			; xrCriticalSection::xrCriticalSection

; 39   : {

$LN69:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 40					; 00000028H
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp

; 41   : 	InitializeCriticalSection		( (CRITICAL_SECTION*)pmutex	);

	mov	rcx, rax
	mov	QWORD PTR [rbx], rax
	call	QWORD PTR __imp_InitializeCriticalSection

; 42   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0xrCriticalSection@@QEAA@XZ ENDP			; xrCriticalSection::xrCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
_TEXT	SEGMENT
this$ = 48
??1xrCriticalSection@@QEAA@XZ PROC			; xrCriticalSection::~xrCriticalSection

; 45   : {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 46   : 	DeleteCriticalSection			( (CRITICAL_SECTION*)pmutex	);

	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_DeleteCriticalSection

; 47   : 	xr_free							( pmutex		);

	mov	rcx, rbx

; 48   : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 47   : 	xr_free							( pmutex		);

	jmp	??$xr_free@X@@YAXAEAPEAX@Z		; xr_free<void>
??1xrCriticalSection@@QEAA@XZ ENDP			; xrCriticalSection::~xrCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
_TEXT	SEGMENT
this$ = 8
?Leave@xrCriticalSection@@QEAAXXZ PROC			; xrCriticalSection::Leave

; 69   : 	LeaveCriticalSection			( (CRITICAL_SECTION*)pmutex );

	mov	rcx, QWORD PTR [rcx]
	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?Leave@xrCriticalSection@@QEAAXXZ ENDP			; xrCriticalSection::Leave
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
_TEXT	SEGMENT
this$ = 8
?Enter@xrCriticalSection@@QEAAXXZ PROC			; xrCriticalSection::Enter

; 56   : #ifdef PROFILE_CRITICAL_SECTIONS
; 57   : #	if 0//def DEBUG
; 58   : 		static bool					show_call_stack = false;
; 59   : 		if (show_call_stack)
; 60   : 			OutputDebugStackTrace	("----------------------------------------------------");
; 61   : #	endif // DEBUG
; 62   : 	profiler						temp(m_id);
; 63   : #endif // PROFILE_CRITICAL_SECTIONS
; 64   : 	EnterCriticalSection			( (CRITICAL_SECTION*)pmutex );

	mov	rcx, QWORD PTR [rcx]
	rex_jmp	QWORD PTR __imp_EnterCriticalSection
?Enter@xrCriticalSection@@QEAAXXZ ENDP			; xrCriticalSection::Enter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
_TEXT	SEGMENT
this$ = 8
?TryEnter@xrCriticalSection@@QEAAHXZ PROC		; xrCriticalSection::TryEnter

; 74   : 	return TryEnterCriticalSection	( (CRITICAL_SECTION*)pmutex );

	mov	rcx, QWORD PTR [rcx]
	rex_jmp	QWORD PTR __imp_TryEnterCriticalSection
?TryEnter@xrCriticalSection@@QEAAHXZ ENDP		; xrCriticalSection::TryEnter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
;	COMDAT ??$xr_alloc@U_RTL_CRITICAL_SECTION@@@@YAPEAU_RTL_CRITICAL_SECTION@@I@Z
_TEXT	SEGMENT
count$dead$ = 8
??$xr_alloc@U_RTL_CRITICAL_SECTION@@@@YAPEAU_RTL_CRITICAL_SECTION@@I@Z PROC ; xr_alloc<_RTL_CRITICAL_SECTION>, COMDAT

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 40					; 00000028H
	jmp	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
??$xr_alloc@U_RTL_CRITICAL_SECTION@@@@YAPEAU_RTL_CRITICAL_SECTION@@I@Z ENDP ; xr_alloc<_RTL_CRITICAL_SECTION>
_TEXT	ENDS
END
