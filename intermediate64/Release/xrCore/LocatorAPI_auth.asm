; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Buy
PUBLIC	??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
PUBLIC	??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
PUBLIC	??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
PUBLIC	??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
PUBLIC	??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
PUBLIC	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=
PUBLIC	??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=
PUBLIC	??0auth_options@@QEAA@XZ			; auth_options::auth_options
PUBLIC	??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ ; xr_new<auth_options>
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+
PUBLIC	??A?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator[]
PUBLIC	??1auth_options@@QEAA@XZ			; auth_options::~auth_options
PUBLIC	??_Gauth_options@@QEAAPEAXI@Z			; auth_options::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z ; xr_special_free<0,auth_options>::operator()
PUBLIC	??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z ; xr_delete<auth_options>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>, COMDAT

; 79   : 	return ((_Ty&&)_Arg);

	mov	rax, rcx

; 80   : 	}

	ret	0
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
_TEXT	ENDS
PUBLIC	?auth_get@CLocatorAPI@@QEAA_KXZ			; CLocatorAPI::auth_get
pdata	SEGMENT
$pdata$?auth_get@CLocatorAPI@@QEAA_KXZ DD imagerel $LN7
	DD	imagerel $LN7+48
	DD	imagerel $unwind$?auth_get@CLocatorAPI@@QEAA_KXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?auth_get@CLocatorAPI@@QEAA_KXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi_auth.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
?auth_get@CLocatorAPI@@QEAA_KXZ PROC			; CLocatorAPI::auth_get

; 29   : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 30   : 	m_auth_lock.Enter	()	;

	mov	rcx, QWORD PTR [rcx+144]
	call	QWORD PTR __imp_EnterCriticalSection

; 31   : 	m_auth_lock.Leave	()	;

	mov	rcx, QWORD PTR [rbx+144]
	call	QWORD PTR __imp_LeaveCriticalSection

; 32   : 	return	m_auth_code		;

	mov	rax, QWORD PTR [rbx+152]

; 33   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?auth_get@CLocatorAPI@@QEAA_KXZ ENDP			; CLocatorAPI::auth_get
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=, COMDAT

; 358  : 		*(_Mybase *)this += _Off;

	lea	rax, QWORD PTR [rdx+rdx*4]
	shl	rax, 3
	add	QWORD PTR [rcx], rax

; 359  : 		return (*this);

	mov	rax, rcx

; 360  : 		}

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+, COMDAT

; 364  : 		_Myiter _Tmp = *this;
; 365  : 		return (_Tmp += _Off);

	mov	rax, QWORD PTR [rcx]
	lea	r8, QWORD PTR [r8+r8*4]
	lea	rcx, QWORD PTR [rax+r8*8]
	mov	rax, rdx
	mov	QWORD PTR [rdx], rcx

; 366  : 		}

	ret	0
??H?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > > >::operator+
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
;	COMDAT ??A?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z PROC ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator[], COMDAT

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rax+rdx*8]
	ret	0
??A?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@_K@Z ENDP ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator[]
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1auth_options@@QEAA@XZ DD imagerel $LN29
	DD	imagerel $LN29+121
	DD	imagerel $unwind$??1auth_options@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1auth_options@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1auth_options@@QEAA@XZ
_TEXT	SEGMENT
$T267031 = 48
$T266985 = 48
this$ = 48
??1auth_options@@QEAA@XZ PROC				; auth_options::~auth_options, COMDAT
$LN29:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+32]
	test	rcx, rcx
	je	SHORT $LN12@auth_optio
	mov	rdx, QWORD PTR [rbx+40]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
	mov	r11, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR $T266985[rsp]
	mov	QWORD PTR $T266985[rsp], r11
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
$LN12@auth_optio:
	xor	edi, edi
	mov	QWORD PTR [rbx+32], rdi
	mov	QWORD PTR [rbx+40], rdi
	mov	QWORD PTR [rbx+48], rdi
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN25@auth_optio
	mov	rdx, QWORD PTR [rbx+8]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy
	mov	r11, QWORD PTR [rbx]
	lea	rcx, QWORD PTR $T267031[rsp]
	mov	QWORD PTR $T267031[rsp], r11
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
$LN25@auth_optio:
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rdi
	mov	QWORD PTR [rbx+16], rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1auth_options@@QEAA@XZ ENDP				; auth_options::~auth_options
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gauth_options@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$??_Gauth_options@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gauth_options@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_Gauth_options@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_Gauth_options@@QEAAPEAXI@Z PROC			; auth_options::`scalar deleting destructor', COMDAT
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1auth_options@@QEAA@XZ
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gauth_options@@QEAAPEAXI@Z ENDP			; auth_options::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrsyncronize.cpp
pdata	SEGMENT
$pdata$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD imagerel $LN33
	DD	imagerel $LN33+76
	DD	imagerel $unwind$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD imagerel $LN33+76
	DD	imagerel $LN33+126
	DD	imagerel $chain$0$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD imagerel $LN33+126
	DD	imagerel $LN33+137
	DD	imagerel $chain$1$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+76
	DD	imagerel $unwind$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN33
	DD	imagerel $LN33+76
	DD	imagerel $unwind$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z
_TEXT	SEGMENT
ptr$ = 48
??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z PROC ; xr_special_free<0,auth_options>::operator(), COMDAT

; 142  : 	{

$LN33:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 143  : 		ptr->~T			();

	mov	rcx, QWORD PTR [rcx]
	call	??1auth_options@@QEAA@XZ

; 144  : 		Memory.mem_free	(ptr);

	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	mov	rdi, QWORD PTR [rbx]
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN10@operator@58
	test	rdi, rdi
	je	SHORT $LN31@operator@58
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]

; 145  : 	}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_free

; 144  : 		Memory.mem_free	(ptr);

$LN10@operator@58:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	QWORD PTR [rsp+48], rsi
	lea	rsi, OFFSET FLAT:?mem_pools@@3PAVMEMPOOL@@A ; mem_pools
	mov	rcx, QWORD PTR [rsi+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR [rsi+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR [rsi+rbx*8]
	mov	QWORD PTR [rsi+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
	mov	rsi, QWORD PTR [rsp+48]
$LN31@operator@58:

; 145  : 	}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z ENDP ; xr_special_free<0,auth_options>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0auth_options@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0auth_options@@QEAA@XZ PROC				; auth_options::auth_options, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+32], rax
	mov	QWORD PTR [rcx+40], rax
	mov	QWORD PTR [rcx+48], rax
	mov	rax, rcx
	ret	0
??0auth_options@@QEAA@XZ ENDP				; auth_options::auth_options
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z DD imagerel $LN7
	DD	imagerel $LN7+27
	DD	imagerel $unwind$??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z PROC ; xr_delete<auth_options>, COMDAT

; 150  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 151  : 	if (ptr) 
; 152  : 	{
; 153  : 		xr_special_free<xrcore::is_polymorphic<T>::result,T>()(ptr);

	call	??R?$xr_special_free@$0A@Uauth_options@@@@QEAAXAEAPEAUauth_options@@@Z ; xr_special_free<0,auth_options>::operator()

; 154  : 		ptr = NULL;

	mov	QWORD PTR [rbx], 0

; 155  : 	}
; 156  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$xr_delete@Uauth_options@@@@YAXAEAPEAUauth_options@@@Z ENDP ; xr_delete<auth_options>
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\_stl_extensions.h
pdata	SEGMENT
$pdata$??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ DD imagerel $LN29
	DD	imagerel $LN29+67
	DD	imagerel $unwind$??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory_subst_msvc.h
xdata	ENDS
;	COMDAT ??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ
_TEXT	SEGMENT
??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ PROC	; xr_new<auth_options>, COMDAT

; 67   : {

$LN29:
	sub	rsp, 40					; 00000028H

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 64					; 00000040H
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	r11, rax

; 69   : 	return new (ptr) T();

	test	rax, rax
	je	SHORT $LN3@xr_new@5
	xor	eax, eax
	mov	QWORD PTR [r11], rax
	mov	QWORD PTR [r11+8], rax
	mov	QWORD PTR [r11+16], rax
	mov	QWORD PTR [r11+32], rax
	mov	QWORD PTR [r11+40], rax
	mov	QWORD PTR [r11+48], rax
	mov	rax, r11

; 70   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@xr_new@5:
	add	rsp, 40					; 00000028H
	ret	0
??$xr_new@Uauth_options@@@@YAPEAUauth_options@@XZ ENDP	; xr_new<auth_options>
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
pdata	SEGMENT
$pdata$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN13
	DD	imagerel $LN13+82
	DD	imagerel $unwind$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 2142 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 2143 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rcx, rdx
	je	SHORT $LN12@Copy_impl@6
	npad	3
$LL3@Copy_impl@6:

; 2144 : 		*_Dest = *_First;

	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rdi, 40					; 00000028H
	add	rbx, 40					; 00000028H
	cmp	rdi, rsi
	jne	SHORT $LL3@Copy_impl@6
$LN12@Copy_impl@6:

; 2145 : 	return (_Dest);
; 2146 : 	}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
pdata	SEGMENT
$pdata$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z DD imagerel $LN17
	DD	imagerel $LN17+82
	DD	imagerel $unwind$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata	ENDS
;	COMDAT ??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z PROC ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 2163 : 	{	// copy [_First, _Last) to [_Dest, ...)

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 2164 : 	return (_Copy_impl(_First, _Last,
; 2165 : 		_Dest, _Ptr_cat(_First, _Dest)));

	cmp	rcx, rdx
	je	SHORT $LN16@Copy_impl@7
	npad	3
$LL7@Copy_impl@7:
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
	add	rdi, 40					; 00000028H
	add	rbx, 40					; 00000028H
	cmp	rdi, rsi
	jne	SHORT $LL7@Copy_impl@7
$LN16@Copy_impl@7:

; 2166 : 	}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ENDP ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\xrmemory.h
pdata	SEGMENT
$pdata$?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z DD imagerel $LN19
	DD	imagerel $LN19+117
	DD	imagerel $unwind$?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Capacity$ = 56
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Buy, COMDAT

; 1250 : 		{	// allocate array with _Capacity elements

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1251 : 		this->_Myfirst = 0;

	xor	eax, eax
	mov	rdi, rdx
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 1252 : 		this->_Mylast = 0;

	mov	QWORD PTR [rcx+8], rax

; 1253 : 		this->_Myend = 0;

	mov	QWORD PTR [rcx+16], rax

; 1254 : 
; 1255 : 		if (_Capacity == 0)

	test	rdx, rdx

; 1256 : 			return (false);

	je	SHORT $LN5@Buy@7

; 1257 : 		else if (max_size() < _Capacity)

	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rdx, rax
	jbe	SHORT $LN2@Buy@7

; 1258 : 			_Xlen();	// result too long

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN2@Buy@7:

; 1259 : 		else
; 1260 : 			{	// nonempty array, allocate storage
; 1261 : 			this->_Myfirst = this->_Alval.allocate(_Capacity);

	mov	eax, edx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc

; 1262 : 			this->_Mylast = this->_Myfirst;
; 1263 : 			this->_Myend = this->_Myfirst + _Capacity;

	lea	rcx, QWORD PTR [rdi+rdi*4]
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rbx+16], rax

; 1264 : 			}
; 1265 : 		return (true);

	mov	al, 1
$LN5@Buy@7:

; 1266 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN18@Buy@7:
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAA_N_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Buy
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z DD imagerel $LN40
	DD	imagerel $LN40+45
	DD	imagerel $unwind$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z
_TEXT	SEGMENT
_Pdest$ = 48
_Src$ = 56
??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z PROC ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>, COMDAT

; 279  : 	{	// construct using allocator

$LN40:
	sub	rsp, 40					; 00000028H

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	test	rcx, rcx
	je	SHORT $LN9@Cons_val@35
	mov	QWORD PTR [rcx+24], 15
	mov	QWORD PTR [rcx+16], 0
	or	r9, -1
	xor	r8d, r8d
	mov	BYTE PTR [rcx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN9@Cons_val@35:

; 281  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Cons_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@AEAV23@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@AEAV20@@Z ENDP ; std::_Cons_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> >,std::basic_string<char,std::char_traits<char>,xalloc<char> > & __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
pdata	SEGMENT
$pdata$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel $LN57
	DD	imagerel $LN57+143
	DD	imagerel $unwind$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+59
	DD	imagerel $unwind$?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+41
	DD	00H
	DD	imagerel ??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z+126
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA+15
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 061b19H
	DD	0b341bH
	DD	0c009520dH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata	ENDS
;	COMDAT ??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T322750 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >, COMDAT

; 369  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

$LN57:
	mov	QWORD PTR [rsp+24], r8
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T322750[rsp], -2
	mov	QWORD PTR [rsp+88], rbx
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx

; 370  : 	_DEBUG_RANGE(_First, _Last);
; 371  : 	_DEBUG_POINTER(_Dest);
; 372  : 	_FwdIt _Next = _Dest;

	mov	QWORD PTR _Next$[rsp], rbx

; 373  : 
; 374  : 	_TRY_BEGIN

	xor	r12d, r12d
	npad	4
$LL6@Uninit_cop@15:

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	rdi, rsi
	je	SHORT $LN4@Uninit_cop@15

; 376  : 		_Cons_val(_Al, _Dest, *_First);

	test	rbx, rbx
	je	SHORT $LN22@Uninit_cop@15
	mov	QWORD PTR [rbx+24], 15
	mov	QWORD PTR [rbx+16], r12
	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN49@Uninit_cop@15
	mov	rax, QWORD PTR [rbx]
	jmp	SHORT $LN50@Uninit_cop@15
$LN49@Uninit_cop@15:
	mov	rax, rbx
$LN50@Uninit_cop@15:
	mov	BYTE PTR [rax], r12b
	or	r9, -1
	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,xalloc<char> >::assign
$LN22@Uninit_cop@15:

; 375  : 	for (; _First != _Last; ++_Dest, ++_First)

	add	rbx, 40					; 00000028H
	mov	QWORD PTR _Dest$[rsp], rbx
	add	rdi, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rdi
	jmp	SHORT $LL6@Uninit_cop@15
$LN4@Uninit_cop@15:

; 377  : 	_CATCH_ALL
; 378  : 	for (; _Next != _Dest; ++_Next)
; 379  : 		_Dest_val(_Al, _Next);
; 380  : 	_RERAISE;
; 381  : 	_CATCH_END
; 382  : 	return (_Dest);

	mov	rax, rbx

; 383  : 	}

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN56@Uninit_cop@15:
??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T322750 = 32
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Next$ = 104
?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >'::`1'::catch$0

; 377  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	push	rbp
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 378  : 	for (; _Next != _Dest; ++_Next)

	mov	rbx, QWORD PTR _Next$[rbp]
	mov	rdi, QWORD PTR _Dest$[rbp]
	cmp	rbx, rdi
	je	SHORT $LN1@catch$0@13
	npad	4
$LL3@catch$0@13:

; 379  : 		_Dest_val(_Al, _Next);

	mov	rcx, rbx
	call	??$_Dest_val@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@std@@YAXAEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@@Z ; std::_Dest_val<xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > >,std::basic_string<char,std::char_traits<char>,xalloc<char> > >

; 378  : 	for (; _Next != _Dest; ++_Next)

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL3@catch$0@13
$LN1@catch$0@13:

; 380  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >'::`1'::catch$0
; Function compile flags: /Ogtpy
text$x	ENDS
;	COMDAT ??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z PROC ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >, COMDAT

; 413  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 414  : 		_Ptr_cat(_First, _Dest)));
; 415  : 	}

	jmp	??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@Z ENDP ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Ptr$ = 24
??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>, COMDAT

; 1316 : 		{	// copy initializing [_First, _Last), using allocator
; 1317 : 		return (_Uninitialized_copy(_First, _Last,
; 1318 : 			_Ptr, this->_Alval));
; 1319 : 		}

	jmp	??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@1@PEAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
pdata	SEGMENT
$pdata$??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN65
	DD	imagerel $LN65+471
	DD	imagerel $unwind$??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata	ENDS
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T341204 = 48
this$ = 48
_Right$ = 56
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=, COMDAT

; 709  : 		{	// assign _Right

$LN65:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 710  : 		if (this != &_Right)

	cmp	rcx, rdx
	je	$LN1@operator@83

; 711  : 			{	// worth doing
; 712  : 			this->_Orphan_all();
; 713  : 
; 714  : 			if (_Right.size() == 0)

	mov	rcx, QWORD PTR [rdx+8]
	mov	r11, QWORD PTR [rdx]
	mov	rbp, 7378697629483820647		; 6666666666666667H
	mov	r8, rcx
	mov	rax, rbp
	sub	r8, r11
	imul	r8
	mov	r8, rdx
	sar	r8, 4
	mov	rax, r8
	shr	rax, 63					; 0000003fH
	add	r8, rax
	jne	SHORT $LN8@operator@83

; 715  : 				clear();	// new sequence empty, erase existing sequence

	mov	rcx, rdi
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::clear

; 716  : 			else if (_Right.size() <= size())

	jmp	$LN1@operator@83
$LN8@operator@83:
	mov	rbx, QWORD PTR [rdi+8]
	mov	r10, QWORD PTR [rdi]
	mov	rax, rbp
	mov	r9, rbx
	sub	r9, r10
	imul	r9
	mov	r9, rdx
	sar	r9, 4
	mov	rax, r9
	shr	rax, 63					; 0000003fH
	add	r9, rax
	cmp	r8, r9
	ja	SHORT $LN6@operator@83

; 717  : 				{	// enough elements, copy new and destroy old
; 718  : 				pointer _Ptr = _STD _Copy_impl(_Right._Myfirst, _Right._Mylast,
; 719  : 					this->_Myfirst);	// copy new

	mov	rdx, rcx
	mov	r8, r10
	mov	rcx, r11
	call	??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>

; 720  : 				_Destroy(_Ptr, this->_Mylast);	// destroy old

	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, rax
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy

; 721  : 				this->_Mylast = this->_Myfirst + _Right.size();

	mov	rcx, QWORD PTR [rsi+8]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rsi]
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	mov	rax, QWORD PTR [rdi]
	lea	rcx, QWORD PTR [rdx+rdx*4]
	lea	rcx, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rdi+8], rcx

; 722  : 				}
; 723  : 			else if (_Right.size() <= capacity())

	jmp	$LN1@operator@83
$LN6@operator@83:
	mov	rcx, QWORD PTR [rdi+16]
	mov	rax, rbp
	sub	rcx, r10
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	r8, rdx
	ja	SHORT $LN4@operator@83

; 724  : 				{	// enough room, copy and construct new
; 725  : 				pointer _Ptr = _Right._Myfirst + size();

	lea	rax, QWORD PTR [r9+r9*4]

; 726  : 				_STD _Copy_impl(_Right._Myfirst, _Ptr, this->_Myfirst);

	mov	r8, r10
	mov	rcx, r11
	lea	rbx, QWORD PTR [r11+rax*8]
	mov	rdx, rbx
	call	??$_Copy_impl@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00@Z ; std::_Copy_impl<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64>

; 727  : 				this->_Mylast = _Ucopy(_Ptr, _Right._Mylast, this->_Mylast);

	mov	r8, QWORD PTR [rdi+8]
	mov	rcx, rbx

; 728  : 				}
; 729  : 			else

	jmp	$LN64@operator@83
$LN4@operator@83:

; 730  : 				{	// not enough room, allocate new array and construct new
; 731  : 				if (this->_Myfirst != 0)

	test	r10, r10
	je	SHORT $LN34@operator@83

; 732  : 					{	// discard old array
; 733  : 					_Destroy(this->_Myfirst, this->_Mylast);

	mov	rdx, rbx
	mov	rcx, r10
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::_Destroy

; 734  : 					this->_Alval.deallocate(this->_Myfirst,
; 735  : 						this->_Myend - this->_Myfirst);

	mov	r11, QWORD PTR [rdi]
	lea	rcx, QWORD PTR $T341204[rsp]
	mov	QWORD PTR $T341204[rsp], r11
	call	??$xr_free@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@Z ; xr_free<std::basic_string<char,std::char_traits<char>,xalloc<char> > >
$LN34@operator@83:

; 736  : 					}
; 737  : 				if (_Buy(_Right.size()))

	mov	rcx, QWORD PTR [rsi+8]
	mov	rax, rbp
	sub	rcx, QWORD PTR [rsi]
	imul	rcx
	mov	rbx, rdx
	sar	rbx, 4
	mov	rax, rbx
	shr	rax, 63					; 0000003fH
	add	rbx, rax
	mov	eax, 0
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+16], rax
	je	SHORT $LN1@operator@83
	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rbx, rax
	jbe	SHORT $LN39@operator@83
	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN39@operator@83:
	mov	eax, ebx
	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	r8, rax
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdi+8], rax
	lea	rax, QWORD PTR [rbx+rbx*4]
	lea	rcx, QWORD PTR [r8+rax*8]
	mov	QWORD PTR [rdi+16], rcx

; 738  : 					this->_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 739  : 						this->_Myfirst);

	mov	rcx, QWORD PTR [rsi]
$LN64@operator@83:
	mov	rdx, QWORD PTR [rsi+8]
	call	??$_Uninit_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@PEAV12@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@0@PEAV10@00AEAV?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,xalloc<char> > * __ptr64,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >
	mov	QWORD PTR [rdi+8], rax
$LN1@operator@83:

; 740  : 				}
; 741  : 			}
; 742  : 		return (*this);
; 743  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN63@operator@83:
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z PROC ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=, COMDAT
$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??4?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@QEAAAEAV0@AEBV0@@Z ENDP ; xr_vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=
PUBLIC	?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z		; CLocatorAPI::auth_runtime
pdata	SEGMENT
$pdata$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD imagerel $LN573
	DD	imagerel $LN573+75
	DD	imagerel $unwind$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z
$pdata$0$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD imagerel $LN573+75
	DD	imagerel $LN573+788
	DD	imagerel $chain$0$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z
$pdata$1$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD imagerel $LN573+788
	DD	imagerel $LN573+1515
	DD	imagerel $chain$1$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD 0a1601H
	DD	0c5416H
	DD	0b3416H
	DD	0f0123216H
	DD	0c00ed010H
	DD	0600b700cH
$chain$0$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD 020521H
	DD	0ae405H
	DD	imagerel $LN573
	DD	imagerel $LN573+75
	DD	imagerel $unwind$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z
$chain$1$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z DD 021H
	DD	imagerel $LN573
	DD	imagerel $LN573+75
	DD	imagerel $unwind$?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z
; Function compile flags: /Ogtpy
; File c:\users\nummer\documents\github\olr-3.0\src\xray\xrcore\locatorapi_auth.cpp
xdata	ENDS
_TEXT	SEGMENT
this$ = 80
params$ = 88
?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z PROC		; CLocatorAPI::auth_runtime

; 36   : {

$LN573:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r15, rcx

; 37   : 	m_auth_lock.Enter	()	;

	mov	rcx, QWORD PTR [rcx+144]
	mov	r12, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 38   : 	auth_options*		_o	= (auth_options*)	params	;
; 39   : 	m_auth_code			= 0;
; 40   : 	bool				do_break = false;
; 41   : 
; 42   : #ifdef DEBUG
; 43   : 	bool				b_extern_auth = !!strstr(Core.Params,"asdf");
; 44   : 	if (!b_extern_auth)
; 45   : #endif // DEBUG
; 46   : 	{
; 47   : 		for (files_it it = files.begin(); it!=files.end(); ++it) {

	mov	rax, QWORD PTR [r15+80]
	mov	QWORD PTR [r15+152], 0
	mov	rbx, QWORD PTR [rax]
	lea	r13, OFFSET FLAT:__ImageBase
	cmp	rbx, rax
	je	$LN558@auth_runti
	mov	QWORD PTR [rsp+80], r14
	mov	r13, 7378697629483820647		; 6666666666666667H
	mov	r14d, 1
$LL35@auth_runti:

; 49   : 
; 50   : 			// test for skip
; 51   : 			BOOL	bSkip	=	FALSE;
; 52   : 			for (u32 s=0; s<_o->ignore.size(); s++) {

	mov	rcx, QWORD PTR [r12+8]
	mov	rax, r13
	xor	esi, esi
	sub	rcx, QWORD PTR [r12]
	xor	ebp, ebp
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	test	edx, edx
	je	SHORT $LN569@auth_runti

; 48   : 			const file&	f	=	*it;

	xor	edi, edi
	npad	9
$LL11@auth_runti:

; 53   : 				if (strstr(f.name,_o->ignore[s].c_str()))	

	mov	rax, QWORD PTR [r12]
	cmp	QWORD PTR [rdi+rax+24], 16
	lea	rdx, QWORD PTR [rdi+rax]
	jb	SHORT $LN115@auth_runti
	mov	rdx, QWORD PTR [rdx]
$LN115@auth_runti:
	mov	rcx, QWORD PTR [rbx+24]
	call	QWORD PTR __imp_strstr
	mov	rcx, QWORD PTR [r12+8]
	test	rax, rax
	mov	rax, r13
	cmovne	esi, r14d
	sub	rcx, QWORD PTR [r12]
	inc	ebp
	add	rdi, 40					; 00000028H
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	ebp, edx
	jb	SHORT $LL11@auth_runti

; 54   : 					bSkip	=	TRUE;
; 55   : 			}
; 56   : 
; 57   : 			if (bSkip)

	test	esi, esi
	jne	$LN13@auth_runti
$LN569@auth_runti:

; 58   : 				continue;
; 59   : 
; 60   : 			// test for important
; 61   : 			for (s=0; s<_o->important.size(); s++) {

	mov	rcx, QWORD PTR [r12+40]
	mov	rax, r13
	xor	r14d, r14d
	sub	rcx, QWORD PTR [r12+32]
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	test	edx, edx
	je	$LN572@auth_runti
	xor	r13d, r13d
	npad	1
$LL6@auth_runti:

; 62   : 				if ((f.size_real != 0) && strstr(f.name,_o->important[s].c_str())) {

	cmp	DWORD PTR [rbx+44], 0
	je	$LN5@auth_runti
	mov	rax, QWORD PTR [r12+32]
	cmp	QWORD PTR [r13+rax+24], 16
	lea	rdx, QWORD PTR [r13+rax]
	jb	SHORT $LN151@auth_runti
	mov	rdx, QWORD PTR [rdx]
$LN151@auth_runti:
	mov	rcx, QWORD PTR [rbx+24]
	call	QWORD PTR __imp_strstr
	test	rax, rax
	je	$LN5@auth_runti

; 63   : 					// crc for file				
; 64   : 					IReader*	r	= FS.r_open	(f.name);

	mov	r8, QWORD PTR [rbx+24]
	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	xor	edx, edx
	call	??$r_open_impl@VIReader@@@CLocatorAPI@@AEAAPEAVIReader@@PEBD0@Z ; CLocatorAPI::r_open_impl<IReader>
	mov	rbp, rax

; 65   : 					if (!r) {

	test	rax, rax
	je	$LN571@auth_runti

; 66   : 						do_break	= true;
; 67   : 						break;
; 68   : 					}
; 69   : 					u32 crc			= crc32		(r->pointer(),r->length());

	movsxd	r11, DWORD PTR [rax+16]
	mov	edi, DWORD PTR [rax+20]
	add	r11, QWORD PTR [rax+8]
	cmp	DWORD PTR crc32_ready, 0
	jne	SHORT $LN163@auth_runti
	call	?crc32_init@@YAXXZ			; crc32_init
	mov	DWORD PTR crc32_ready, 1
$LN163@auth_runti:
	or	esi, -1					; ffffffffH
	test	edi, edi
	je	SHORT $LN561@auth_runti
	lea	rdx, OFFSET FLAT:__ImageBase
	npad	15
$LL162@auth_runti:
	movzx	eax, BYTE PTR [r11]
	movzx	ecx, sil
	inc	r11
	xor	rcx, rax
	mov	eax, esi
	mov	esi, DWORD PTR crc32_table[rdx+rcx*4]
	shr	eax, 8
	xor	esi, eax
	dec	edi
	jne	SHORT $LL162@auth_runti
$LN561@auth_runti:

; 70   : 					
; 71   : #ifdef DEBUG
; 72   : 					if(strstr(Core.Params,"qwerty"))
; 73   : 						Msg("auth %s = %d",f.name,crc);
; 74   : #endif // DEBUG
; 75   : 
; 76   : 					FS.r_close		(r);

	mov	rax, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	not	esi
	test	DWORD PTR [rax+160], 512		; 00000200H
	je	SHORT $LN166@auth_runti
	mov	rcx, rbp
	call	??$_unregister_open_file@VIReader@@@@YAXPEAVIReader@@@Z ; _unregister_open_file<IReader>
$LN166@auth_runti:
	mov	rcx, rbp
	call	__RTCastToVoid
	mov	r8, QWORD PTR [rbp]
	xor	edx, edx
	mov	rcx, rbp
	mov	rdi, rax
	call	QWORD PTR [r8]
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	lea	rbp, QWORD PTR [rdi-1]
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN178@auth_runti
	test	rbp, rbp
	je	SHORT $LN199@auth_runti
	and	rbp, -8
	mov	rcx, QWORD PTR [rbp-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN199@auth_runti
$LN178@auth_runti:
	lea	rdi, QWORD PTR [rax+rax*4]
	lea	rax, OFFSET FLAT:__ImageBase
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[rax+rdi*8]
	call	QWORD PTR __imp_EnterCriticalSection
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[rcx+rdi*8+32]
	mov	QWORD PTR [rbp], rax
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[rcx+rdi*8+32], rbp
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[rcx+rdi*8]
	call	QWORD PTR __imp_LeaveCriticalSection
$LN199@auth_runti:

; 77   : 					m_auth_code	^=	u64(crc);

	mov	eax, esi
	xor	QWORD PTR [r15+152], rax
$LN5@auth_runti:

; 58   : 				continue;
; 59   : 
; 60   : 			// test for important
; 61   : 			for (s=0; s<_o->important.size(); s++) {

	mov	rcx, QWORD PTR [r12+40]
	mov	rax, 7378697629483820647		; 6666666666666667H
	inc	r14d
	sub	rcx, QWORD PTR [r12+32]
	add	r13, 40					; 00000028H
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	cmp	r14d, edx
	jb	$LL6@auth_runti
	mov	r13, 7378697629483820647		; 6666666666666667H
$LN572@auth_runti:

; 70   : 					
; 71   : #ifdef DEBUG
; 72   : 					if(strstr(Core.Params,"qwerty"))
; 73   : 						Msg("auth %s = %d",f.name,crc);
; 74   : #endif // DEBUG
; 75   : 
; 76   : 					FS.r_close		(r);

	mov	r14d, 1
$LN13@auth_runti:

; 38   : 	auth_options*		_o	= (auth_options*)	params	;
; 39   : 	m_auth_code			= 0;
; 40   : 	bool				do_break = false;
; 41   : 
; 42   : #ifdef DEBUG
; 43   : 	bool				b_extern_auth = !!strstr(Core.Params,"asdf");
; 44   : 	if (!b_extern_auth)
; 45   : #endif // DEBUG
; 46   : 	{
; 47   : 		for (files_it it = files.begin(); it!=files.end(); ++it) {

	cmp	BYTE PTR [rbx+57], 0
	jne	SHORT $LN566@auth_runti
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+57], 0
	jne	SHORT $LN555@auth_runti
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+57], 0
	jne	SHORT $LN566@auth_runti
	npad	8
$LL50@auth_runti:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+57], 0
	je	SHORT $LL50@auth_runti
	jmp	SHORT $LN566@auth_runti
$LN555@auth_runti:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+57], 0
	jne	SHORT $LN570@auth_runti
$LL34@auth_runti:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN570@auth_runti
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+57], 0
	je	SHORT $LL34@auth_runti
$LN570@auth_runti:
	mov	rbx, rax
$LN566@auth_runti:
	cmp	rbx, QWORD PTR [r15+80]
	jne	$LL35@auth_runti
$LN571@auth_runti:
	mov	r14, QWORD PTR [rsp+80]
	lea	r13, OFFSET FLAT:__ImageBase
$LN558@auth_runti:

; 78   : 				}
; 79   : 			}
; 80   : 		
; 81   : 			if (do_break)
; 82   : 				break;
; 83   : 		}
; 84   : #ifdef DEBUG
; 85   : 		Msg					( "auth_code = %d" , m_auth_code );
; 86   : #endif // DEBUG
; 87   : 	}
; 88   : #ifdef DEBUG
; 89   : 	else {
; 90   : 		string64			c_auth_code;
; 91   : 		sscanf				(strstr(Core.Params,"asdf ")+5,"%[^ ] ",c_auth_code);
; 92   : 		m_auth_code			= _atoi64(c_auth_code);
; 93   : 	}
; 94   : #endif // DEBUG
; 95   : 	xr_delete			(_o);

	test	r12, r12
	je	$LN546@auth_runti
	mov	rdi, QWORD PTR [r12+32]
	test	rdi, rdi
	je	$LN348@auth_runti
	mov	rbp, QWORD PTR [r12+40]
	cmp	rdi, rbp
	je	$LN226@auth_runti
	npad	7
$LL228@auth_runti:
	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN278@auth_runti
	mov	rsi, QWORD PTR [rdi]
	test	rsi, rsi
	je	SHORT $LN278@auth_runti
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rsi-1]
	dec	rsi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN257@auth_runti
	test	rsi, rsi
	je	SHORT $LN278@auth_runti
	and	rsi, -8
	mov	rcx, QWORD PTR [rsi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN278@auth_runti
$LN257@auth_runti:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32]
	mov	QWORD PTR [rsi], rax
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32], rsi
	call	QWORD PTR __imp_LeaveCriticalSection
$LN278@auth_runti:
	mov	QWORD PTR [rdi+24], 15
	mov	QWORD PTR [rdi+16], 0
	mov	BYTE PTR [rdi], 0
	add	rdi, 40					; 00000028H
	cmp	rdi, rbp
	jne	$LL228@auth_runti
$LN226@auth_runti:
	mov	rdi, QWORD PTR [r12+32]
	test	rdi, rdi
	je	SHORT $LN348@auth_runti
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN327@auth_runti
	test	rdi, rdi
	je	SHORT $LN348@auth_runti
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN348@auth_runti
$LN327@auth_runti:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
$LN348@auth_runti:
	mov	QWORD PTR [r12+32], 0
	mov	QWORD PTR [r12+40], 0
	mov	QWORD PTR [r12+48], 0
	mov	rdi, QWORD PTR [r12]
	test	rdi, rdi
	je	$LN489@auth_runti
	mov	rbp, QWORD PTR [r12+8]
	cmp	rdi, rbp
	je	$LN367@auth_runti
$LL369@auth_runti:
	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN419@auth_runti
	mov	rsi, QWORD PTR [rdi]
	test	rsi, rsi
	je	SHORT $LN419@auth_runti
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rsi-1]
	dec	rsi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN398@auth_runti
	test	rsi, rsi
	je	SHORT $LN419@auth_runti
	and	rsi, -8
	mov	rcx, QWORD PTR [rsi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN419@auth_runti
$LN398@auth_runti:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32]
	mov	QWORD PTR [rsi], rax
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32], rsi
	call	QWORD PTR __imp_LeaveCriticalSection
$LN419@auth_runti:
	mov	QWORD PTR [rdi+24], 15
	mov	QWORD PTR [rdi+16], 0
	mov	BYTE PTR [rdi], 0
	add	rdi, 40					; 00000028H
	cmp	rdi, rbp
	jne	$LL369@auth_runti
$LN367@auth_runti:
	mov	rdi, QWORD PTR [r12]
	test	rdi, rdi
	je	SHORT $LN489@auth_runti
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [rdi-1]
	dec	rdi
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN468@auth_runti
	test	rdi, rdi
	je	SHORT $LN489@auth_runti
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN489@auth_runti
$LN468@auth_runti:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
$LN489@auth_runti:
	mov	QWORD PTR [r12], 0
	mov	QWORD PTR [r12+8], 0
	mov	QWORD PTR [r12+16], 0
	inc	DWORD PTR ?Memory@@3VxrMemory@@A
	movzx	eax, BYTE PTR [r12-1]
	lea	rdi, QWORD PTR [r12-1]
	cmp	eax, 55					; 00000037H
	jne	SHORT $LN525@auth_runti
	test	rdi, rdi
	je	SHORT $LN546@auth_runti
	and	rdi, -8
	mov	rcx, QWORD PTR [rdi-8]
	call	QWORD PTR __imp_free
	jmp	SHORT $LN546@auth_runti
$LN525@auth_runti:
	lea	rbx, QWORD PTR [rax+rax*4]
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	call	QWORD PTR __imp_EnterCriticalSection
	mov	rax, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32]
	mov	QWORD PTR [rdi], rax
	mov	rcx, QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8]
	mov	QWORD PTR ?mem_pools@@3PAVMEMPOOL@@A[r13+rbx*8+32], rdi
	call	QWORD PTR __imp_LeaveCriticalSection
$LN546@auth_runti:

; 96   : 	m_auth_lock.Leave	()	;

	mov	rcx, QWORD PTR [r15+144]

; 97   : }

	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z ENDP		; CLocatorAPI::auth_runtime
_TEXT	ENDS
PUBLIC	?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z ; CLocatorAPI::auth_generate
pdata	SEGMENT
$pdata$?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z DD imagerel $LN35
	DD	imagerel $LN35+129
	DD	imagerel $unwind$?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
_TEXT	SEGMENT
this$ = 48
ignore$ = 56
important$ = 64
?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z PROC ; CLocatorAPI::auth_generate

; 16   : {

$LN35:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx

; 17   : 	auth_options*	_o	= xr_new<auth_options>	();

	lea	rcx, OFFSET FLAT:?Memory@@3VxrMemory@@A	; Memory
	mov	edx, 64					; 00000040H
	mov	rdi, r8
	call	?mem_alloc@xrMemory@@QEAAPEAX_K@Z	; xrMemory::mem_alloc
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN5@auth_gener
	xor	eax, eax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+40], rax
	mov	QWORD PTR [rbx+48], rax
	jmp	SHORT $LN6@auth_gener
$LN5@auth_gener:
	mov	rbx, rax
$LN6@auth_gener:

; 18   : 	_o->ignore			= ignore	;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=

; 19   : 	_o->important		= important	;

	lea	rcx, QWORD PTR [rbx+32]
	mov	rdx, rdi
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,xalloc<char> >,xalloc<std::basic_string<char,std::char_traits<char>,xalloc<char> > > >::operator=

; 20   : 
; 21   : #if 1
; 22   : 	FS.auth_runtime		(_o);

	mov	rcx, QWORD PTR ?xr_FS@@3PEAVCLocatorAPI@@EA ; xr_FS
	mov	rdx, rbx

; 23   : #else
; 24   : 	thread_spawn		(auth_entry,"checksum",0,_o);
; 25   : #endif
; 26   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?auth_runtime@CLocatorAPI@@QEAAXPEAX@Z	; CLocatorAPI::auth_runtime
?auth_generate@CLocatorAPI@@QEAAXAEAV?$xr_vector@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@V?$xalloc@V?$basic_string@DU?$char_traits@D@std@@V?$xalloc@D@@@std@@@@@@0@Z ENDP ; CLocatorAPI::auth_generate
END
